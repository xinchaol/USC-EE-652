<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="23:BcpCollectionExampleAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40388c70"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x4043e010"/></to>
    </wire>
    <wire loc="61:/home/xinchaol/local/src/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x4043e010"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40520418"/></to>
    </wire>
    <wire loc="24:BcpCollectionExampleAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x403921f8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4043ba88"/></to>
    </wire>
    <wire loc="66:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4043ba88"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40563780"/></to>
    </wire>
    <wire loc="25:BcpCollectionExampleAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4039a3f8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40532010"/></to>
    </wire>
    <wire loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40532010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4053f698"/></to>
    </wire>
    <wire loc="26:BcpCollectionExampleAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4039cba8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40e4a470"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40e4a470"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40b5e010"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:BcpCollectionExampleAppC.nc">
      <from><interface-ref name="sinkTimer" scoped="" ref="0x40399f10"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40e462c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40e462c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40b5e010"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:BcpCollectionExampleAppC.nc">
      <from><interface-ref name="BcpDebugIF" scoped="" ref="0x40c2a9b8"/></from>
      <to><interface-ref name="BcpDebugIF" scoped="" ref="0x40400dd8"/></to>
    </wire>
    <wire loc="34:BcpCollectionExampleAppC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40df5760"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c06d08"/></to>
    </wire>
    <wire loc="91:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40c06d08"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c28da0"/></to>
    </wire>
    <wire loc="35:BcpCollectionExampleAppC.nc">
      <from><interface-ref name="subPacket" scoped="" ref="0x40df6620"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40c05790"/></to>
    </wire>
    <wire loc="90:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40c05790"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40c25870"/></to>
    </wire>
    <wire loc="36:BcpCollectionExampleAppC.nc">
      <from><interface-ref name="getBackpressure" scoped="" ref="0x40df6e78"/></from>
      <to><interface-ref name="getBackpressure" scoped="" ref="0x40c2a0c8"/></to>
    </wire>
    <wire loc="76:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <from><interface-ref name="getBackpressure" scoped="" ref="0x40c2a0c8"/></from>
      <to><interface-ref name="getBackpressure" scoped="" ref="0x40c237f0"/></to>
    </wire>
    <wire loc="40:BcpCollectionExampleAppC.nc">
      <from><interface-ref name="ProtoControl" scoped="" ref="0x4038d010"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40c068e0"/></to>
    </wire>
    <wire loc="84:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40c068e0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40d078c0"/></to>
    </wire>
    <wire loc="85:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40c068e0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40c28978"/></to>
    </wire>
    <wire loc="41:BcpCollectionExampleAppC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x403a50a0"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x40c03e98"/></to>
    </wire>
    <wire loc="87:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x40c03e98"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x40d07380"/></to>
    </wire>
    <wire loc="42:BcpCollectionExampleAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x403d88e8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c05438"/></to>
    </wire>
    <wire loc="92:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40c05438"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c25518"/></to>
    </wire>
    <wire loc="44:BcpCollectionExampleAppC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x403dcb20"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40df9e60"/></to>
    </wire>
    <wire loc="22:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRateControllerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40df9e60"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40df4a58"/></to>
    </wire>
    <wire loc="46:BcpCollectionExampleAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x403a6010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40c05790"/></to>
    </wire>
    <wire loc="47:BcpCollectionExampleAppC.nc">
      <from><interface-ref name="BcpPacket" scoped="" ref="0x403e3c60"/></from>
      <to><interface-ref name="BcpPacket" scoped="" ref="0x40c03010"/></to>
    </wire>
    <wire loc="93:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <from><interface-ref name="BcpPacket" scoped="" ref="0x40c03010"/></from>
      <to><interface-ref name="BcpPacket" scoped="" ref="0x40c247e8"/></to>
    </wire>
    <wire loc="62:BcpCollectionExampleAppC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x403e0d18"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40df7d50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Random" scoped="" ref="0x40df7d50"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x41403968"/></to>
    </wire>
    <wire loc="63:BcpCollectionExampleAppC.nc">
      <from><interface-ref name="SafeSerialSendIF" scoped="" ref="0x403f2be0"/></from>
      <to><interface-ref name="SafeSerialSendIF" scoped="" ref="0x41060ae0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SafeSerialSendIF" scoped="" ref="0x41060ae0"/></from>
      <to><interface-ref name="SafeSerialSendIF" scoped="" ref="0x40e36010"/></to>
    </wire>
    <wire loc="64:BcpCollectionExampleAppC.nc">
      <from><interface-ref name="UartReceive" scoped="" ref="0x403f5328"/></from>
      <to><interface-ref name="UartReceive" scoped="" ref="0x4105f190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UartReceive" scoped="" ref="0x4105f190"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40e4f8c8"/>
      <arguments>
        <value cst="I:137">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:BcpCollectionExampleAppC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x403f5770"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4105f4c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="StdControl" scoped="" ref="0x4105f4c8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40e36650"/></to>
    </wire>
    <wire loc="74:BcpCollectionExampleAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x403ed3b8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40555288"/></to>
    </wire>
    <wire loc="72:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40555288"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4056f4e8"/></to>
    </wire>
    <wire loc="77:BcpCollectionExampleAppC.nc">
      <from><interface-ref name="csmaControl" scoped="" ref="0x403928e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405db708"/></to>
    </wire>
    <wire loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x405db708"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405d9798"/></to>
    </wire>
    <wire loc="63:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4043ec40"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x40fc1580"/></to>
    </wire>
    <wire loc="64:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4043ec40"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x40fbd010"/></to>
    </wire>
    <wire loc="61:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4043ec40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40f8be68"/></to>
    </wire>
    <wire loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4043ec40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40eb3560"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4043ec40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41431070"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4043ec40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41414af8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4043ec40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4139a010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4043ec40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x413a5758"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4043ec40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41366010"/></to>
    </wire>
    <wire loc="81:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4043ec40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40d07ce8"/></to>
    </wire>
    <wire loc="82:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4043ec40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c285f8"/></to>
    </wire>
    <wire loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4043ec40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40bb64b8"/></to>
    </wire>
    <wire loc="58:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4043ec40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b9f8a0"/></to>
    </wire>
    <wire loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4043ec40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b89d08"/></to>
    </wire>
    <wire loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4043ec40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40aca8c0"/></to>
    </wire>
    <wire loc="66:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4043ec40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a49118"/></to>
    </wire>
    <wire loc="62:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4043ec40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409d5ca8"/></to>
    </wire>
    <wire loc="63:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4043ec40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40689010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4043ec40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x412b2a98"/></to>
    </wire>
    <wire loc="74:/home/xinchaol/local/src/tinyos-2.x/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4043ec40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408af400"/></to>
    </wire>
    <wire loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4043ec40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40631040"/></to>
    </wire>
    <wire loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x405207b0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x402ef430"/></to>
    </wire>
    <wire loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x402ef430"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403603f0"/></to>
    </wire>
    <wire loc="57:/home/xinchaol/local/src/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40520d78"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4043dc68"/></to>
    </wire>
    <wire loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4043dc68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40445ed0"/></to>
    </wire>
    <wire loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40538240"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x4043ec40"/></to>
    </wire>
    <wire loc="26:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40442c68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4103c2b0"/></to>
    </wire>
    <wire loc="26:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40442c68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40755db8"/></to>
    </wire>
    <wire loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40442508"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x4051ea88"/></to>
    </wire>
    <wire loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x4044b6d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4051e6d8"/></to>
    </wire>
    <wire loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x4044b2c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4054c870"/></to>
    </wire>
    <wire loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x4044b2c8"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x404449d8"/></to>
    </wire>
    <wire loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x404449d8"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x404479d8"/></to>
    </wire>
    <wire loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40444da8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x40442c68"/></to>
    </wire>
    <wire loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x40458f18"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x4045e210"/></to>
    </wire>
    <wire loc="132:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x4045e210"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404a47d0"/></to>
    </wire>
    <wire loc="26:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40450920"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x40444da8"/></to>
    </wire>
    <wire loc="182:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x404714b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404f83e8"/></to>
    </wire>
    <wire loc="156:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x40469a28"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404b6790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404b6790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41144de0"/></to>
    </wire>
    <wire loc="167:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x4046d0a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404c8410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404c8410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41187538"/></to>
    </wire>
    <wire loc="176:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x40474210"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404cec88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404cec88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411d0228"/></to>
    </wire>
    <wire loc="134:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x4045d670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404a3ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404a3ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410ae9e8"/></to>
    </wire>
    <wire loc="174:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x40476ce8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404cf968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404cf968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411d4de0"/></to>
    </wire>
    <wire loc="137:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x4045ca98"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404abb00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404abb00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410bd938"/></to>
    </wire>
    <wire loc="148:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x40461210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404af6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404af6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410fd9e8"/></to>
    </wire>
    <wire loc="159:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x404678e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404c14f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404c14f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4113fc08"/></to>
    </wire>
    <wire loc="170:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x4046cea8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404c6170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404c6170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41182538"/></to>
    </wire>
    <wire loc="129:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x404542f8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404a6b80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404a6b80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410b6538"/></to>
    </wire>
    <wire loc="140:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x4045a8e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404a97d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404a97d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410f67f8"/></to>
    </wire>
    <wire loc="151:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x4045f0a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404bb330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x404bb330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410f89e8"/></to>
    </wire>
    <wire loc="162:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x40470750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404bf170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404bf170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4113aa88"/></to>
    </wire>
    <wire loc="179:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x404720a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404cc988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404cc988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411ca0b0"/></to>
    </wire>
    <wire loc="185:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x4047b590"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404fd3b0"/></to>
    </wire>
    <wire loc="165:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x4046fc08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404c9090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404c9090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4118a0b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404a47d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410b1538"/></to>
    </wire>
    <wire loc="143:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x40464830"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404a74f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404a74f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410f16c0"/></to>
    </wire>
    <wire loc="183:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x4047c0c0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404f58f0"/></to>
    </wire>
    <wire loc="146:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x40463ce8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404b03d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404b03d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41100538"/></to>
    </wire>
    <wire loc="157:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x404684b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404b5170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404b5170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411427f8"/></to>
    </wire>
    <wire loc="168:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x4046da98"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404c8d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404c8d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41185010"/></to>
    </wire>
    <wire loc="177:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x40474c08"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404cd6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404cd6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411cfc08"/></to>
    </wire>
    <wire loc="135:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x4045c0a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404a24f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404a24f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410ac538"/></to>
    </wire>
    <wire loc="138:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x4045b4b0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404aa4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404aa4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410bb3b0"/></to>
    </wire>
    <wire loc="149:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x40461c08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404ae030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404ae030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410fb538"/></to>
    </wire>
    <wire loc="160:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x404652f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404c1e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x404c1e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4113d6c0"/></to>
    </wire>
    <wire loc="171:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x4046b8e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404c6ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404c6ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41180010"/></to>
    </wire>
    <wire loc="130:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x40454cf0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404a54f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404a54f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410b4010"/></to>
    </wire>
    <wire loc="141:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x404592f0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404a8170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404a8170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410f4228"/></to>
    </wire>
    <wire loc="152:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x4045fa98"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404bbc88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404bbc88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41134538"/></to>
    </wire>
    <wire loc="180:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x40472a98"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404cb330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404cb330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411c9a88"/></to>
    </wire>
    <wire loc="155:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x4046aea8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404b7dc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404b7dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41145418"/></to>
    </wire>
    <wire loc="166:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x4046e670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404c99e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404c99e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41189a88"/></to>
    </wire>
    <wire loc="175:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x40475750"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404ce330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404ce330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411d27f8"/></to>
    </wire>
    <wire loc="186:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x4047a010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404fb8a0"/></to>
    </wire>
    <wire loc="133:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x4045ec08"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404a3170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x404a3170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410af010"/></to>
    </wire>
    <wire loc="144:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x404632f0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404a7e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404a7e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410ef0b0"/></to>
    </wire>
    <wire loc="173:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x404762f0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404cf010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404cf010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411d5418"/></to>
    </wire>
    <wire loc="147:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x40462750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404b0d30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404b0d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410fe010"/></to>
    </wire>
    <wire loc="158:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x40468ea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404b5ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404b5ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41140228"/></to>
    </wire>
    <wire loc="169:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x4046c4b0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404c7790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x404c7790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411849e8"/></to>
    </wire>
    <wire loc="178:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x40473670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404cc030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x404cc030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411cd6c0"/></to>
    </wire>
    <wire loc="128:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x404528f0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404a6228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404a6228"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410b8a88"/></to>
    </wire>
    <wire loc="139:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x4045bea8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404aae48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404aae48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410bad70"/></to>
    </wire>
    <wire loc="150:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x40460670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404ae988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404ae988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410f9010"/></to>
    </wire>
    <wire loc="161:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x40465ce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404c07d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404c07d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4113b0b0"/></to>
    </wire>
    <wire loc="184:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x4047cab8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40501dd8"/></to>
    </wire>
    <wire loc="164:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x4046f210"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404bc6f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404bc6f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4118c6c0"/></to>
    </wire>
    <wire loc="153:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x4046a4b0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404ba6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404ba6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41132010"/></to>
    </wire>
    <wire loc="131:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x40453750"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404a5e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404a5e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410b39e8"/></to>
    </wire>
    <wire loc="142:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x40459d68"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404a8ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x404a8ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410f3c08"/></to>
    </wire>
    <wire loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x402f6bc0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40360c28"/></to>
    </wire>
    <wire loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x4035f8b8"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x40365200"/></to>
    </wire>
    <wire loc="58:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x40379498"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x406c27b8"/></to>
    </wire>
    <wire loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4054c870"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4053f350"/></to>
    </wire>
    <wire loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x4053e400"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x40541a88"/></to>
    </wire>
    <wire loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40541a88"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x40454cf0"/></to>
    </wire>
    <wire loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x4053ede8"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x4054d4c0"/></to>
    </wire>
    <wire loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x4054d4c0"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x404542f8"/></to>
    </wire>
    <wire loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x4053d820"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x4054dec8"/></to>
    </wire>
    <wire loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x4054dec8"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x404528f0"/></to>
    </wire>
    <wire loc="95:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40563780"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40be3010"/></to>
    </wire>
    <wire loc="68:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4055f670"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40570100"/></to>
    </wire>
    <wire loc="83:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40570100"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40572f20"/></to>
    </wire>
    <wire loc="70:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40556798"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x4056f178"/></to>
    </wire>
    <wire loc="86:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x4056f178"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x4058f010"/></to>
    </wire>
    <wire loc="71:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40556af0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4056e190"/></to>
    </wire>
    <wire loc="82:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4056e190"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4058e010"/></to>
    </wire>
    <wire loc="76:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40565e98"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40a95668"/></to>
    </wire>
    <wire loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40a95668"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40a8dec0"/></to>
    </wire>
    <wire loc="69:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40556100"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40570ac0"/></to>
    </wire>
    <wire loc="85:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40570ac0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x405908f8"/></to>
    </wire>
    <wire loc="73:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4055a518"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40579f00"/></to>
    </wire>
    <wire loc="91:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40579f00"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x40a96520"/></to>
    </wire>
    <wire loc="87:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4056f4e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4058f380"/></to>
    </wire>
    <wire loc="77:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4055d888"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40a93100"/></to>
    </wire>
    <wire loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40a93100"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40aae888"/></to>
    </wire>
    <wire loc="63:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40be3010"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40be2a70"/></to>
    </wire>
    <wire loc="81:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x4056b100"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x4058d100"/></to>
    </wire>
    <wire loc="84:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40583ec0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x4058ea08"/></to>
    </wire>
    <wire loc="90:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40579868"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40a4ae00"/></to>
    </wire>
    <wire loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40a4ae00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40a90678"/></to>
    </wire>
    <wire loc="89:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40589500"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40be4480"/></to>
    </wire>
    <wire loc="64:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40be4480"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40be16c0"/></to>
    </wire>
    <wire loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x40a96520"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x40a90d60"/></to>
    </wire>
    <wire loc="88:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x405853e8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40be59c8"/></to>
    </wire>
    <wire loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40be59c8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40bfbe00"/></to>
    </wire>
    <wire loc="92:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40576328"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a95010"/></to>
    </wire>
    <wire loc="58:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a95010"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a8d868"/></to>
    </wire>
    <wire loc="96:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x40be2a70"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405db708"/></to>
    </wire>
    <wire loc="99:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4058d950"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40ba5b18"/></to>
    </wire>
    <wire loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40ba5b18"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40b9f1d8"/></to>
    </wire>
    <wire loc="100:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40ba2308"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40be52c8"/></to>
    </wire>
    <wire loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40be52c8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40bfb150"/></to>
    </wire>
    <wire loc="101:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40bfb150"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40bba9b8"/></to>
    </wire>
    <wire loc="61:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40bba9b8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40be3ed0"/></to>
    </wire>
    <wire loc="102:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40be3ed0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40bbbf18"/></to>
    </wire>
    <wire loc="79:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40bbbf18"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40bcde40"/></to>
    </wire>
    <wire loc="103:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40bcede8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x405dbd10"/></to>
    </wire>
    <wire loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x405dbd10"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x405d9da0"/></to>
    </wire>
    <wire loc="106:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4058c0e8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40be40b8"/></to>
    </wire>
    <wire loc="62:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40be40b8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40be2650"/></to>
    </wire>
    <wire loc="107:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40be2650"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40ba37f0"/></to>
    </wire>
    <wire loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40ba37f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40bb9d08"/></to>
    </wire>
    <wire loc="108:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40bb9098"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40bce610"/></to>
    </wire>
    <wire loc="80:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40bce610"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40bca558"/></to>
    </wire>
    <wire loc="109:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40bcea38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x405da458"/></to>
    </wire>
    <wire loc="68:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x405da458"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a4c010"/></to>
    </wire>
    <wire loc="111:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4059e620"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x409b4448"/></to>
    </wire>
    <wire loc="112:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x4058c480"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40a4ae00"/></to>
    </wire>
    <wire loc="113:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x405973b8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a96aa0"/></to>
    </wire>
    <wire loc="57:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a96aa0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a8d3b8"/></to>
    </wire>
    <wire loc="114:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x405a1ce8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x40617e38"/></to>
    </wire>
    <wire loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x40617e38"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x40631b08"/></to>
    </wire>
    <wire loc="116:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x4059ed60"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x405da810"/></to>
    </wire>
    <wire loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x405da810"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x405e8570"/></to>
    </wire>
    <wire loc="63:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40a4c010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a49e98"/></to>
    </wire>
    <wire loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x405e4e00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40617700"/></to>
    </wire>
    <wire loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40617700"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x406313d0"/></to>
    </wire>
    <wire loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x405e6010"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x40626e00"/></to>
    </wire>
    <wire loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x40626e00"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x40630b20"/></to>
    </wire>
    <wire loc="63:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x405e6a58"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x409cbbf0"/></to>
    </wire>
    <wire loc="69:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x405e6a58"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40a4f568"/></to>
    </wire>
    <wire loc="61:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40a4f568"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40a494b8"/></to>
    </wire>
    <wire loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x409cbbf0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x409d4060"/></to>
    </wire>
    <wire loc="64:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x405f1040"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x409c80f0"/></to>
    </wire>
    <wire loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x409c80f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x409d4558"/></to>
    </wire>
    <wire loc="65:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x405f1800"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x409c8808"/></to>
    </wire>
    <wire loc="57:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x409c8808"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x409d4c90"/></to>
    </wire>
    <wire loc="72:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x405ec0f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40a4ae00"/></to>
    </wire>
    <wire loc="73:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x405ec770"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a96aa0"/></to>
    </wire>
    <wire loc="76:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x405f0010"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40b890a0"/></to>
    </wire>
    <wire loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40b890a0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40badb08"/></to>
    </wire>
    <wire loc="79:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x405faf10"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40b8bbf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40b8bbf8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x408b03b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x405f0458"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40532010"/></to>
    </wire>
    <wire loc="76:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x405f7080"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f6bc0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x405f8850"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f6bc0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x405f8010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f6bc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x40622c70"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x4062f680"/></to>
    </wire>
    <wire loc="63:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x40628610"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x406895d8"/></to>
    </wire>
    <wire loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x406895d8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x407d3e78"/></to>
    </wire>
    <wire loc="66:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x4062c030"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x4068be50"/></to>
    </wire>
    <wire loc="81:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x4068be50"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x4045ca98"/></to>
    </wire>
    <wire loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x4062ca38"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x407cdcd0"/></to>
    </wire>
    <wire loc="84:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x407cdcd0"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x4045d670"/></to>
    </wire>
    <wire loc="68:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x4063b4c0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x407e5128"/></to>
    </wire>
    <wire loc="86:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x407e5128"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x4045ec08"/></to>
    </wire>
    <wire loc="71:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x40636600"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x407de5e8"/></to>
    </wire>
    <wire loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x407de5e8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x40840b30"/></to>
    </wire>
    <wire loc="74:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40643998"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40989070"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40989070"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40852418"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x406448b0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x409886c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x409886c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40644cc8"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x40986190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40986190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40643578"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x40988010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40988010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40643158"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x409864e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x409864e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40632ae0"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x40982468"/></to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40982468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x406380a0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x409805c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x409805c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x406385a8"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x40980a00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40980a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40638ac8"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x409844b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x409844b8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40635010"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x409848f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x409848f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x40633388"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x4097d190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x4097d190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40851e70"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40635520"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x40983e38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40983e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x40635a18"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x40984d28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x40984d28"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x40642a18"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40996678"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40996678"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40852418"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x40642168"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409a6d38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x409a6d38"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40852418"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40636ca8"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x409b4448"/></to>
    </wire>
    <wire loc="118:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x4063dcc8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f6bc0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x4063d4e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f6bc0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40689010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407d27f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x407d27f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407d4bc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x407d3e78"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41222800"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x41222800"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4125f0a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x4125cde0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4121d610"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x4121d610"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41257560"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x4125eb90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40786740"/></to>
    </wire>
    <wire loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40786740"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40784e60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x41254010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40697340"/></to>
    </wire>
    <wire loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40697340"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406fc410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x412522d0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x406aebb0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x406a3208"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x406fa770"/></to>
    </wire>
    <wire loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x406a9078"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x406f8508"/></to>
    </wire>
    <wire loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x406aebb0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x4070c450"/></to>
    </wire>
    <wire loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x406aebb0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x407090b8"/></to>
    </wire>
    <wire loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x406aebb0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40708cb0"/></to>
    </wire>
    <wire loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x40705888"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x406b8678"/></to>
    </wire>
    <wire loc="61:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x406b8678"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x406c5360"/></to>
    </wire>
    <wire loc="63:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x406c9c90"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x406c2c18"/></to>
    </wire>
    <wire loc="62:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x406bc010"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x406c5cc0"/></to>
    </wire>
    <wire loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x406b2eb8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406c7068"/></to>
    </wire>
    <wire loc="27:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40754220"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40697340"/></to>
    </wire>
    <wire loc="34:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x407a90e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40783170"/></to>
    </wire>
    <wire loc="31:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40783170"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407998e8"/></to>
    </wire>
    <wire loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40798a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40697340"/></to>
    </wire>
    <wire loc="82:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x407ce860"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x404632f0"/></to>
    </wire>
    <wire loc="83:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x407cd2e8"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x4046cea8"/></to>
    </wire>
    <wire loc="80:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x4068b478"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x40465ce8"/></to>
    </wire>
    <wire loc="85:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x407cc730"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x404678e0"/></to>
    </wire>
    <wire loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x407dceb8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x407da350"/></to>
    </wire>
    <wire loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x407decf8"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x407e7700"/></to>
    </wire>
    <wire loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x407da9d8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x406a9078"/></to>
    </wire>
    <wire loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x407e7cf8"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x4080b6b8"/></to>
    </wire>
    <wire loc="68:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x4080b6b8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4082ca08"/></to>
    </wire>
    <wire loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x4083d250"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x4068b478"/></to>
    </wire>
    <wire loc="63:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x407f49e8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4081c010"/></to>
    </wire>
    <wire loc="66:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x4080c4f8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x408305e0"/></to>
    </wire>
    <wire loc="69:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x4080a010"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40829c70"/></to>
    </wire>
    <wire loc="64:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x407f3338"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4081a228"/></to>
    </wire>
    <wire loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x4080cd78"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4082e840"/></to>
    </wire>
    <wire loc="62:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x407f4168"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4080fe60"/></to>
    </wire>
    <wire loc="65:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x407f3bb8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x408323b0"/></to>
    </wire>
    <wire loc="71:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4080e630"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x40807b60"/></to>
    </wire>
    <wire loc="72:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4081c7c8"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x40806010"/></to>
    </wire>
    <wire loc="73:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4081a9e0"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x40806488"/></to>
    </wire>
    <wire loc="74:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40832b68"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x40806900"/></to>
    </wire>
    <wire loc="75:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40830d98"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x40806d78"/></to>
    </wire>
    <wire loc="76:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4082d010"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x408052b0"/></to>
    </wire>
    <wire loc="77:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4082b270"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x40805728"/></to>
    </wire>
    <wire loc="78:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40828438"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x40805ba0"/></to>
    </wire>
    <wire loc="69:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x4083cac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f6bc0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x4097c550"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40851428"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x40988368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40982cd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x40980190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40988d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x4097da00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40851e70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x409835c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x4097fb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40989728"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40852b68"/></to>
    </wire>
    <wire loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40852b68"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x4086a9d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40986b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40986ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40985308"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40983190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x4097e010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x4097d5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40851e70"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40980e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40989c40"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x40984080"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40983a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x4097de38"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40851428"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x409828a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40985660"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x40985d10"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x4097ecb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40851e70"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40986840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x4097e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x4097e448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40988a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x409859b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x4097f2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x4097f6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x40851428"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40867c68"/></to>
    </wire>
    <wire loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x40851e70"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x408666a8"/></to>
    </wire>
    <wire loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x4086b660"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40866e50"/></to>
    </wire>
    <wire loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40852418"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40867238"/></to>
    </wire>
    <wire loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x4086be38"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40865630"/></to>
    </wire>
    <wire loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x408623b8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40898040"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40898040"/></from>
      <to><interface-ref name="State" scoped="" ref="0x408b03b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40865a70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x408adbe8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x408adbe8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4095f420"/></to>
    </wire>
    <wire loc="63:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x40863a90"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40977330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiByte" scoped="" ref="0x40977330"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x408bbee0"/></to>
    </wire>
    <wire loc="64:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x4085feb8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x40977668"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiPacket" scoped="" ref="0x40977668"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x408b82a0"/></to>
    </wire>
    <wire loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40862b60"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40532010"/></to>
    </wire>
    <wire loc="88:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x40877980"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f6bc0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/xinchaol/local/src/tinyos-2.x/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x408b03b0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x408afa30"/></to>
    </wire>
    <wire loc="79:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x408b82a0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x408b3280"/></to>
    </wire>
    <wire loc="78:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x408bbee0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x408b7ef8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x408ad8b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408bbb60"/></to>
    </wire>
    <wire loc="76:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x408bbb60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408b7b98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubResource" scoped="" ref="0x4095fbe0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x408b89f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SS" scoped="" ref="0x4095e3a8"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x4045ca98"/></to>
    </wire>
    <wire loc="80:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x408b89f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x408b39b0"/></to>
    </wire>
    <wire loc="82:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x408ce8c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40938170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40938170"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x412b0e18"/></to>
    </wire>
    <wire loc="83:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x408ddf18"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40938cb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40938cb8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x412af9b0"/></to>
    </wire>
    <wire loc="84:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x408debc8"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x408b5b18"/></to>
    </wire>
    <wire loc="66:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x408b5b18"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x408f0f28"/></to>
    </wire>
    <wire loc="85:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x408dc3b0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40365ec0"/></to>
    </wire>
    <wire loc="207:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x408eb1e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f6bc0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x40905598"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40365ec0"/></to>
    </wire>
    <wire loc="69:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x40906d00"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x4045ca98"/></to>
    </wire>
    <wire loc="70:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x40908730"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x4045b4b0"/></to>
    </wire>
    <wire loc="71:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x40907128"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x4045bea8"/></to>
    </wire>
    <wire loc="72:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x40907b10"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x4045a8e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x409388b0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x412af5a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x412afe70"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40964208"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x412ae2b0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x412b2dd0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x412ae8a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f6bc0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x4098f5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x409a9ca0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40851428"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x40995920"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40992af8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x4098e448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x4098e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40994368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409a9190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40851e70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x40991448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40991cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x4098ecb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x4098c2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40996d30"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40852b68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40993190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x409934e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x409938c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40994a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40991880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40991010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x409955c8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x4098c6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x4098bcb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40851e70"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x4098d5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40995270"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x409926c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x4098f190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x409a95c8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40851428"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x4098d190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x4098fb00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x40995c78"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x4098e010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40993c18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x40992368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x4098b880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40851e70"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x4098b448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40851e70"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40994d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x4098b010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x4098cb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40994010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x409946c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x40992010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x4098da00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x4098de38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x4099fbd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x409b9270"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40851428"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x409a4010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x409a0270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x4099ea00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x4099ee38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x409a4a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409ba6e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40851e70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x409a0ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x4099f368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x4099d2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x4099c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x409a5410"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40852b68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x409a3840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x409a3b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x409a2010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x409a3190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x409a0f18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x409a06a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x409a5c80"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x4099ccb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x409ba2b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40851e70"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x4099db20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x409a5928"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x409a2d70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x4099f7a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x409bab20"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40851428"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x4099d6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x4099e190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x409a4368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x4099e5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x409a2368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x409a2a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x409bbe38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40851e70"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x409bba00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40851e70"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x409a34e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x409bb5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x409bb190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x409a46c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x409a4d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x409a26c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x4099c010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x4099c448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x409c78f0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x409d3650"/></to>
    </wire>
    <wire loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x409c7d58"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x409d3ad8"/></to>
    </wire>
    <wire loc="66:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x409d20e0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x406895d8"/></to>
    </wire>
    <wire loc="69:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x409ee4f0"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x4068b478"/></to>
    </wire>
    <wire loc="70:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x409ed010"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x4068be50"/></to>
    </wire>
    <wire loc="71:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x409eda08"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x407cc730"/></to>
    </wire>
    <wire loc="74:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x409eae58"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x407dceb8"/></to>
    </wire>
    <wire loc="77:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x409e94f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a3da40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40a3da40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40852418"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x409e9c48"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40a3c170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40a3c170"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40852b68"/></to>
    </wire>
    <wire loc="79:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x409e63f0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x40a3c688"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40a3c688"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x409e6800"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x40a3b408"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40a3b408"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x409e6c30"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x40a3b760"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40a3b760"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x409e5088"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x40a394e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40a394e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x409e8ee0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x40a36010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40a36010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x409e8238"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x40a54dc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40a54dc0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40851428"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409e89d8"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40a542b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40a542b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40851e70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x409e54c8"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x40a372b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40a372b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x409e1390"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x40a4fa08"/></to>
    </wire>
    <wire loc="62:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x40a4fa08"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x40a49958"/></to>
    </wire>
    <wire loc="92:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x409d1af0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40a4ae00"/></to>
    </wire>
    <wire loc="93:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x409cf218"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a96aa0"/></to>
    </wire>
    <wire loc="94:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x409cf880"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40a95668"/></to>
    </wire>
    <wire loc="95:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x409ea788"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a91888"/></to>
    </wire>
    <wire loc="61:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a91888"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40aac010"/></to>
    </wire>
    <wire loc="98:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x409e18b8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40532010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40a36880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x40a3cd38"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40a38e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40a356a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x40a35ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x40a376e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40a35f18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x40a56468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40a39840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40a39c18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40a3be10"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40a37b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40a3c9e0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x40a568a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40a55e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40851e70"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40a337a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x40a38a18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40a36448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40a546e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40851428"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40a33368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40a36db8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x40a3b0b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40a35270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40a38010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x40a386c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x40a55a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40851e70"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40a555c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40851e70"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40a39190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40a55190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40a56cd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40a3bab8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x40a38368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40a33bd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x40a56030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x40a4c4a8"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x40a47380"/></to>
    </wire>
    <wire loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40a64968"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40532010"/></to>
    </wire>
    <wire loc="68:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x40a47758"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x4068be50"/></to>
    </wire>
    <wire loc="69:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x40a46220"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x407ce860"/></to>
    </wire>
    <wire loc="70:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x40a46c30"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x407cd2e8"/></to>
    </wire>
    <wire loc="71:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x40a45708"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x407decf8"/></to>
    </wire>
    <wire loc="72:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40a45dc8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a97b28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40a97b28"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40852418"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40a685b8"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x40b746e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40b746e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40851428"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40a67188"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x40b7d260"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40b7d260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x40a68d40"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x40b7d910"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40b7d910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40a675c0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40a4ae00"/></to>
    </wire>
    <wire loc="77:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a67c40"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a96aa0"/></to>
    </wire>
    <wire loc="78:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a652b0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40a95668"/></to>
    </wire>
    <wire loc="79:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x40a660f0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x40617e38"/></to>
    </wire>
    <wire loc="115:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x40a5d8e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f6bc0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40aac638"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4056e190"/></to>
    </wire>
    <wire loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40ad2828"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40786740"/></to>
    </wire>
    <wire loc="68:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x40aa9ba0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40acce70"/></to>
    </wire>
    <wire loc="72:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x40aab610"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40ac5418"/></to>
    </wire>
    <wire loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40ac5418"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40b692f8"/></to>
    </wire>
    <wire loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40ac7100"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b44808"/></to>
    </wire>
    <wire loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40aca8c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40ae9ae0"/></to>
    </wire>
    <wire loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40ae9ae0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b19640"/></to>
    </wire>
    <wire loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x40b6eb78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40ae6a88"/></to>
    </wire>
    <wire loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40b23e50"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x40ae50e0"/></to>
    </wire>
    <wire loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x40ae50e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40b19a78"/></to>
    </wire>
    <wire loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40b69c90"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x40ae4d20"/></to>
    </wire>
    <wire loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x40ae4d20"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40b165b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x40b165b8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x41331b70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x40b19640"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41334c38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40b19a78"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x413330a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x41330d60"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406b2eb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x4132c010"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x406b8678"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x4132c838"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x406bc010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x4132a278"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x406c9c90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x40b48818"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f6bc0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x40b6bda8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f6bc0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40b65e10"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40b5e010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40b5e010"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ac7100"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40b7a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40b74dc0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40851428"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x40b80e18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40b7cec0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40b786a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x40b78ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40b7f840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40b742b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40851e70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x40b7b758"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40b7a010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40b78f18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x40b76468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40b80250"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40852b68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40b7d5b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40b7dce8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40b7fef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40b7bb90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40b7b320"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40b80ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x40b768a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40b75e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40851e70"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40b777a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40b80768"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x40b7ca88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40b7a448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40b77368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40b7adb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x40b7f190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40b78270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40b7c080"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x40b7c730"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x40b75a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40851e70"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40b755c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40851e70"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40b75190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40b76cd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40b7f4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40b7fb98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x40b7c3d8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4086be38"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40b77bd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x40b76030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4086b660"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x40b877b8"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x40bad248"/></to>
    </wire>
    <wire loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40b8c598"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b89d08"/></to>
    </wire>
    <wire loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40b9fc90"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40ba2308"/></to>
    </wire>
    <wire loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x40b9e428"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40ba10e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40ba10e8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x408b03b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40b9ebe0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40b890a0"/></to>
    </wire>
    <wire loc="62:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40b9c108"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a96aa0"/></to>
    </wire>
    <wire loc="57:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x40ba3c18"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x40bb6170"/></to>
    </wire>
    <wire loc="58:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40bb68e0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40bb9098"/></to>
    </wire>
    <wire loc="62:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40bb6ca0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a96aa0"/></to>
    </wire>
    <wire loc="81:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40bc80c8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40bcede8"/></to>
    </wire>
    <wire loc="82:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40bc8830"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40bcea38"/></to>
    </wire>
    <wire loc="84:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40bc8bf0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a96aa0"/></to>
    </wire>
    <wire loc="65:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x40be3680"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40be0338"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40be0338"/></from>
      <to><interface-ref name="State" scoped="" ref="0x408b03b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40bf85f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4055a518"/></to>
    </wire>
    <wire loc="89:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x40c2b7f0"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x40c24010"/></to>
    </wire>
    <wire loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <from><interface-ref name="SendStack" scoped="" ref="0x40c3a3a0"/></from>
      <to><interface-ref name="Stack" scoped="" ref="0x40d6b940"/></to>
    </wire>
    <wire loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <from><interface-ref name="SnoopQueue" scoped="" ref="0x40c31340"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x40d836a8"/></to>
    </wire>
    <wire loc="57:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <from><interface-ref name="QEntryPool" scoped="" ref="0x40c1adb8"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x40d42828"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pool" scoped="" ref="0x40d42828"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x413a5b00"/></to>
    </wire>
    <wire loc="58:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <from><interface-ref name="MessagePool" scoped="" ref="0x40c1d3f0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x40d083d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pool" scoped="" ref="0x40d083d0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x413663b8"/></to>
    </wire>
    <wire loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <from><interface-ref name="SnoopPool" scoped="" ref="0x40c3ba60"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x40d3fb40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pool" scoped="" ref="0x40d3fb40"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x4139a3b8"/></to>
    </wire>
    <wire loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <from><interface-ref name="BeaconTimer" scoped="" ref="0x40c35010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40d73cc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40d73cc8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40b5e010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c22128"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40d96cc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40d96cc0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x413c5328"/></to>
    </wire>
    <wire loc="62:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c22890"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40de3118"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40de3118"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40556100"/>
      <arguments>
        <value cst="I:145">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403c79f0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x40c22c68"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40dddbd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40dddbd8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40556798"/>
      <arguments>
        <value cst="I:145">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403c79f0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40c21090"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40db53f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40db53f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40556af0"/></to>
    </wire>
    <wire loc="65:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x40c1f010"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x40d07380"/></to>
    </wire>
    <wire loc="66:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x40c50e88"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4043ba88"/></to>
    </wire>
    <wire loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <from><interface-ref name="DataPacketAcknowledgements" scoped="" ref="0x40c21930"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x40de66b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40de66b0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4055a518"/></to>
    </wire>
    <wire loc="68:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <from><interface-ref name="AMDataPacket" scoped="" ref="0x40c59d10"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40db5a88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40db5a88"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40555288"/></to>
    </wire>
    <wire loc="69:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <from><interface-ref name="RouterForwarderIF" scoped="" ref="0x40c59120"/></from>
      <to><interface-ref name="RouterForwarderIF" scoped="" ref="0x40d0a7c0"/></to>
    </wire>
    <wire loc="70:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <from><interface-ref name="DelayPacketTimer" scoped="" ref="0x40c4e620"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40d9c930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40d9c930"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40b5e010"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <from><interface-ref name="BeaconReceive" scoped="" ref="0x40c20c68"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40dd51f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40dd51f8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40556100"/>
      <arguments>
        <value cst="I:144">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403c79f0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <from><interface-ref name="BeaconSend" scoped="" ref="0x40c204e0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40dd81f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40dd81f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x413e03b0"/></to>
    </wire>
    <wire loc="73:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <from><interface-ref name="BcpDebugIF" scoped="" ref="0x40c4c858"/></from>
      <to><interface-ref name="BcpDebugIF" scoped="" ref="0x40c2a9b8"/></to>
    </wire>
    <wire loc="74:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c20010"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a96aa0"/></to>
    </wire>
    <wire loc="75:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <from><interface-ref name="txRetryTimer" scoped="" ref="0x40c58bb8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40d70ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40d70ac8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40b5e010"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <from><interface-ref name="BlacklistTimer" scoped="" ref="0x40d06218"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40d70ac8"/></to>
    </wire>
    <wire loc="79:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <from><interface-ref name="BcpDebugIF" scoped="" ref="0x40d044e0"/></from>
      <to><interface-ref name="BcpDebugIF" scoped="" ref="0x40c2a9b8"/></to>
    </wire>
    <wire loc="238:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpForwardingEngineP.nc">
      <from><interface-ref name="sendBeaconTask" scoped="" ref="0x40c60468"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f6bc0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="315:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpForwardingEngineP.nc">
      <from><interface-ref name="sendDataTask" scoped="" ref="0x40c85920"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f6bc0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="268:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpForwardingEngineP.nc">
      <from><interface-ref name="snoopHandlerTask" scoped="" ref="0x40c5eea0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f6bc0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x413c59f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40db44c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x413c4150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40555288"/></to>
    </wire>
    <wire loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40db44c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40dbb3d8"/></to>
    </wire>
    <wire loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40dbbb48"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4055f670"/></to>
    </wire>
    <wire loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40dba230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40555288"/></to>
    </wire>
    <wire loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40dbae08"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40556af0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x40db9510"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f6bc0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x40db9948"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f6bc0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40de3430"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40556af0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40de3ac8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40555288"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40dddef0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40556af0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40ddc5a0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40555288"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40dd8890"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40556af0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40dd8f28"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40555288"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40dd7b30"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4055a518"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x413e0a78"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40db44c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x413df150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40555288"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40dd5510"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40556af0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40dd5ba8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40555288"/></to>
    </wire>
    <wire loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRateControllerC.nc">
      <from><interface-ref name="getBackpressure" scoped="" ref="0x40df00f8"/></from>
      <to><interface-ref name="getBackpressure" scoped="" ref="0x40df6e78"/></to>
    </wire>
    <wire loc="24:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRateControllerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40de7c20"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40df5760"/></to>
    </wire>
    <wire loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRateControllerC.nc">
      <from><interface-ref name="BcpDebugIF" scoped="" ref="0x40df1208"/></from>
      <to><interface-ref name="BcpDebugIF" scoped="" ref="0x40df5e60"/></to>
    </wire>
    <wire loc="26:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRateControllerC.nc">
      <from><interface-ref name="subPacket" scoped="" ref="0x40df1880"/></from>
      <to><interface-ref name="subPacket" scoped="" ref="0x40df6620"/></to>
    </wire>
    <wire loc="27:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRateControllerC.nc">
      <from><interface-ref name="setMean" scoped="" ref="0x40ded6c0"/></from>
      <to><interface-ref name="setMean" scoped="" ref="0x40e25110"/></to>
    </wire>
    <wire>
      <from><interface-ref name="setMean" scoped="" ref="0x40e25110"/></from>
      <to><interface-ref name="setMean" scoped="" ref="0x413d07b0"/></to>
    </wire>
    <wire loc="28:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRateControllerC.nc">
      <from><interface-ref name="exponentialRandom" scoped="" ref="0x40def0e0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40e01c20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Random" scoped="" ref="0x40e01c20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x413d02e8"/></to>
    </wire>
    <wire loc="29:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRateControllerC.nc">
      <from><interface-ref name="modPool" scoped="" ref="0x40def660"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x40e24828"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pool" scoped="" ref="0x40e24828"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x41414ea0"/></to>
    </wire>
    <wire loc="30:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRateControllerC.nc">
      <from><interface-ref name="modQueue" scoped="" ref="0x40deec80"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x40e22ad8"/></to>
    </wire>
    <wire loc="31:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRateControllerC.nc">
      <from><interface-ref name="admissionTimer" scoped="" ref="0x40dea940"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40e1e1e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40e1e1e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40b5e010"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="subRandom" scoped="" ref="0x413cf080"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40b890a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="setMean" scoped="" ref="0x40e4b228"/></from>
      <to><interface-ref name="setMean" scoped="" ref="0x41403e30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="subRandom" scoped="" ref="0x414026e0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40b890a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UartSend" scoped="" ref="0x40e40990"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40e52ef0"/>
      <arguments>
        <value cst="I:137">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="UartPacket" scoped="" ref="0x40e3d128"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40e4fc20"/></to>
    </wire>
    <wire loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40e4fc20"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40e7dd68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UartAMPacket" scoped="" ref="0x40e3d8d8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40e4d368"/></to>
    </wire>
    <wire loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40e4d368"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40e7d190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SerialControl" scoped="" ref="0x40e3c618"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40e52618"/></to>
    </wire>
    <wire loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40e52618"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40eb38f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SendQueue" scoped="" ref="0x40e39408"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x413f84b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MessagePool" scoped="" ref="0x40e3cda0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x413f5cc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pool" scoped="" ref="0x413f5cc0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x41431418"/></to>
    </wire>
    <wire loc="32:SafeSerialSendM.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x40e35768"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f6bc0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40eb38f8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40ea80e0"/></to>
    </wire>
    <wire loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40e52ef0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40e7e700"/></to>
    </wire>
    <wire loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40e4f8c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40e7ee40"/></to>
    </wire>
    <wire loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40e4c040"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40e814d0"/></to>
    </wire>
    <wire loc="58:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40eb3560"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40eaed08"/></to>
    </wire>
    <wire loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40eaac50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40e4c578"/></to>
    </wire>
    <wire loc="58:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40e819f8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40eb07e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40e80170"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40eb01d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x40eaa748"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x4106a568"/></to>
    </wire>
    <wire loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40eb07e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40f424f8"/></to>
    </wire>
    <wire loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40eb01d8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40f42138"/></to>
    </wire>
    <wire loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x40f42c88"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x40eaa748"/></to>
    </wire>
    <wire loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40ea35e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40eaac50"/></to>
    </wire>
    <wire loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40f40cc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40eaac50"/></to>
    </wire>
    <wire loc="61:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40f6beb8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40eaac50"/></to>
    </wire>
    <wire loc="63:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40f40230"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40ea0948"/></to>
    </wire>
    <wire loc="64:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x40f40708"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x40ea47f8"/></to>
    </wire>
    <wire loc="66:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x40e9dca0"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x40f3b238"/></to>
    </wire>
    <wire loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x40e9f340"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40f3dae0"/></to>
    </wire>
    <wire loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40f3dae0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40f5b828"/></to>
    </wire>
    <wire loc="69:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40f6b630"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40f5c010"/></to>
    </wire>
    <wire loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40f5c010"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40f571d8"/></to>
    </wire>
    <wire loc="326:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x40ed9d90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f6bc0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x40ec1788"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f6bc0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="320:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x40edabd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f6bc0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="335:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x40ed6a70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f6bc0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="receiveTask" scoped="" ref="0x40f3f970"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f6bc0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="signalSendDone" scoped="" ref="0x40f3fda8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402f6bc0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40f59e20"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40f5bc98"/></to>
    </wire>
    <wire loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40f5bc98"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40f8a5c8"/></to>
    </wire>
    <wire loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40f571d8"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40f8a9e0"/></to>
    </wire>
    <wire loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40f5b828"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40f8a1b0"/></to>
    </wire>
    <wire loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40f57c50"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40ff90d0"/></to>
    </wire>
    <wire loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40ff90d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40ff5980"/></to>
    </wire>
    <wire loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40f9c8b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40f57c50"/></to>
    </wire>
    <wire loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x40f9d350"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x40fc42e8"/></to>
    </wire>
    <wire loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x40fc42e8"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x40fc19d0"/></to>
    </wire>
    <wire loc="57:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x40f9d788"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x40fc47f8"/></to>
    </wire>
    <wire loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x40fc47f8"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x40fc1f00"/></to>
    </wire>
    <wire loc="58:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x40f9dbc0"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x40fc4cf0"/></to>
    </wire>
    <wire loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x40fc4cf0"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x40fbe430"/></to>
    </wire>
    <wire loc="57:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x40fc2390"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x40fbdea8"/></to>
    </wire>
    <wire loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x40fc3968"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x40fbd460"/></to>
    </wire>
    <wire loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x40fc3e78"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x40fbd990"/></to>
    </wire>
    <wire loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40fbba98"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x40442508"/></to>
    </wire>
    <wire loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40fba1f8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40365ec0"/></to>
    </wire>
    <wire loc="34:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x4106ebd0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40ff7b70"/></to>
    </wire>
    <wire loc="31:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40ff7b70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x41040980"/></to>
    </wire>
    <wire loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x41073b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40ff34d8"/></to>
    </wire>
    <wire loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40ff34d8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40fe8958"/></to>
    </wire>
    <wire loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40fee7a8"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x4101dc90"/></to>
    </wire>
    <wire loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40fed508"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x4101ca48"/></to>
    </wire>
    <wire loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40feb720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x4101a940"/></to>
    </wire>
    <wire loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40feb720"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x410175b8"/></to>
    </wire>
    <wire loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40feb720"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x410141c0"/></to>
    </wire>
    <wire loc="27:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4103c698"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40ff34d8"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="BcpCollectionExampleC" loc="7:BcpCollectionExampleC.nc">
      <module/>
    </component>
    <component qname="MainC" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="1:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id$&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id$&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id$&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="10:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="12:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="27:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/system/RealMainP.nc" safe="">
      <documentation loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="26:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id$&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="34:/home/xinchaol/local/src/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/system/LedsP.nc" safe="">
      <documentation loc="24:/home/xinchaol/local/src/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id$&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the micaZ platform.</short>
        <long>&#10;&#10; The Active Message layer on the micaZ platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @date June 19 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <documentation loc="24:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
        <short>&#10; The Active Message layer for the CC2420 radio.</short>
        <long>&#10; The Active Message layer for the CC2420 radio. This configuration&#10; just layers the AM dispatch (CC2420ActiveMessageM) on top of the&#10; underlying CC2420 radio packet (CC2420CsmaCsmaCC), which is&#10; inherently an AM packet (acknowledgements based on AM destination&#10; addr and group). Note that snooping may not work, due to CC2420&#10; early packet rejection if acknowledgements are enabled.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="66(AlarmMultiplexC.Alarm):/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="11:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128Timer1P" loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="42(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403420d0"/>
            <typename><typedef-ref name="TOne" ref="0x4035bbe0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403420d0"/>
            <typename><typedef-ref name="TOne" ref="0x4035bbe0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="43(Counter32khz32C.Transform32):/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403420d0"/>
            <typename><typedef-ref name="T32khz" ref="0x40342298"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403420d0"/>
            <typename><typedef-ref name="TOne" ref="0x4035bbe0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x40362148"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="40(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403420d0"/>
            <typename><typedef-ref name="T32khz" ref="0x40342298"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403420d0"/>
            <typename><typedef-ref name="TOne" ref="0x4035bbe0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/home/xinchaol/local/src/tinyos-2.x/tos/system/NoInitC.nc" safe="">
      <documentation loc="10:/home/xinchaol/local/src/tinyos-2.x/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="64:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id$&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="33(HplCC2420InterruptsC.CaptureSFDC):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="28:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="27:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="30(HplAtm128InterruptC.IntPin0):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="30(HplAtm128InterruptC.IntPin1):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="30(HplAtm128InterruptC.IntPin2):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="30(HplAtm128InterruptC.IntPin3):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="30(HplAtm128InterruptC.IntPin4):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="30(HplAtm128InterruptC.IntPin5):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="30(HplAtm128InterruptC.IntPin6):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="30(HplAtm128InterruptC.IntPin7):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc" safe="">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id$&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision$ $Date$&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/home/xinchaol/local/src/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/home/xinchaol/local/src/tinyos-2.x/tos/system/StateImplC.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/home/xinchaol/local/src/tinyos-2.x/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="65:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id$&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id$&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id$&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/home/xinchaol/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/home/xinchaol/local/src/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/home/xinchaol/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/xinchaol/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420SpiP" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc" safe="">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
        <short>&#10; Automatic slave select update for the SpiResource&#10;&#10; </short>
        <long>&#10; Automatic slave select update for the SpiResource&#10;&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="34:/home/xinchaol/local/src/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="35(CC2420PacketC.CounterToLocalTimeC):/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403420d0"/>
            <typename><typedef-ref name="T32khz" ref="0x40342298"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033ac60"/>
            <typename><typedef-ref name="TMilli" ref="0x4033ae28"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40ae1858"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033ac60"/>
            <typename><typedef-ref name="TMilli" ref="0x4033ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033ac60"/>
            <typename><typedef-ref name="TMilli" ref="0x4033ae28"/></typename>
          </type-tag>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033ac60"/>
            <typename><typedef-ref name="TMilli" ref="0x4033ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="36(CC2420PacketC.DummyTimer):/home/xinchaol/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/system/TimerMilliP.nc">
      <documentation loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/system/RandomC.nc">
      <documentation loc="22:/home/xinchaol/local/src/tinyos-2.x/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="34:/home/xinchaol/local/src/tinyos-2.x/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="21:/home/xinchaol/local/src/tinyos-2.x/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/home/xinchaol/local/src/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/home/xinchaol/local/src/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="61:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/home/xinchaol/local/src/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BcpC" loc="3:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <configuration/>
    </component>
    <component qname="BcpForwardingEngineP" loc="4:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpForwardingEngineP.nc">
      <module/>
    </component>
    <component qname="BcpRoutingEngineP" loc="2:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRoutingEngineP.nc">
      <module/>
    </component>
    <component qname="BcpC.MessagePoolP" loc="41(BcpC.MessagePoolP):/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolC.nc">
      <documentation loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date$&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
            <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
          </type-tag>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BcpC.MessagePoolP.PoolP" loc="53(BcpC.MessagePoolP.PoolP):/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolP.nc">
      <documentation loc="34:/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date$&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40d09eb8"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BcpC.QEntryPoolP" loc="41(BcpC.QEntryPoolP):/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolC.nc">
      <documentation loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date$&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:20" alignment="I:1"><struct-ref ref="0x40c095a8"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40c099b0"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BcpC.QEntryPoolP.PoolP" loc="53(BcpC.QEntryPoolP.PoolP):/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolP.nc">
      <documentation loc="34:/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date$&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40d09eb8"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BcpC.SnoopPoolP" loc="41(BcpC.SnoopPoolP):/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolC.nc">
      <documentation loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date$&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
            <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BcpC.SnoopPoolP.PoolP" loc="53(BcpC.SnoopPoolP.PoolP):/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolP.nc">
      <documentation loc="34:/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date$&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40d09eb8"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BcpC.SendStack" loc="45(BcpC.SendStack):/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/StackC.nc">
      <documentation loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/StackC.nc">
        <short>&#10;  A general Stack component, having a bounded size.</short>
        <long>&#10;  A general Stack component, having a bounded size.&#10;&#10;  Derived from StackC, work of:&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10; -------------------------&#10;  @author Scott Moeller&#10;  @date   $Date: 2010/03/24 00:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StackC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:20" alignment="I:1"><struct-ref ref="0x40c095a8"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x40c099b0"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:11">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BcpC.SnoopQueue" loc="42(BcpC.SnoopQueue):/home/xinchaol/local/src/tinyos-2.x/tos/system/QueueC.nc">
      <documentation loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date$&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
              <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BcpC.RoutingBeaconTimer" loc="36(BcpC.RoutingBeaconTimer):/home/xinchaol/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BcpC.txRetryTimer" loc="36(BcpC.txRetryTimer):/home/xinchaol/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BcpC.DelayPacketTimer" loc="36(BcpC.DelayPacketTimer):/home/xinchaol/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BcpC.DataSend" loc="39(BcpC.DataSend):/home/xinchaol/local/src/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:145">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BcpC.DataSend.AMQueueEntryP" loc="35(BcpC.DataSend.AMQueueEntryP):/home/xinchaol/local/src/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403c79f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="34:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMQueueP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="37(AMQueueP.AMQueueImplP):/home/xinchaol/local/src/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BcpC.DataReceive" loc="35(BcpC.DataReceive):/home/xinchaol/local/src/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:145">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BcpC.DataSnoop" loc="36(BcpC.DataSnoop):/home/xinchaol/local/src/tinyos-2.x/tos/system/AMSnooperC.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSnooperC"/>
        <arguments>
          <value cst="I:145">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BcpC.BeaconSend" loc="39(BcpC.BeaconSend):/home/xinchaol/local/src/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:144">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BcpC.BeaconSend.AMQueueEntryP" loc="35(BcpC.BeaconSend.AMQueueEntryP):/home/xinchaol/local/src/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403c79f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BcpC.BeaconReceive" loc="35(BcpC.BeaconReceive):/home/xinchaol/local/src/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:144">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BcpRateControllerC" loc="1:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRateControllerC.nc">
      <configuration/>
    </component>
    <component qname="BcpRateControllerP" loc="1:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRateControllerP.nc">
      <module/>
    </component>
    <component qname="BcpRateControllerC.exponentialRandom" loc="1(BcpRateControllerC.exponentialRandom):/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/exponentialRandomC.nc">
      <instance number="0">
        <component-ref qname="exponentialRandomC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BcpRateControllerC.exponentialRandom.exponentialRandomM" loc="1(BcpRateControllerC.exponentialRandom.exponentialRandomM):/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/exponentialRandomM.nc">
      <instance number="0">
        <component-ref qname="exponentialRandomM"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BcpRateControllerC.modPool" loc="41(BcpRateControllerC.modPool):/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolC.nc">
      <documentation loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date$&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
            <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
          </type-tag>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BcpRateControllerC.modPool.PoolP" loc="53(BcpRateControllerC.modPool.PoolP):/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolP.nc">
      <documentation loc="34:/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date$&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40d09eb8"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BcpRateControllerC.modQueue" loc="42(BcpRateControllerC.modQueue):/home/xinchaol/local/src/tinyos-2.x/tos/system/QueueC.nc">
      <documentation loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date$&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
              <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BcpRateControllerC.admissionTimer" loc="36(BcpRateControllerC.admissionTimer):/home/xinchaol/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BcpCollectionExampleAppC.RandomC" loc="1(BcpCollectionExampleAppC.RandomC):/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/exponentialRandomC.nc">
      <instance number="1">
        <component-ref qname="exponentialRandomC"/>
        <arguments>
          <value cst="I:666">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BcpCollectionExampleAppC.RandomC.exponentialRandomM" loc="1(BcpCollectionExampleAppC.RandomC.exponentialRandomM):/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/exponentialRandomM.nc">
      <instance number="1">
        <component-ref qname="exponentialRandomM"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BcpCollectionExampleAppC.TimerMilliC" loc="36(BcpCollectionExampleAppC.TimerMilliC):/home/xinchaol/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BcpCollectionExampleAppC.sinkTimer" loc="36(BcpCollectionExampleAppC.sinkTimer):/home/xinchaol/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BcpCollectionExampleAppC.SafeSerialSend" loc="1(BcpCollectionExampleAppC.SafeSerialSend):SafeSerialSendC.nc">
      <instance number="0">
        <component-ref qname="SafeSerialSendC"/>
        <arguments>
          <value cst="I:20">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:137">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SafeSerialSendM" loc="1:SafeSerialSendM.nc">
      <module/>
    </component>
    <component qname="BcpCollectionExampleAppC.SafeSerialSend.QueueC" loc="42(BcpCollectionExampleAppC.SafeSerialSend.QueueC):/home/xinchaol/local/src/tinyos-2.x/tos/system/QueueC.nc">
      <documentation loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date$&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
              <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BcpCollectionExampleAppC.SafeSerialSend.PoolC" loc="41(BcpCollectionExampleAppC.SafeSerialSend.PoolC):/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolC.nc">
      <documentation loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date$&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
            <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
          </type-tag>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BcpCollectionExampleAppC.SafeSerialSend.PoolC.PoolP" loc="53(BcpCollectionExampleAppC.SafeSerialSend.PoolC.PoolP):/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolP.nc">
      <documentation loc="34:/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date$&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40d09eb8"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="34(SerialActiveMessageC.AM):/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="24:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="37(SerialDispatcherC.SerialDispatcherP):/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision$ $Date$&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="29:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="69:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <documentation loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega128 serial port HPL.</short>
        <long> &#10; Private component of the Atmega128 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega128 timer 2.</short>
        <long>&#10; HPL interface to Atmega128 timer 2.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3P" loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
        <short>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.</short>
        <long>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="35(InitThreeP.InitThree):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="33(CounterThree16C.NCounter):/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40342510"/>
            <typename><typedef-ref name="TThree" ref="0x4035be08"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="43(CounterMicro32C.Transform32):/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40342510"/>
            <typename><typedef-ref name="TMicro" ref="0x403426d8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40342510"/>
            <typename><typedef-ref name="TThree" ref="0x4035be08"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x40362440"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40479dd8" loc="31:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40481010" loc="31:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40481228" loc="31:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40485238" loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40485460" loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40485688" loc="34:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40485878" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x404d23d0" loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404d25f8" loc="34:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404d2820" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x404d2a10" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="66:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="11:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40753478" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40753478"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x40753698" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40761428" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40761428"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40761870" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40761870"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x40761a30" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40797010" loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40797010"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40797458" loc="34:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40797458"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x407a1488" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x407a1488"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x407a18e8" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x407a18e8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x407a1b50" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x407a1b50"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x4079f010" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x4079f010"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x4079f278" loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x4079f700" loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x4079f700"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x407a6158" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x407a6158"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x407a65b8" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x407a65b8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x407a6820" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x407a6820"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x407a6c90" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x407a6c90"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x407a6ef8" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="28:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="30:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x40809c30" loc="30:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x40809e58" loc="31:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x4080d0e0" loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x4080d2d0" loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/home/xinchaol/local/src/tinyos-2.x/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/home/xinchaol/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x4093a878" loc="73:/home/xinchaol/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x40933678" loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/xinchaol/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40a8ee20" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40a8ee20"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40ae1858" loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40ae1858"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40ae1a18" loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40adaaf0" loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40adaaf0"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40adacb0" loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40ae8578" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40ae8578"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40b47b68" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40b47b68"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x40b47d48" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolC" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date$&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x40d09eb8" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40d09eb8"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x40d270e8" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date$&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x40d523f0" loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40d523f0"/></type-var>
        </typedef>
        <constant name="size" ref="0x40d525e0" loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="StackC" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/StackC.nc" abstract="">
      <documentation loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/StackC.nc">
        <short>&#10;  A general Stack component, having a bounded size.</short>
        <long>&#10;  A general Stack component, having a bounded size.&#10;&#10;  Derived from StackC, work of:&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10; -------------------------&#10;  @author Scott Moeller&#10;  @date   $Date: 2010/03/24 00:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="stack_t" ref="0x40d6cca0" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/StackC.nc">
          <component-ref qname="StackC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="stack_t" scoped="" ref="0x40d6cca0"/></type-var>
        </typedef>
        <constant name="STACK_SIZE" ref="0x40d6cec8" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/StackC.nc">
          <component-ref qname="StackC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date$&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x40d84af0" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x40d84af0"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x40d84d18" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40d987a0" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403c79f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40d902d8" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403c79f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x40db39d8" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40de5a40" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403c79f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSnooperC" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMSnooperC.nc" abstract="">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40dde4b0" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMSnooperC.nc">
          <component-ref qname="AMSnooperC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403c79f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="exponentialRandomC" loc="1:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/exponentialRandomC.nc" abstract="">
      <parameters>
        <constant name="mean_g" ref="0x40e02620" loc="1:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/exponentialRandomC.nc">
          <component-ref qname="exponentialRandomC"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="exponentialRandomM" loc="1:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/exponentialRandomM.nc" abstract="">
      <parameters>
        <constant name="mean_g" ref="0x40e31d38" loc="1:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/exponentialRandomM.nc">
          <component-ref qname="exponentialRandomM"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SafeSerialSendC" loc="1:SafeSerialSendC.nc" abstract="">
      <parameters>
        <constant name="QUEUE_SIZE" ref="0x40e41088" loc="1:SafeSerialSendC.nc">
          <component-ref qname="SafeSerialSendC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
        </constant>
        <constant name="SERIAL_ADDR" ref="0x40e412d0" loc="1:SafeSerialSendC.nc">
          <component-ref qname="SafeSerialSendC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="34:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision$ $Date$&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="RootControl" ref="0x403a50a0" loc="15:BcpCollectionExampleC.nc">
      <component-ref qname="BcpCollectionExampleC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x403a50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x403a5278"/>
        <function-ref name="setRoot" scoped="" ref="0x403a5358"/>
        <function-ref name="unsetRoot" scoped="" ref="0x403a5438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x40388c70" loc="8:BcpCollectionExampleC.nc">
      <component-ref qname="BcpCollectionExampleC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40388c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40388e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartReceive" ref="0x403f5328" loc="30:BcpCollectionExampleC.nc">
      <component-ref qname="BcpCollectionExampleC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartReceive" scoped="" ref="0x403f5328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x403f5500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sinkTimer" ref="0x40399f10" loc="14:BcpCollectionExampleC.nc">
      <component-ref qname="BcpCollectionExampleC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sinkTimer" scoped="" ref="0x40399f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033ac60"/>
            <typename><typedef-ref name="TMilli" ref="0x4033ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x403a1a18"/>
        <function-ref name="fired" scoped="" ref="0x4039bcb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x403a13d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x403a1180"/>
        <function-ref name="getdt" scoped="" ref="0x403a1ec8"/>
        <function-ref name="gett0" scoped="" ref="0x403a1c70"/>
        <function-ref name="isRunning" scoped="" ref="0x4039bf08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4039b558"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x403a16f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x4039b7d8"/>
        <function-ref name="stop" scoped="" ref="0x4039ba58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x403a6010" loc="18:BcpCollectionExampleC.nc">
      <component-ref qname="BcpCollectionExampleC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x403a6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x403a61e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x403a62c8"/>
        <function-ref name="getPayload" scoped="" ref="0x403a63a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x403a6488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x403a6568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x403f5770" loc="31:BcpCollectionExampleC.nc">
      <component-ref qname="BcpCollectionExampleC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x403f5770"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x403f5948"/>
        <function-ref name="stop" scoped="" ref="0x403f5a28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x403921f8" loc="9:BcpCollectionExampleC.nc">
      <component-ref qname="BcpCollectionExampleC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x403921f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x403923d0"/>
        <function-ref name="stopDone" scoped="" ref="0x403924b0"/>
        <function-ref name="start" scoped="" ref="0x40392590"/>
        <function-ref name="stop" scoped="" ref="0x40392670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x403dcb20" loc="17:BcpCollectionExampleC.nc">
      <component-ref qname="BcpCollectionExampleC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x403dcb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x403dccf8"/>
        <function-ref name="getPayload" scoped="" ref="0x403dcdd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x403dceb8"/>
        <function-ref name="cancel" scoped="" ref="0x4039f010"/>
        <function-ref name="sendDone" scoped="" ref="0x4039f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x403e0d18" loc="28:BcpCollectionExampleC.nc">
      <component-ref qname="BcpCollectionExampleC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x403e0d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x403e0ef0"/>
        <function-ref name="rand32" scoped="" ref="0x403ec010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BcpDebugIF" ref="0x40400dd8" loc="37:BcpCollectionExampleC.nc">
      <component-ref qname="BcpCollectionExampleC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BcpDebugIF" scoped="" ref="0x40400dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BcpDebugIF"/>
      </instance>
      <interface-functions>
        <function-ref name="reportBackpressure" scoped="" ref="0x403f4010"/>
        <function-ref name="reportError" scoped="" ref="0x403f40f0"/>
        <function-ref name="reportLinkRate" scoped="" ref="0x403f41d0"/>
        <function-ref name="reportValues" scoped="" ref="0x403f42b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x403d88e8" loc="16:BcpCollectionExampleC.nc">
      <component-ref qname="BcpCollectionExampleC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x403d88e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x403d8ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProtoControl" ref="0x4038d010" loc="11:BcpCollectionExampleC.nc">
      <component-ref qname="BcpCollectionExampleC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProtoControl" scoped="" ref="0x4038d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4038d1e8"/>
        <function-ref name="stop" scoped="" ref="0x4038d2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="csmaControl" ref="0x403928e0" loc="10:BcpCollectionExampleC.nc">
      <component-ref qname="BcpCollectionExampleC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="csmaControl" scoped="" ref="0x403928e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40392ab8"/>
        <function-ref name="stopDone" scoped="" ref="0x40392b98"/>
        <function-ref name="start" scoped="" ref="0x40392c78"/>
        <function-ref name="stop" scoped="" ref="0x40392d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4039a3f8" loc="12:BcpCollectionExampleC.nc">
      <component-ref qname="BcpCollectionExampleC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4039a3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4039a5d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4039a6b0"/>
        <function-ref name="led1On" scoped="" ref="0x4039a790"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4039a870"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4039a950"/>
        <function-ref name="get" scoped="" ref="0x4039aa30"/>
        <function-ref name="led1Off" scoped="" ref="0x4039ab10"/>
        <function-ref name="led2Off" scoped="" ref="0x4039ae90"/>
        <function-ref name="set" scoped="" ref="0x4039abf0"/>
        <function-ref name="led0On" scoped="" ref="0x4039acd0"/>
        <function-ref name="led2On" scoped="" ref="0x4039adb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BcpPacket" ref="0x403e3c60" loc="20:BcpCollectionExampleC.nc">
      <component-ref qname="BcpCollectionExampleC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BcpPacket" scoped="" ref="0x403e3c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BcpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x403e3e38"/>
        <function-ref name="getHopCount" scoped="" ref="0x403e3f18"/>
        <function-ref name="getBCPPktType" scoped="" ref="0x403db010"/>
        <function-ref name="setOrigin" scoped="" ref="0x403db0f0"/>
        <function-ref name="setType" scoped="" ref="0x403db1d0"/>
        <function-ref name="getOrigin" scoped="" ref="0x403db2b0"/>
        <function-ref name="getDelay" scoped="" ref="0x403db390"/>
        <function-ref name="getBackpressure" scoped="" ref="0x403db470"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x403db550"/>
        <function-ref name="getTxCount" scoped="" ref="0x403db630"/>
        <function-ref name="getNodeTxCount" scoped="" ref="0x403db710"/>
        <function-ref name="getType" scoped="" ref="0x403db7f0"/>
        <function-ref name="getNhBackpressure" scoped="" ref="0x403db8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SafeSerialSendIF" ref="0x403f2be0" loc="29:BcpCollectionExampleC.nc">
      <component-ref qname="BcpCollectionExampleC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SafeSerialSendIF" scoped="" ref="0x403f2be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SafeSerialSendIF"/>
      </instance>
      <interface-functions>
        <function-ref name="queueMessageBuffer" scoped="" ref="0x403f2db8"/>
        <function-ref name="getPayload" scoped="" ref="0x403f2e98"/>
        <function-ref name="getMessageBuffer" scoped="" ref="0x403f5010"/>
        <function-ref name="droppedMessageCount" scoped="" ref="0x403f50f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x403ed3b8" loc="27:BcpCollectionExampleC.nc">
      <component-ref qname="BcpCollectionExampleC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x403ed3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x403ed610"/>
        <function-ref name="source" scoped="" ref="0x403ed6f0"/>
        <function-ref name="address" scoped="" ref="0x403ed7d0"/>
        <function-ref name="destination" scoped="" ref="0x403ed8b0"/>
        <function-ref name="setSource" scoped="" ref="0x403ed990"/>
        <function-ref name="setDestination" scoped="" ref="0x403eda70"/>
        <function-ref name="type" scoped="" ref="0x403edb50"/>
        <function-ref name="setType" scoped="" ref="0x403edc30"/>
        <function-ref name="isForMe" scoped="" ref="0x403edd10"/>
        <function-ref name="setGroup" scoped="" ref="0x403eddf0"/>
        <function-ref name="localGroup" scoped="" ref="0x403eded0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4039cba8" loc="13:BcpCollectionExampleC.nc">
      <component-ref qname="BcpCollectionExampleC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4039cba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033ac60"/>
            <typename><typedef-ref name="TMilli" ref="0x4033ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x403996a8"/>
        <function-ref name="fired" scoped="" ref="0x40390948"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40399068"/>
        <function-ref name="isOneShot" scoped="" ref="0x40390df8"/>
        <function-ref name="getdt" scoped="" ref="0x40399b58"/>
        <function-ref name="gett0" scoped="" ref="0x40399900"/>
        <function-ref name="isRunning" scoped="" ref="0x40390ba0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x403901f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40399388"/>
        <function-ref name="startOneShot" scoped="" ref="0x40390470"/>
        <function-ref name="stop" scoped="" ref="0x403906f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x4043ec40" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4043ec40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4043ee18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x4043e010" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x4043e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4043e1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x40442c68" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x40442c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40442e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4043dc68" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4043dc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4043de40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40442508" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40442508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x404426e0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x404427c0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x404428a0"/>
        <function-ref name="actualMicro" scoped="" ref="0x40442980"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40442a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x4044b2c8" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x4044b2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4044b4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40445ed0" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40445ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4044b0c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x4044b6d0" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x4044b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4044b8a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x40444da8" loc="18:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x40444da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40447010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x404449d8" loc="17:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x404449d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40444bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x40450920" loc="22:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x40450920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40450af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x40458f18" loc="21:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x40458f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40450108"/>
        <function-ref name="isInput" scoped="" ref="0x404501e8"/>
        <function-ref name="toggle" scoped="" ref="0x404502c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404503a8"/>
        <function-ref name="get" scoped="" ref="0x40450488"/>
        <function-ref name="makeOutput" scoped="" ref="0x40450568"/>
        <function-ref name="set" scoped="" ref="0x40450648"/>
        <function-ref name="clr" scoped="" ref="0x40450728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x404479d8" loc="20:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x404479d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40447bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x404714b0" loc="91:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x404714b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40471888"/>
        <function-ref name="isInput" scoped="" ref="0x40471968"/>
        <function-ref name="toggle" scoped="" ref="0x40471a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40471b28"/>
        <function-ref name="get" scoped="" ref="0x40471c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40471ce8"/>
        <function-ref name="set" scoped="" ref="0x40471dc8"/>
        <function-ref name="clr" scoped="" ref="0x40471ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x40469a28" loc="65:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x40469a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40469c00"/>
        <function-ref name="isInput" scoped="" ref="0x40469ce0"/>
        <function-ref name="toggle" scoped="" ref="0x40469dc0"/>
        <function-ref name="isOutput" scoped="" ref="0x40469ea0"/>
        <function-ref name="get" scoped="" ref="0x40468010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404680f0"/>
        <function-ref name="set" scoped="" ref="0x404681d0"/>
        <function-ref name="clr" scoped="" ref="0x404682b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x4046d0a0" loc="76:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x4046d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046d278"/>
        <function-ref name="isInput" scoped="" ref="0x4046d358"/>
        <function-ref name="toggle" scoped="" ref="0x4046d438"/>
        <function-ref name="isOutput" scoped="" ref="0x4046d518"/>
        <function-ref name="get" scoped="" ref="0x4046d5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046d6d8"/>
        <function-ref name="set" scoped="" ref="0x4046d7b8"/>
        <function-ref name="clr" scoped="" ref="0x4046d898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x40474210" loc="85:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x40474210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404743e8"/>
        <function-ref name="isInput" scoped="" ref="0x404744c8"/>
        <function-ref name="toggle" scoped="" ref="0x404745a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40474688"/>
        <function-ref name="get" scoped="" ref="0x40474768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40474848"/>
        <function-ref name="set" scoped="" ref="0x40474928"/>
        <function-ref name="clr" scoped="" ref="0x40474a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x4045d670" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x4045d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045d848"/>
        <function-ref name="isInput" scoped="" ref="0x4045d928"/>
        <function-ref name="toggle" scoped="" ref="0x4045da08"/>
        <function-ref name="isOutput" scoped="" ref="0x4045dae8"/>
        <function-ref name="get" scoped="" ref="0x4045dbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045dca8"/>
        <function-ref name="set" scoped="" ref="0x4045dd88"/>
        <function-ref name="clr" scoped="" ref="0x4045de68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x40476ce8" loc="83:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x40476ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40476ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40475010"/>
        <function-ref name="toggle" scoped="" ref="0x404750f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404751d0"/>
        <function-ref name="get" scoped="" ref="0x404752b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40475390"/>
        <function-ref name="set" scoped="" ref="0x40475470"/>
        <function-ref name="clr" scoped="" ref="0x40475550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x4045ca98" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x4045ca98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045cc70"/>
        <function-ref name="isInput" scoped="" ref="0x4045cd50"/>
        <function-ref name="toggle" scoped="" ref="0x4045ce30"/>
        <function-ref name="isOutput" scoped="" ref="0x4045cf10"/>
        <function-ref name="get" scoped="" ref="0x4045b010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045b0f0"/>
        <function-ref name="set" scoped="" ref="0x4045b1d0"/>
        <function-ref name="clr" scoped="" ref="0x4045b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x40461210" loc="57:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x40461210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404613e8"/>
        <function-ref name="isInput" scoped="" ref="0x404614c8"/>
        <function-ref name="toggle" scoped="" ref="0x404615a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40461688"/>
        <function-ref name="get" scoped="" ref="0x40461768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40461848"/>
        <function-ref name="set" scoped="" ref="0x40461928"/>
        <function-ref name="clr" scoped="" ref="0x40461a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x404678e0" loc="68:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x404678e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40467ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40467b98"/>
        <function-ref name="toggle" scoped="" ref="0x40467c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40467d58"/>
        <function-ref name="get" scoped="" ref="0x40467e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40467f18"/>
        <function-ref name="set" scoped="" ref="0x40465010"/>
        <function-ref name="clr" scoped="" ref="0x404650f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x4046cea8" loc="79:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x4046cea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046b0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4046b1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4046b280"/>
        <function-ref name="isOutput" scoped="" ref="0x4046b360"/>
        <function-ref name="get" scoped="" ref="0x4046b440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046b520"/>
        <function-ref name="set" scoped="" ref="0x4046b600"/>
        <function-ref name="clr" scoped="" ref="0x4046b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x404542f8" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x404542f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404544d0"/>
        <function-ref name="isInput" scoped="" ref="0x404545b0"/>
        <function-ref name="toggle" scoped="" ref="0x40454690"/>
        <function-ref name="isOutput" scoped="" ref="0x40454770"/>
        <function-ref name="get" scoped="" ref="0x40454850"/>
        <function-ref name="makeOutput" scoped="" ref="0x40454930"/>
        <function-ref name="set" scoped="" ref="0x40454a10"/>
        <function-ref name="clr" scoped="" ref="0x40454af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x4045a8e0" loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x4045a8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045aab8"/>
        <function-ref name="isInput" scoped="" ref="0x4045ab98"/>
        <function-ref name="toggle" scoped="" ref="0x4045ac78"/>
        <function-ref name="isOutput" scoped="" ref="0x4045ad58"/>
        <function-ref name="get" scoped="" ref="0x4045ae38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045af18"/>
        <function-ref name="set" scoped="" ref="0x40459010"/>
        <function-ref name="clr" scoped="" ref="0x404590f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x4045f0a0" loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x4045f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045f278"/>
        <function-ref name="isInput" scoped="" ref="0x4045f358"/>
        <function-ref name="toggle" scoped="" ref="0x4045f438"/>
        <function-ref name="isOutput" scoped="" ref="0x4045f518"/>
        <function-ref name="get" scoped="" ref="0x4045f5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045f6d8"/>
        <function-ref name="set" scoped="" ref="0x4045f7b8"/>
        <function-ref name="clr" scoped="" ref="0x4045f898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x40470750" loc="71:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x40470750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40470928"/>
        <function-ref name="isInput" scoped="" ref="0x40470a08"/>
        <function-ref name="toggle" scoped="" ref="0x40470ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40470bc8"/>
        <function-ref name="get" scoped="" ref="0x40470ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40470d88"/>
        <function-ref name="set" scoped="" ref="0x40470e68"/>
        <function-ref name="clr" scoped="" ref="0x4046f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x404720a0" loc="88:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x404720a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40472278"/>
        <function-ref name="isInput" scoped="" ref="0x40472358"/>
        <function-ref name="toggle" scoped="" ref="0x40472438"/>
        <function-ref name="isOutput" scoped="" ref="0x40472518"/>
        <function-ref name="get" scoped="" ref="0x404725f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404726d8"/>
        <function-ref name="set" scoped="" ref="0x404727b8"/>
        <function-ref name="clr" scoped="" ref="0x40472898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x4047b590" loc="94:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x4047b590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047b768"/>
        <function-ref name="isInput" scoped="" ref="0x4047b848"/>
        <function-ref name="toggle" scoped="" ref="0x4047b928"/>
        <function-ref name="isOutput" scoped="" ref="0x4047ba08"/>
        <function-ref name="get" scoped="" ref="0x4047bae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047bbc8"/>
        <function-ref name="set" scoped="" ref="0x4047bca8"/>
        <function-ref name="clr" scoped="" ref="0x4047bd88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x4046fc08" loc="74:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x4046fc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046fde0"/>
        <function-ref name="isInput" scoped="" ref="0x4046fec0"/>
        <function-ref name="toggle" scoped="" ref="0x4046e010"/>
        <function-ref name="isOutput" scoped="" ref="0x4046e0f0"/>
        <function-ref name="get" scoped="" ref="0x4046e1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046e2b0"/>
        <function-ref name="set" scoped="" ref="0x4046e390"/>
        <function-ref name="clr" scoped="" ref="0x4046e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x4045e210" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x4045e210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045e3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4045e4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4045e5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4045e688"/>
        <function-ref name="get" scoped="" ref="0x4045e768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045e848"/>
        <function-ref name="set" scoped="" ref="0x4045e928"/>
        <function-ref name="clr" scoped="" ref="0x4045ea08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x40464830" loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x40464830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40464a08"/>
        <function-ref name="isInput" scoped="" ref="0x40464ae8"/>
        <function-ref name="toggle" scoped="" ref="0x40464bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40464ca8"/>
        <function-ref name="get" scoped="" ref="0x40464d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40464e68"/>
        <function-ref name="set" scoped="" ref="0x40463010"/>
        <function-ref name="clr" scoped="" ref="0x404630f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x4047c0c0" loc="92:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x4047c0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047c298"/>
        <function-ref name="isInput" scoped="" ref="0x4047c378"/>
        <function-ref name="toggle" scoped="" ref="0x4047c458"/>
        <function-ref name="isOutput" scoped="" ref="0x4047c538"/>
        <function-ref name="get" scoped="" ref="0x4047c618"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047c6f8"/>
        <function-ref name="set" scoped="" ref="0x4047c7d8"/>
        <function-ref name="clr" scoped="" ref="0x4047c8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x40463ce8" loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x40463ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40463ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40462010"/>
        <function-ref name="toggle" scoped="" ref="0x404620f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404621d0"/>
        <function-ref name="get" scoped="" ref="0x404622b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40462390"/>
        <function-ref name="set" scoped="" ref="0x40462470"/>
        <function-ref name="clr" scoped="" ref="0x40462550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x404684b0" loc="66:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x404684b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40468688"/>
        <function-ref name="isInput" scoped="" ref="0x40468768"/>
        <function-ref name="toggle" scoped="" ref="0x40468848"/>
        <function-ref name="isOutput" scoped="" ref="0x40468928"/>
        <function-ref name="get" scoped="" ref="0x40468a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40468ae8"/>
        <function-ref name="set" scoped="" ref="0x40468bc8"/>
        <function-ref name="clr" scoped="" ref="0x40468ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x4046da98" loc="77:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x4046da98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046dc70"/>
        <function-ref name="isInput" scoped="" ref="0x4046dd50"/>
        <function-ref name="toggle" scoped="" ref="0x4046de30"/>
        <function-ref name="isOutput" scoped="" ref="0x4046df10"/>
        <function-ref name="get" scoped="" ref="0x4046c010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046c0f0"/>
        <function-ref name="set" scoped="" ref="0x4046c1d0"/>
        <function-ref name="clr" scoped="" ref="0x4046c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x40474c08" loc="86:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x40474c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40474de0"/>
        <function-ref name="isInput" scoped="" ref="0x40474ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40473010"/>
        <function-ref name="isOutput" scoped="" ref="0x404730f0"/>
        <function-ref name="get" scoped="" ref="0x404731d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404732b0"/>
        <function-ref name="set" scoped="" ref="0x40473390"/>
        <function-ref name="clr" scoped="" ref="0x40473470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x4045c0a0" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x4045c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045c278"/>
        <function-ref name="isInput" scoped="" ref="0x4045c358"/>
        <function-ref name="toggle" scoped="" ref="0x4045c438"/>
        <function-ref name="isOutput" scoped="" ref="0x4045c518"/>
        <function-ref name="get" scoped="" ref="0x4045c5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045c6d8"/>
        <function-ref name="set" scoped="" ref="0x4045c7b8"/>
        <function-ref name="clr" scoped="" ref="0x4045c898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x4045b4b0" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x4045b4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045b688"/>
        <function-ref name="isInput" scoped="" ref="0x4045b768"/>
        <function-ref name="toggle" scoped="" ref="0x4045b848"/>
        <function-ref name="isOutput" scoped="" ref="0x4045b928"/>
        <function-ref name="get" scoped="" ref="0x4045ba08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045bae8"/>
        <function-ref name="set" scoped="" ref="0x4045bbc8"/>
        <function-ref name="clr" scoped="" ref="0x4045bca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x40461c08" loc="58:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x40461c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40461de0"/>
        <function-ref name="isInput" scoped="" ref="0x40461ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40460010"/>
        <function-ref name="isOutput" scoped="" ref="0x404600f0"/>
        <function-ref name="get" scoped="" ref="0x404601d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404602b0"/>
        <function-ref name="set" scoped="" ref="0x40460390"/>
        <function-ref name="clr" scoped="" ref="0x40460470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x404652f0" loc="69:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x404652f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404654c8"/>
        <function-ref name="isInput" scoped="" ref="0x404655a8"/>
        <function-ref name="toggle" scoped="" ref="0x40465688"/>
        <function-ref name="isOutput" scoped="" ref="0x40465768"/>
        <function-ref name="get" scoped="" ref="0x40465848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40465928"/>
        <function-ref name="set" scoped="" ref="0x40465a08"/>
        <function-ref name="clr" scoped="" ref="0x40465ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x4046b8e0" loc="80:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x4046b8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046bab8"/>
        <function-ref name="isInput" scoped="" ref="0x4046bb98"/>
        <function-ref name="toggle" scoped="" ref="0x4046bc78"/>
        <function-ref name="isOutput" scoped="" ref="0x4046bd58"/>
        <function-ref name="get" scoped="" ref="0x4046be38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046bf18"/>
        <function-ref name="set" scoped="" ref="0x40476010"/>
        <function-ref name="clr" scoped="" ref="0x404760f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x40454cf0" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x40454cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40454ec8"/>
        <function-ref name="isInput" scoped="" ref="0x40453010"/>
        <function-ref name="toggle" scoped="" ref="0x404530f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404531d0"/>
        <function-ref name="get" scoped="" ref="0x404532b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40453390"/>
        <function-ref name="set" scoped="" ref="0x40453470"/>
        <function-ref name="clr" scoped="" ref="0x40453550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x404592f0" loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x404592f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40459548"/>
        <function-ref name="isInput" scoped="" ref="0x40459628"/>
        <function-ref name="toggle" scoped="" ref="0x40459708"/>
        <function-ref name="isOutput" scoped="" ref="0x404597e8"/>
        <function-ref name="get" scoped="" ref="0x404598c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404599a8"/>
        <function-ref name="set" scoped="" ref="0x40459a88"/>
        <function-ref name="clr" scoped="" ref="0x40459b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x4045fa98" loc="61:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x4045fa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045fc70"/>
        <function-ref name="isInput" scoped="" ref="0x4045fd50"/>
        <function-ref name="toggle" scoped="" ref="0x4045fe30"/>
        <function-ref name="isOutput" scoped="" ref="0x4045ff10"/>
        <function-ref name="get" scoped="" ref="0x4046a010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046a0f0"/>
        <function-ref name="set" scoped="" ref="0x4046a1d0"/>
        <function-ref name="clr" scoped="" ref="0x4046a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x40472a98" loc="89:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x40472a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40472c70"/>
        <function-ref name="isInput" scoped="" ref="0x40472d50"/>
        <function-ref name="toggle" scoped="" ref="0x40472e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40472f10"/>
        <function-ref name="get" scoped="" ref="0x40471010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404710f0"/>
        <function-ref name="set" scoped="" ref="0x404711d0"/>
        <function-ref name="clr" scoped="" ref="0x404712b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x4046aea8" loc="64:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x4046aea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40469208"/>
        <function-ref name="isInput" scoped="" ref="0x404692e8"/>
        <function-ref name="toggle" scoped="" ref="0x404693c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404694a8"/>
        <function-ref name="get" scoped="" ref="0x40469588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40469668"/>
        <function-ref name="set" scoped="" ref="0x40469748"/>
        <function-ref name="clr" scoped="" ref="0x40469828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x4046e670" loc="75:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x4046e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046e848"/>
        <function-ref name="isInput" scoped="" ref="0x4046e928"/>
        <function-ref name="toggle" scoped="" ref="0x4046ea08"/>
        <function-ref name="isOutput" scoped="" ref="0x4046eae8"/>
        <function-ref name="get" scoped="" ref="0x4046ebc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046eca8"/>
        <function-ref name="set" scoped="" ref="0x4046ed88"/>
        <function-ref name="clr" scoped="" ref="0x4046ee68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x40475750" loc="84:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x40475750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40475928"/>
        <function-ref name="isInput" scoped="" ref="0x40475a08"/>
        <function-ref name="toggle" scoped="" ref="0x40475ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40475bc8"/>
        <function-ref name="get" scoped="" ref="0x40475ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40475d88"/>
        <function-ref name="set" scoped="" ref="0x40475e68"/>
        <function-ref name="clr" scoped="" ref="0x40474010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x4047a010" loc="95:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x4047a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047a1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4047a2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4047a3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4047a488"/>
        <function-ref name="get" scoped="" ref="0x4047a568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047a648"/>
        <function-ref name="set" scoped="" ref="0x4047a728"/>
        <function-ref name="clr" scoped="" ref="0x4047a808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x4045ec08" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x4045ec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045ede0"/>
        <function-ref name="isInput" scoped="" ref="0x4045eec0"/>
        <function-ref name="toggle" scoped="" ref="0x4045d010"/>
        <function-ref name="isOutput" scoped="" ref="0x4045d0f0"/>
        <function-ref name="get" scoped="" ref="0x4045d1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045d2b0"/>
        <function-ref name="set" scoped="" ref="0x4045d390"/>
        <function-ref name="clr" scoped="" ref="0x4045d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x404632f0" loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x404632f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404634c8"/>
        <function-ref name="isInput" scoped="" ref="0x404635a8"/>
        <function-ref name="toggle" scoped="" ref="0x40463688"/>
        <function-ref name="isOutput" scoped="" ref="0x40463768"/>
        <function-ref name="get" scoped="" ref="0x40463848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40463928"/>
        <function-ref name="set" scoped="" ref="0x40463a08"/>
        <function-ref name="clr" scoped="" ref="0x40463ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x404762f0" loc="82:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x404762f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404764c8"/>
        <function-ref name="isInput" scoped="" ref="0x404765a8"/>
        <function-ref name="toggle" scoped="" ref="0x40476688"/>
        <function-ref name="isOutput" scoped="" ref="0x40476768"/>
        <function-ref name="get" scoped="" ref="0x40476848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40476928"/>
        <function-ref name="set" scoped="" ref="0x40476a08"/>
        <function-ref name="clr" scoped="" ref="0x40476ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x40462750" loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x40462750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40462928"/>
        <function-ref name="isInput" scoped="" ref="0x40462a08"/>
        <function-ref name="toggle" scoped="" ref="0x40462ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40462bc8"/>
        <function-ref name="get" scoped="" ref="0x40462ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40462d88"/>
        <function-ref name="set" scoped="" ref="0x40462e68"/>
        <function-ref name="clr" scoped="" ref="0x40461010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x40468ea8" loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x40468ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404670c0"/>
        <function-ref name="isInput" scoped="" ref="0x404671a0"/>
        <function-ref name="toggle" scoped="" ref="0x40467280"/>
        <function-ref name="isOutput" scoped="" ref="0x40467360"/>
        <function-ref name="get" scoped="" ref="0x40467440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40467520"/>
        <function-ref name="set" scoped="" ref="0x40467600"/>
        <function-ref name="clr" scoped="" ref="0x404676e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x4046c4b0" loc="78:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x4046c4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046c688"/>
        <function-ref name="isInput" scoped="" ref="0x4046c768"/>
        <function-ref name="toggle" scoped="" ref="0x4046c848"/>
        <function-ref name="isOutput" scoped="" ref="0x4046c928"/>
        <function-ref name="get" scoped="" ref="0x4046ca08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046cae8"/>
        <function-ref name="set" scoped="" ref="0x4046cbc8"/>
        <function-ref name="clr" scoped="" ref="0x4046cca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x40473670" loc="87:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x40473670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40473848"/>
        <function-ref name="isInput" scoped="" ref="0x40473928"/>
        <function-ref name="toggle" scoped="" ref="0x40473a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40473ae8"/>
        <function-ref name="get" scoped="" ref="0x40473bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40473ca8"/>
        <function-ref name="set" scoped="" ref="0x40473d88"/>
        <function-ref name="clr" scoped="" ref="0x40473e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x404528f0" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x404528f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40452ac8"/>
        <function-ref name="isInput" scoped="" ref="0x40452ba8"/>
        <function-ref name="toggle" scoped="" ref="0x40452c88"/>
        <function-ref name="isOutput" scoped="" ref="0x40452d68"/>
        <function-ref name="get" scoped="" ref="0x40452e48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40452f28"/>
        <function-ref name="set" scoped="" ref="0x40454018"/>
        <function-ref name="clr" scoped="" ref="0x404540f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x4045bea8" loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x4045bea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045a0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4045a1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4045a280"/>
        <function-ref name="isOutput" scoped="" ref="0x4045a360"/>
        <function-ref name="get" scoped="" ref="0x4045a440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045a520"/>
        <function-ref name="set" scoped="" ref="0x4045a600"/>
        <function-ref name="clr" scoped="" ref="0x4045a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x40460670" loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x40460670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40460848"/>
        <function-ref name="isInput" scoped="" ref="0x40460928"/>
        <function-ref name="toggle" scoped="" ref="0x40460a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40460ae8"/>
        <function-ref name="get" scoped="" ref="0x40460bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40460ca8"/>
        <function-ref name="set" scoped="" ref="0x40460d88"/>
        <function-ref name="clr" scoped="" ref="0x40460e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x40465ce8" loc="70:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x40465ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40465ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40470010"/>
        <function-ref name="toggle" scoped="" ref="0x404700f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404701d0"/>
        <function-ref name="get" scoped="" ref="0x404702b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40470390"/>
        <function-ref name="set" scoped="" ref="0x40470470"/>
        <function-ref name="clr" scoped="" ref="0x40470550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x4047cab8" loc="93:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x4047cab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047cc90"/>
        <function-ref name="isInput" scoped="" ref="0x4047cd70"/>
        <function-ref name="toggle" scoped="" ref="0x4047ce50"/>
        <function-ref name="isOutput" scoped="" ref="0x4047b010"/>
        <function-ref name="get" scoped="" ref="0x4047b0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047b1d0"/>
        <function-ref name="set" scoped="" ref="0x4047b2b0"/>
        <function-ref name="clr" scoped="" ref="0x4047b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x4046f210" loc="73:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x4046f210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046f3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4046f4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4046f5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4046f688"/>
        <function-ref name="get" scoped="" ref="0x4046f768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046f848"/>
        <function-ref name="set" scoped="" ref="0x4046f928"/>
        <function-ref name="clr" scoped="" ref="0x4046fa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x4046a4b0" loc="62:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x4046a4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046a688"/>
        <function-ref name="isInput" scoped="" ref="0x4046a768"/>
        <function-ref name="toggle" scoped="" ref="0x4046a848"/>
        <function-ref name="isOutput" scoped="" ref="0x4046a928"/>
        <function-ref name="get" scoped="" ref="0x4046aa08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046aae8"/>
        <function-ref name="set" scoped="" ref="0x4046abc8"/>
        <function-ref name="clr" scoped="" ref="0x4046aca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x40453750" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x40453750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40453928"/>
        <function-ref name="isInput" scoped="" ref="0x40453a08"/>
        <function-ref name="toggle" scoped="" ref="0x40453ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40453bc8"/>
        <function-ref name="get" scoped="" ref="0x40453ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40453d88"/>
        <function-ref name="set" scoped="" ref="0x40453e68"/>
        <function-ref name="clr" scoped="" ref="0x4045e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x40459d68" loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x40459d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40464010"/>
        <function-ref name="isInput" scoped="" ref="0x404640f0"/>
        <function-ref name="toggle" scoped="" ref="0x404641d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404642b0"/>
        <function-ref name="get" scoped="" ref="0x40464390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40464470"/>
        <function-ref name="set" scoped="" ref="0x40464550"/>
        <function-ref name="clr" scoped="" ref="0x40464630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404a54f0" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404a54f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a56c8"/>
        <function-ref name="isInput" scoped="" ref="0x404a57a8"/>
        <function-ref name="toggle" scoped="" ref="0x404a5888"/>
        <function-ref name="isOutput" scoped="" ref="0x404a5968"/>
        <function-ref name="get" scoped="" ref="0x404a5a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a5b28"/>
        <function-ref name="set" scoped="" ref="0x404a5c08"/>
        <function-ref name="clr" scoped="" ref="0x404a5ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404a3170" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404a3170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a3348"/>
        <function-ref name="isInput" scoped="" ref="0x404a3428"/>
        <function-ref name="toggle" scoped="" ref="0x404a3508"/>
        <function-ref name="isOutput" scoped="" ref="0x404a35e8"/>
        <function-ref name="get" scoped="" ref="0x404a36c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a37a8"/>
        <function-ref name="set" scoped="" ref="0x404a3888"/>
        <function-ref name="clr" scoped="" ref="0x404a3968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404a6228" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404a6228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a6400"/>
        <function-ref name="isInput" scoped="" ref="0x404a64e0"/>
        <function-ref name="toggle" scoped="" ref="0x404a65c0"/>
        <function-ref name="isOutput" scoped="" ref="0x404a66a0"/>
        <function-ref name="get" scoped="" ref="0x404a6780"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a6860"/>
        <function-ref name="set" scoped="" ref="0x404a6940"/>
        <function-ref name="clr" scoped="" ref="0x404a6a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404a5e48" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404a5e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a4050"/>
        <function-ref name="isInput" scoped="" ref="0x404a4130"/>
        <function-ref name="toggle" scoped="" ref="0x404a4210"/>
        <function-ref name="isOutput" scoped="" ref="0x404a42f0"/>
        <function-ref name="get" scoped="" ref="0x404a43d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a44b0"/>
        <function-ref name="set" scoped="" ref="0x404a4590"/>
        <function-ref name="clr" scoped="" ref="0x404a4670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404a3ac8" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404a3ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a3ca0"/>
        <function-ref name="isInput" scoped="" ref="0x404a3d80"/>
        <function-ref name="toggle" scoped="" ref="0x404a3e60"/>
        <function-ref name="isOutput" scoped="" ref="0x404a2010"/>
        <function-ref name="get" scoped="" ref="0x404a20f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a21d0"/>
        <function-ref name="set" scoped="" ref="0x404a22b0"/>
        <function-ref name="clr" scoped="" ref="0x404a2390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404a6b80" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404a6b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a6d58"/>
        <function-ref name="isInput" scoped="" ref="0x404a6e38"/>
        <function-ref name="toggle" scoped="" ref="0x404a6f18"/>
        <function-ref name="isOutput" scoped="" ref="0x404a5010"/>
        <function-ref name="get" scoped="" ref="0x404a50f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a51d0"/>
        <function-ref name="set" scoped="" ref="0x404a52b0"/>
        <function-ref name="clr" scoped="" ref="0x404a5390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404a47d0" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404a47d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a49a8"/>
        <function-ref name="isInput" scoped="" ref="0x404a4a88"/>
        <function-ref name="toggle" scoped="" ref="0x404a4b68"/>
        <function-ref name="isOutput" scoped="" ref="0x404a4c48"/>
        <function-ref name="get" scoped="" ref="0x404a4d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a4e08"/>
        <function-ref name="set" scoped="" ref="0x404a4ee8"/>
        <function-ref name="clr" scoped="" ref="0x404a3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404a24f0" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404a24f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a26c8"/>
        <function-ref name="isInput" scoped="" ref="0x404a27a8"/>
        <function-ref name="toggle" scoped="" ref="0x404a2888"/>
        <function-ref name="isOutput" scoped="" ref="0x404a2968"/>
        <function-ref name="get" scoped="" ref="0x404a2a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a2b28"/>
        <function-ref name="set" scoped="" ref="0x404a2c08"/>
        <function-ref name="clr" scoped="" ref="0x404a2ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410b8a88" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410b8a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410b8c60"/>
        <function-ref name="isInput" scoped="" ref="0x410b8d40"/>
        <function-ref name="toggle" scoped="" ref="0x410b8e20"/>
        <function-ref name="isOutput" scoped="" ref="0x410b8f00"/>
        <function-ref name="get" scoped="" ref="0x410b7010"/>
        <function-ref name="makeOutput" scoped="" ref="0x410b70f0"/>
        <function-ref name="set" scoped="" ref="0x410b71d0"/>
        <function-ref name="clr" scoped="" ref="0x410b72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410b6538" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410b6538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410b6710"/>
        <function-ref name="isInput" scoped="" ref="0x410b67f0"/>
        <function-ref name="toggle" scoped="" ref="0x410b68d0"/>
        <function-ref name="isOutput" scoped="" ref="0x410b69b0"/>
        <function-ref name="get" scoped="" ref="0x410b6a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x410b6b70"/>
        <function-ref name="set" scoped="" ref="0x410b6c50"/>
        <function-ref name="clr" scoped="" ref="0x410b6d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410b4010" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410b4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410b41e8"/>
        <function-ref name="isInput" scoped="" ref="0x410b42c8"/>
        <function-ref name="toggle" scoped="" ref="0x410b43a8"/>
        <function-ref name="isOutput" scoped="" ref="0x410b4488"/>
        <function-ref name="get" scoped="" ref="0x410b4568"/>
        <function-ref name="makeOutput" scoped="" ref="0x410b4648"/>
        <function-ref name="set" scoped="" ref="0x410b4728"/>
        <function-ref name="clr" scoped="" ref="0x410b4808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410b39e8" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410b39e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410b3bc0"/>
        <function-ref name="isInput" scoped="" ref="0x410b3ca0"/>
        <function-ref name="toggle" scoped="" ref="0x410b3d80"/>
        <function-ref name="isOutput" scoped="" ref="0x410b3e60"/>
        <function-ref name="get" scoped="" ref="0x410b2010"/>
        <function-ref name="makeOutput" scoped="" ref="0x410b20f0"/>
        <function-ref name="set" scoped="" ref="0x410b21d0"/>
        <function-ref name="clr" scoped="" ref="0x410b22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410b1538" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410b1538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410b1710"/>
        <function-ref name="isInput" scoped="" ref="0x410b17f0"/>
        <function-ref name="toggle" scoped="" ref="0x410b18d0"/>
        <function-ref name="isOutput" scoped="" ref="0x410b19b0"/>
        <function-ref name="get" scoped="" ref="0x410b1a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x410b1b70"/>
        <function-ref name="set" scoped="" ref="0x410b1c50"/>
        <function-ref name="clr" scoped="" ref="0x410b1d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410af010" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410af010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410af1e8"/>
        <function-ref name="isInput" scoped="" ref="0x410af2c8"/>
        <function-ref name="toggle" scoped="" ref="0x410af3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x410af488"/>
        <function-ref name="get" scoped="" ref="0x410af568"/>
        <function-ref name="makeOutput" scoped="" ref="0x410af648"/>
        <function-ref name="set" scoped="" ref="0x410af728"/>
        <function-ref name="clr" scoped="" ref="0x410af808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410ae9e8" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410ae9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410aebc0"/>
        <function-ref name="isInput" scoped="" ref="0x410aeca0"/>
        <function-ref name="toggle" scoped="" ref="0x410aed80"/>
        <function-ref name="isOutput" scoped="" ref="0x410aee60"/>
        <function-ref name="get" scoped="" ref="0x410ad010"/>
        <function-ref name="makeOutput" scoped="" ref="0x410ad0f0"/>
        <function-ref name="set" scoped="" ref="0x410ad1d0"/>
        <function-ref name="clr" scoped="" ref="0x410ad2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410ac538" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410ac538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410ac710"/>
        <function-ref name="isInput" scoped="" ref="0x410ac7f0"/>
        <function-ref name="toggle" scoped="" ref="0x410ac8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x410ac9b0"/>
        <function-ref name="get" scoped="" ref="0x410aca90"/>
        <function-ref name="makeOutput" scoped="" ref="0x410acb70"/>
        <function-ref name="set" scoped="" ref="0x410acc50"/>
        <function-ref name="clr" scoped="" ref="0x410acd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404aae48" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404aae48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a9050"/>
        <function-ref name="isInput" scoped="" ref="0x404a9130"/>
        <function-ref name="toggle" scoped="" ref="0x404a9210"/>
        <function-ref name="isOutput" scoped="" ref="0x404a92f0"/>
        <function-ref name="get" scoped="" ref="0x404a93d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a94b0"/>
        <function-ref name="set" scoped="" ref="0x404a9590"/>
        <function-ref name="clr" scoped="" ref="0x404a9670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404a8ac8" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404a8ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a8ca0"/>
        <function-ref name="isInput" scoped="" ref="0x404a8d80"/>
        <function-ref name="toggle" scoped="" ref="0x404a8e60"/>
        <function-ref name="isOutput" scoped="" ref="0x404a7010"/>
        <function-ref name="get" scoped="" ref="0x404a70f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a71d0"/>
        <function-ref name="set" scoped="" ref="0x404a72b0"/>
        <function-ref name="clr" scoped="" ref="0x404a7390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404abb00" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404abb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404abcd8"/>
        <function-ref name="isInput" scoped="" ref="0x404abdb8"/>
        <function-ref name="toggle" scoped="" ref="0x404abe98"/>
        <function-ref name="isOutput" scoped="" ref="0x404aa010"/>
        <function-ref name="get" scoped="" ref="0x404aa0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404aa1d0"/>
        <function-ref name="set" scoped="" ref="0x404aa2b0"/>
        <function-ref name="clr" scoped="" ref="0x404aa390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404a97d0" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404a97d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a99a8"/>
        <function-ref name="isInput" scoped="" ref="0x404a9a88"/>
        <function-ref name="toggle" scoped="" ref="0x404a9b68"/>
        <function-ref name="isOutput" scoped="" ref="0x404a9c48"/>
        <function-ref name="get" scoped="" ref="0x404a9d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a9e08"/>
        <function-ref name="set" scoped="" ref="0x404a9ee8"/>
        <function-ref name="clr" scoped="" ref="0x404a8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404a74f0" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404a74f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a76c8"/>
        <function-ref name="isInput" scoped="" ref="0x404a77a8"/>
        <function-ref name="toggle" scoped="" ref="0x404a7888"/>
        <function-ref name="isOutput" scoped="" ref="0x404a7968"/>
        <function-ref name="get" scoped="" ref="0x404a7a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a7b28"/>
        <function-ref name="set" scoped="" ref="0x404a7c08"/>
        <function-ref name="clr" scoped="" ref="0x404a7ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404aa4f0" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404aa4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404aa6c8"/>
        <function-ref name="isInput" scoped="" ref="0x404aa7a8"/>
        <function-ref name="toggle" scoped="" ref="0x404aa888"/>
        <function-ref name="isOutput" scoped="" ref="0x404aa968"/>
        <function-ref name="get" scoped="" ref="0x404aaa48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404aab28"/>
        <function-ref name="set" scoped="" ref="0x404aac08"/>
        <function-ref name="clr" scoped="" ref="0x404aace8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404a8170" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404a8170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a8348"/>
        <function-ref name="isInput" scoped="" ref="0x404a8428"/>
        <function-ref name="toggle" scoped="" ref="0x404a8508"/>
        <function-ref name="isOutput" scoped="" ref="0x404a85e8"/>
        <function-ref name="get" scoped="" ref="0x404a86c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a87a8"/>
        <function-ref name="set" scoped="" ref="0x404a8888"/>
        <function-ref name="clr" scoped="" ref="0x404a8968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404a7e48" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404a7e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b4050"/>
        <function-ref name="isInput" scoped="" ref="0x404b4130"/>
        <function-ref name="toggle" scoped="" ref="0x404b4210"/>
        <function-ref name="isOutput" scoped="" ref="0x404b42f0"/>
        <function-ref name="get" scoped="" ref="0x404b43d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b44b0"/>
        <function-ref name="set" scoped="" ref="0x404b4590"/>
        <function-ref name="clr" scoped="" ref="0x404b4670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410bd938" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410bd938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410bdb10"/>
        <function-ref name="isInput" scoped="" ref="0x410bdbf0"/>
        <function-ref name="toggle" scoped="" ref="0x410bdcd0"/>
        <function-ref name="isOutput" scoped="" ref="0x410bddb0"/>
        <function-ref name="get" scoped="" ref="0x410bde90"/>
        <function-ref name="makeOutput" scoped="" ref="0x410bc010"/>
        <function-ref name="set" scoped="" ref="0x410bc0f0"/>
        <function-ref name="clr" scoped="" ref="0x410bc1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410bb3b0" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410bb3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410bb588"/>
        <function-ref name="isInput" scoped="" ref="0x410bb668"/>
        <function-ref name="toggle" scoped="" ref="0x410bb748"/>
        <function-ref name="isOutput" scoped="" ref="0x410bb828"/>
        <function-ref name="get" scoped="" ref="0x410bb908"/>
        <function-ref name="makeOutput" scoped="" ref="0x410bb9e8"/>
        <function-ref name="set" scoped="" ref="0x410bbac8"/>
        <function-ref name="clr" scoped="" ref="0x410bbba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410bad70" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410bad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410b9010"/>
        <function-ref name="isInput" scoped="" ref="0x410b90f0"/>
        <function-ref name="toggle" scoped="" ref="0x410b91d0"/>
        <function-ref name="isOutput" scoped="" ref="0x410b92b0"/>
        <function-ref name="get" scoped="" ref="0x410b9390"/>
        <function-ref name="makeOutput" scoped="" ref="0x410b9470"/>
        <function-ref name="set" scoped="" ref="0x410b9550"/>
        <function-ref name="clr" scoped="" ref="0x410b9630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410f67f8" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410f67f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410f69d0"/>
        <function-ref name="isInput" scoped="" ref="0x410f6ab0"/>
        <function-ref name="toggle" scoped="" ref="0x410f6b90"/>
        <function-ref name="isOutput" scoped="" ref="0x410f6c70"/>
        <function-ref name="get" scoped="" ref="0x410f6d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x410f6e30"/>
        <function-ref name="set" scoped="" ref="0x410f6f10"/>
        <function-ref name="clr" scoped="" ref="0x410f5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410f4228" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410f4228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410f4400"/>
        <function-ref name="isInput" scoped="" ref="0x410f44e0"/>
        <function-ref name="toggle" scoped="" ref="0x410f45c0"/>
        <function-ref name="isOutput" scoped="" ref="0x410f46a0"/>
        <function-ref name="get" scoped="" ref="0x410f4780"/>
        <function-ref name="makeOutput" scoped="" ref="0x410f4860"/>
        <function-ref name="set" scoped="" ref="0x410f4940"/>
        <function-ref name="clr" scoped="" ref="0x410f4a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410f3c08" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410f3c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410f3de0"/>
        <function-ref name="isInput" scoped="" ref="0x410f3ec0"/>
        <function-ref name="toggle" scoped="" ref="0x410f2010"/>
        <function-ref name="isOutput" scoped="" ref="0x410f20f0"/>
        <function-ref name="get" scoped="" ref="0x410f21d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x410f22b0"/>
        <function-ref name="set" scoped="" ref="0x410f2390"/>
        <function-ref name="clr" scoped="" ref="0x410f2470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410f16c0" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410f16c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410f1898"/>
        <function-ref name="isInput" scoped="" ref="0x410f1978"/>
        <function-ref name="toggle" scoped="" ref="0x410f1a58"/>
        <function-ref name="isOutput" scoped="" ref="0x410f1b38"/>
        <function-ref name="get" scoped="" ref="0x410f1c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x410f1cf8"/>
        <function-ref name="set" scoped="" ref="0x410f1dd8"/>
        <function-ref name="clr" scoped="" ref="0x410f1eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410ef0b0" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410ef0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410ef288"/>
        <function-ref name="isInput" scoped="" ref="0x410ef368"/>
        <function-ref name="toggle" scoped="" ref="0x410ef448"/>
        <function-ref name="isOutput" scoped="" ref="0x410ef528"/>
        <function-ref name="get" scoped="" ref="0x410ef608"/>
        <function-ref name="makeOutput" scoped="" ref="0x410ef6e8"/>
        <function-ref name="set" scoped="" ref="0x410ef7c8"/>
        <function-ref name="clr" scoped="" ref="0x410ef8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404af6b0" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404af6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404af888"/>
        <function-ref name="isInput" scoped="" ref="0x404af968"/>
        <function-ref name="toggle" scoped="" ref="0x404afa48"/>
        <function-ref name="isOutput" scoped="" ref="0x404afb28"/>
        <function-ref name="get" scoped="" ref="0x404afc08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404afce8"/>
        <function-ref name="set" scoped="" ref="0x404afdc8"/>
        <function-ref name="clr" scoped="" ref="0x404afea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404bb330" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404bb330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bb508"/>
        <function-ref name="isInput" scoped="" ref="0x404bb5e8"/>
        <function-ref name="toggle" scoped="" ref="0x404bb6c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404bb7a8"/>
        <function-ref name="get" scoped="" ref="0x404bb888"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bb968"/>
        <function-ref name="set" scoped="" ref="0x404bba48"/>
        <function-ref name="clr" scoped="" ref="0x404bbb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404b03d8" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404b03d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b05b0"/>
        <function-ref name="isInput" scoped="" ref="0x404b0690"/>
        <function-ref name="toggle" scoped="" ref="0x404b0770"/>
        <function-ref name="isOutput" scoped="" ref="0x404b0850"/>
        <function-ref name="get" scoped="" ref="0x404b0930"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b0a10"/>
        <function-ref name="set" scoped="" ref="0x404b0af0"/>
        <function-ref name="clr" scoped="" ref="0x404b0bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404ae030" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404ae030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ae208"/>
        <function-ref name="isInput" scoped="" ref="0x404ae2e8"/>
        <function-ref name="toggle" scoped="" ref="0x404ae3c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404ae4a8"/>
        <function-ref name="get" scoped="" ref="0x404ae588"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ae668"/>
        <function-ref name="set" scoped="" ref="0x404ae748"/>
        <function-ref name="clr" scoped="" ref="0x404ae828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404bbc88" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404bbc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bbe60"/>
        <function-ref name="isInput" scoped="" ref="0x404ba010"/>
        <function-ref name="toggle" scoped="" ref="0x404ba0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404ba1d0"/>
        <function-ref name="get" scoped="" ref="0x404ba2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ba390"/>
        <function-ref name="set" scoped="" ref="0x404ba470"/>
        <function-ref name="clr" scoped="" ref="0x404ba550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404b0d30" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404b0d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b0f08"/>
        <function-ref name="isInput" scoped="" ref="0x404af010"/>
        <function-ref name="toggle" scoped="" ref="0x404af0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404af1d0"/>
        <function-ref name="get" scoped="" ref="0x404af2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404af390"/>
        <function-ref name="set" scoped="" ref="0x404af470"/>
        <function-ref name="clr" scoped="" ref="0x404af550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404ae988" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404ae988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404aeb60"/>
        <function-ref name="isInput" scoped="" ref="0x404aec40"/>
        <function-ref name="toggle" scoped="" ref="0x404aed20"/>
        <function-ref name="isOutput" scoped="" ref="0x404aee00"/>
        <function-ref name="get" scoped="" ref="0x404aeee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bb010"/>
        <function-ref name="set" scoped="" ref="0x404bb0f0"/>
        <function-ref name="clr" scoped="" ref="0x404bb1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404ba6b0" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404ba6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ba888"/>
        <function-ref name="isInput" scoped="" ref="0x404ba968"/>
        <function-ref name="toggle" scoped="" ref="0x404baa48"/>
        <function-ref name="isOutput" scoped="" ref="0x404bab28"/>
        <function-ref name="get" scoped="" ref="0x404bac08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bace8"/>
        <function-ref name="set" scoped="" ref="0x404badc8"/>
        <function-ref name="clr" scoped="" ref="0x404baea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41100538" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41100538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41100710"/>
        <function-ref name="isInput" scoped="" ref="0x411007f0"/>
        <function-ref name="toggle" scoped="" ref="0x411008d0"/>
        <function-ref name="isOutput" scoped="" ref="0x411009b0"/>
        <function-ref name="get" scoped="" ref="0x41100a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41100b70"/>
        <function-ref name="set" scoped="" ref="0x41100c50"/>
        <function-ref name="clr" scoped="" ref="0x41100d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410fe010" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410fe010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410fe1e8"/>
        <function-ref name="isInput" scoped="" ref="0x410fe2c8"/>
        <function-ref name="toggle" scoped="" ref="0x410fe3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x410fe488"/>
        <function-ref name="get" scoped="" ref="0x410fe568"/>
        <function-ref name="makeOutput" scoped="" ref="0x410fe648"/>
        <function-ref name="set" scoped="" ref="0x410fe728"/>
        <function-ref name="clr" scoped="" ref="0x410fe808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410fd9e8" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410fd9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410fdbc0"/>
        <function-ref name="isInput" scoped="" ref="0x410fdca0"/>
        <function-ref name="toggle" scoped="" ref="0x410fdd80"/>
        <function-ref name="isOutput" scoped="" ref="0x410fde60"/>
        <function-ref name="get" scoped="" ref="0x410fc010"/>
        <function-ref name="makeOutput" scoped="" ref="0x410fc0f0"/>
        <function-ref name="set" scoped="" ref="0x410fc1d0"/>
        <function-ref name="clr" scoped="" ref="0x410fc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410fb538" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410fb538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410fb710"/>
        <function-ref name="isInput" scoped="" ref="0x410fb7f0"/>
        <function-ref name="toggle" scoped="" ref="0x410fb8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x410fb9b0"/>
        <function-ref name="get" scoped="" ref="0x410fba90"/>
        <function-ref name="makeOutput" scoped="" ref="0x410fbb70"/>
        <function-ref name="set" scoped="" ref="0x410fbc50"/>
        <function-ref name="clr" scoped="" ref="0x410fbd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410f9010" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410f9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410f91e8"/>
        <function-ref name="isInput" scoped="" ref="0x410f92c8"/>
        <function-ref name="toggle" scoped="" ref="0x410f93a8"/>
        <function-ref name="isOutput" scoped="" ref="0x410f9488"/>
        <function-ref name="get" scoped="" ref="0x410f9568"/>
        <function-ref name="makeOutput" scoped="" ref="0x410f9648"/>
        <function-ref name="set" scoped="" ref="0x410f9728"/>
        <function-ref name="clr" scoped="" ref="0x410f9808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410f89e8" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410f89e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x410f8bc0"/>
        <function-ref name="isInput" scoped="" ref="0x410f8ca0"/>
        <function-ref name="toggle" scoped="" ref="0x410f8d80"/>
        <function-ref name="isOutput" scoped="" ref="0x410f8e60"/>
        <function-ref name="get" scoped="" ref="0x410f7010"/>
        <function-ref name="makeOutput" scoped="" ref="0x410f70f0"/>
        <function-ref name="set" scoped="" ref="0x410f71d0"/>
        <function-ref name="clr" scoped="" ref="0x410f72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41134538" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41134538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41134710"/>
        <function-ref name="isInput" scoped="" ref="0x411347f0"/>
        <function-ref name="toggle" scoped="" ref="0x411348d0"/>
        <function-ref name="isOutput" scoped="" ref="0x411349b0"/>
        <function-ref name="get" scoped="" ref="0x41134a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41134b70"/>
        <function-ref name="set" scoped="" ref="0x41134c50"/>
        <function-ref name="clr" scoped="" ref="0x41134d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41132010" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41132010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411321e8"/>
        <function-ref name="isInput" scoped="" ref="0x411322c8"/>
        <function-ref name="toggle" scoped="" ref="0x411323a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41132488"/>
        <function-ref name="get" scoped="" ref="0x41132568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41132648"/>
        <function-ref name="set" scoped="" ref="0x41132728"/>
        <function-ref name="clr" scoped="" ref="0x41132808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404b5170" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404b5170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b5348"/>
        <function-ref name="isInput" scoped="" ref="0x404b5428"/>
        <function-ref name="toggle" scoped="" ref="0x404b5508"/>
        <function-ref name="isOutput" scoped="" ref="0x404b55e8"/>
        <function-ref name="get" scoped="" ref="0x404b56c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b57a8"/>
        <function-ref name="set" scoped="" ref="0x404b5888"/>
        <function-ref name="clr" scoped="" ref="0x404b5968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404c1e48" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404c1e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c0050"/>
        <function-ref name="isInput" scoped="" ref="0x404c0130"/>
        <function-ref name="toggle" scoped="" ref="0x404c0210"/>
        <function-ref name="isOutput" scoped="" ref="0x404c02f0"/>
        <function-ref name="get" scoped="" ref="0x404c03d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c04b0"/>
        <function-ref name="set" scoped="" ref="0x404c0590"/>
        <function-ref name="clr" scoped="" ref="0x404c0670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404b7dc8" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404b7dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b6010"/>
        <function-ref name="isInput" scoped="" ref="0x404b60f0"/>
        <function-ref name="toggle" scoped="" ref="0x404b61d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404b62b0"/>
        <function-ref name="get" scoped="" ref="0x404b6390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b6470"/>
        <function-ref name="set" scoped="" ref="0x404b6550"/>
        <function-ref name="clr" scoped="" ref="0x404b6630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404b5ac8" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404b5ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b5ca0"/>
        <function-ref name="isInput" scoped="" ref="0x404b5d80"/>
        <function-ref name="toggle" scoped="" ref="0x404b5e60"/>
        <function-ref name="isOutput" scoped="" ref="0x404c1010"/>
        <function-ref name="get" scoped="" ref="0x404c10f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c11d0"/>
        <function-ref name="set" scoped="" ref="0x404c12b0"/>
        <function-ref name="clr" scoped="" ref="0x404c1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404c07d0" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404c07d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c09a8"/>
        <function-ref name="isInput" scoped="" ref="0x404c0a88"/>
        <function-ref name="toggle" scoped="" ref="0x404c0b68"/>
        <function-ref name="isOutput" scoped="" ref="0x404c0c48"/>
        <function-ref name="get" scoped="" ref="0x404c0d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c0e08"/>
        <function-ref name="set" scoped="" ref="0x404c0ee8"/>
        <function-ref name="clr" scoped="" ref="0x404bf010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404b6790" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404b6790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b6968"/>
        <function-ref name="isInput" scoped="" ref="0x404b6a48"/>
        <function-ref name="toggle" scoped="" ref="0x404b6b28"/>
        <function-ref name="isOutput" scoped="" ref="0x404b6c08"/>
        <function-ref name="get" scoped="" ref="0x404b6ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b6dc8"/>
        <function-ref name="set" scoped="" ref="0x404b6ea8"/>
        <function-ref name="clr" scoped="" ref="0x404b5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404c14f0" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404c14f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c16c8"/>
        <function-ref name="isInput" scoped="" ref="0x404c17a8"/>
        <function-ref name="toggle" scoped="" ref="0x404c1888"/>
        <function-ref name="isOutput" scoped="" ref="0x404c1968"/>
        <function-ref name="get" scoped="" ref="0x404c1a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c1b28"/>
        <function-ref name="set" scoped="" ref="0x404c1c08"/>
        <function-ref name="clr" scoped="" ref="0x404c1ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404bf170" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404bf170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bf348"/>
        <function-ref name="isInput" scoped="" ref="0x404bf428"/>
        <function-ref name="toggle" scoped="" ref="0x404bf508"/>
        <function-ref name="isOutput" scoped="" ref="0x404bf5e8"/>
        <function-ref name="get" scoped="" ref="0x404bf6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bf7a8"/>
        <function-ref name="set" scoped="" ref="0x404bf888"/>
        <function-ref name="clr" scoped="" ref="0x404bf968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41145418" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41145418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411455f0"/>
        <function-ref name="isInput" scoped="" ref="0x411456d0"/>
        <function-ref name="toggle" scoped="" ref="0x411457b0"/>
        <function-ref name="isOutput" scoped="" ref="0x41145890"/>
        <function-ref name="get" scoped="" ref="0x41145970"/>
        <function-ref name="makeOutput" scoped="" ref="0x41145a50"/>
        <function-ref name="set" scoped="" ref="0x41145b30"/>
        <function-ref name="clr" scoped="" ref="0x41145c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41144de0" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41144de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41143010"/>
        <function-ref name="isInput" scoped="" ref="0x411430f0"/>
        <function-ref name="toggle" scoped="" ref="0x411431d0"/>
        <function-ref name="isOutput" scoped="" ref="0x411432b0"/>
        <function-ref name="get" scoped="" ref="0x41143390"/>
        <function-ref name="makeOutput" scoped="" ref="0x41143470"/>
        <function-ref name="set" scoped="" ref="0x41143550"/>
        <function-ref name="clr" scoped="" ref="0x41143630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411427f8" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411427f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411429d0"/>
        <function-ref name="isInput" scoped="" ref="0x41142ab0"/>
        <function-ref name="toggle" scoped="" ref="0x41142b90"/>
        <function-ref name="isOutput" scoped="" ref="0x41142c70"/>
        <function-ref name="get" scoped="" ref="0x41142d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x41142e30"/>
        <function-ref name="set" scoped="" ref="0x41142f10"/>
        <function-ref name="clr" scoped="" ref="0x41141010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41140228" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41140228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41140400"/>
        <function-ref name="isInput" scoped="" ref="0x411404e0"/>
        <function-ref name="toggle" scoped="" ref="0x411405c0"/>
        <function-ref name="isOutput" scoped="" ref="0x411406a0"/>
        <function-ref name="get" scoped="" ref="0x41140780"/>
        <function-ref name="makeOutput" scoped="" ref="0x41140860"/>
        <function-ref name="set" scoped="" ref="0x41140940"/>
        <function-ref name="clr" scoped="" ref="0x41140a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4113fc08" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4113fc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4113fde0"/>
        <function-ref name="isInput" scoped="" ref="0x4113fec0"/>
        <function-ref name="toggle" scoped="" ref="0x4113e010"/>
        <function-ref name="isOutput" scoped="" ref="0x4113e0f0"/>
        <function-ref name="get" scoped="" ref="0x4113e1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4113e2b0"/>
        <function-ref name="set" scoped="" ref="0x4113e390"/>
        <function-ref name="clr" scoped="" ref="0x4113e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4113d6c0" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4113d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4113d898"/>
        <function-ref name="isInput" scoped="" ref="0x4113d978"/>
        <function-ref name="toggle" scoped="" ref="0x4113da58"/>
        <function-ref name="isOutput" scoped="" ref="0x4113db38"/>
        <function-ref name="get" scoped="" ref="0x4113dc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4113dcf8"/>
        <function-ref name="set" scoped="" ref="0x4113ddd8"/>
        <function-ref name="clr" scoped="" ref="0x4113deb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4113b0b0" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4113b0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4113b288"/>
        <function-ref name="isInput" scoped="" ref="0x4113b368"/>
        <function-ref name="toggle" scoped="" ref="0x4113b448"/>
        <function-ref name="isOutput" scoped="" ref="0x4113b528"/>
        <function-ref name="get" scoped="" ref="0x4113b608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4113b6e8"/>
        <function-ref name="set" scoped="" ref="0x4113b7c8"/>
        <function-ref name="clr" scoped="" ref="0x4113b8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4113aa88" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4113aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4113ac60"/>
        <function-ref name="isInput" scoped="" ref="0x4113ad40"/>
        <function-ref name="toggle" scoped="" ref="0x4113ae20"/>
        <function-ref name="isOutput" scoped="" ref="0x4113af00"/>
        <function-ref name="get" scoped="" ref="0x41138010"/>
        <function-ref name="makeOutput" scoped="" ref="0x411380f0"/>
        <function-ref name="set" scoped="" ref="0x411381d0"/>
        <function-ref name="clr" scoped="" ref="0x411382b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404c99e8" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404c99e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c9bc0"/>
        <function-ref name="isInput" scoped="" ref="0x404c9ca0"/>
        <function-ref name="toggle" scoped="" ref="0x404c9d80"/>
        <function-ref name="isOutput" scoped="" ref="0x404c9e60"/>
        <function-ref name="get" scoped="" ref="0x404c8010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c80f0"/>
        <function-ref name="set" scoped="" ref="0x404c81d0"/>
        <function-ref name="clr" scoped="" ref="0x404c82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404c7790" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404c7790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c7968"/>
        <function-ref name="isInput" scoped="" ref="0x404c7a48"/>
        <function-ref name="toggle" scoped="" ref="0x404c7b28"/>
        <function-ref name="isOutput" scoped="" ref="0x404c7c08"/>
        <function-ref name="get" scoped="" ref="0x404c7ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c7dc8"/>
        <function-ref name="set" scoped="" ref="0x404c7ea8"/>
        <function-ref name="clr" scoped="" ref="0x404c6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404bc6f8" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404bc6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bc8d0"/>
        <function-ref name="isInput" scoped="" ref="0x404bc9b0"/>
        <function-ref name="toggle" scoped="" ref="0x404bca90"/>
        <function-ref name="isOutput" scoped="" ref="0x404bcb70"/>
        <function-ref name="get" scoped="" ref="0x404bcc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bcd30"/>
        <function-ref name="set" scoped="" ref="0x404bce10"/>
        <function-ref name="clr" scoped="" ref="0x404bcef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404c8410" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404c8410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c85e8"/>
        <function-ref name="isInput" scoped="" ref="0x404c86c8"/>
        <function-ref name="toggle" scoped="" ref="0x404c87a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404c8888"/>
        <function-ref name="get" scoped="" ref="0x404c8968"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c8a48"/>
        <function-ref name="set" scoped="" ref="0x404c8b28"/>
        <function-ref name="clr" scoped="" ref="0x404c8c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404c6170" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404c6170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c6348"/>
        <function-ref name="isInput" scoped="" ref="0x404c6428"/>
        <function-ref name="toggle" scoped="" ref="0x404c6508"/>
        <function-ref name="isOutput" scoped="" ref="0x404c65e8"/>
        <function-ref name="get" scoped="" ref="0x404c66c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c67a8"/>
        <function-ref name="set" scoped="" ref="0x404c6888"/>
        <function-ref name="clr" scoped="" ref="0x404c6968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404c9090" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404c9090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c9268"/>
        <function-ref name="isInput" scoped="" ref="0x404c9348"/>
        <function-ref name="toggle" scoped="" ref="0x404c9428"/>
        <function-ref name="isOutput" scoped="" ref="0x404c9508"/>
        <function-ref name="get" scoped="" ref="0x404c95e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c96c8"/>
        <function-ref name="set" scoped="" ref="0x404c97a8"/>
        <function-ref name="clr" scoped="" ref="0x404c9888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404c8d68" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404c8d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c7010"/>
        <function-ref name="isInput" scoped="" ref="0x404c70f0"/>
        <function-ref name="toggle" scoped="" ref="0x404c71d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404c72b0"/>
        <function-ref name="get" scoped="" ref="0x404c7390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c7470"/>
        <function-ref name="set" scoped="" ref="0x404c7550"/>
        <function-ref name="clr" scoped="" ref="0x404c7630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404c6ac8" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404c6ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c6ca0"/>
        <function-ref name="isInput" scoped="" ref="0x404c6d80"/>
        <function-ref name="toggle" scoped="" ref="0x404c6e60"/>
        <function-ref name="isOutput" scoped="" ref="0x404c5010"/>
        <function-ref name="get" scoped="" ref="0x404c50f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c51d0"/>
        <function-ref name="set" scoped="" ref="0x404c52b0"/>
        <function-ref name="clr" scoped="" ref="0x404c5390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4118c6c0" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4118c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4118c898"/>
        <function-ref name="isInput" scoped="" ref="0x4118c978"/>
        <function-ref name="toggle" scoped="" ref="0x4118ca58"/>
        <function-ref name="isOutput" scoped="" ref="0x4118cb38"/>
        <function-ref name="get" scoped="" ref="0x4118cc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4118ccf8"/>
        <function-ref name="set" scoped="" ref="0x4118cdd8"/>
        <function-ref name="clr" scoped="" ref="0x4118ceb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4118a0b0" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4118a0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4118a288"/>
        <function-ref name="isInput" scoped="" ref="0x4118a368"/>
        <function-ref name="toggle" scoped="" ref="0x4118a448"/>
        <function-ref name="isOutput" scoped="" ref="0x4118a528"/>
        <function-ref name="get" scoped="" ref="0x4118a608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4118a6e8"/>
        <function-ref name="set" scoped="" ref="0x4118a7c8"/>
        <function-ref name="clr" scoped="" ref="0x4118a8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41189a88" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41189a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41189c60"/>
        <function-ref name="isInput" scoped="" ref="0x41189d40"/>
        <function-ref name="toggle" scoped="" ref="0x41189e20"/>
        <function-ref name="isOutput" scoped="" ref="0x41189f00"/>
        <function-ref name="get" scoped="" ref="0x41188010"/>
        <function-ref name="makeOutput" scoped="" ref="0x411880f0"/>
        <function-ref name="set" scoped="" ref="0x411881d0"/>
        <function-ref name="clr" scoped="" ref="0x411882b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41187538" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41187538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41187710"/>
        <function-ref name="isInput" scoped="" ref="0x411877f0"/>
        <function-ref name="toggle" scoped="" ref="0x411878d0"/>
        <function-ref name="isOutput" scoped="" ref="0x411879b0"/>
        <function-ref name="get" scoped="" ref="0x41187a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41187b70"/>
        <function-ref name="set" scoped="" ref="0x41187c50"/>
        <function-ref name="clr" scoped="" ref="0x41187d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41185010" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41185010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411851e8"/>
        <function-ref name="isInput" scoped="" ref="0x411852c8"/>
        <function-ref name="toggle" scoped="" ref="0x411853a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41185488"/>
        <function-ref name="get" scoped="" ref="0x41185568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41185648"/>
        <function-ref name="set" scoped="" ref="0x41185728"/>
        <function-ref name="clr" scoped="" ref="0x41185808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411849e8" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411849e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41184bc0"/>
        <function-ref name="isInput" scoped="" ref="0x41184ca0"/>
        <function-ref name="toggle" scoped="" ref="0x41184d80"/>
        <function-ref name="isOutput" scoped="" ref="0x41184e60"/>
        <function-ref name="get" scoped="" ref="0x41183010"/>
        <function-ref name="makeOutput" scoped="" ref="0x411830f0"/>
        <function-ref name="set" scoped="" ref="0x411831d0"/>
        <function-ref name="clr" scoped="" ref="0x411832b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41182538" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41182538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41182710"/>
        <function-ref name="isInput" scoped="" ref="0x411827f0"/>
        <function-ref name="toggle" scoped="" ref="0x411828d0"/>
        <function-ref name="isOutput" scoped="" ref="0x411829b0"/>
        <function-ref name="get" scoped="" ref="0x41182a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41182b70"/>
        <function-ref name="set" scoped="" ref="0x41182c50"/>
        <function-ref name="clr" scoped="" ref="0x41182d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41180010" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41180010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411801e8"/>
        <function-ref name="isInput" scoped="" ref="0x411802c8"/>
        <function-ref name="toggle" scoped="" ref="0x411803a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41180488"/>
        <function-ref name="get" scoped="" ref="0x41180568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41180648"/>
        <function-ref name="set" scoped="" ref="0x41180728"/>
        <function-ref name="clr" scoped="" ref="0x41180808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404ce330" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404ce330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ce508"/>
        <function-ref name="isInput" scoped="" ref="0x404ce5e8"/>
        <function-ref name="toggle" scoped="" ref="0x404ce6c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404ce7a8"/>
        <function-ref name="get" scoped="" ref="0x404ce888"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ce968"/>
        <function-ref name="set" scoped="" ref="0x404cea48"/>
        <function-ref name="clr" scoped="" ref="0x404ceb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404cc030" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404cc030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cc208"/>
        <function-ref name="isInput" scoped="" ref="0x404cc2e8"/>
        <function-ref name="toggle" scoped="" ref="0x404cc3c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404cc4a8"/>
        <function-ref name="get" scoped="" ref="0x404cc588"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cc668"/>
        <function-ref name="set" scoped="" ref="0x404cc748"/>
        <function-ref name="clr" scoped="" ref="0x404cc828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404cf010" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404cf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cf1e8"/>
        <function-ref name="isInput" scoped="" ref="0x404cf2c8"/>
        <function-ref name="toggle" scoped="" ref="0x404cf3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404cf488"/>
        <function-ref name="get" scoped="" ref="0x404cf568"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cf648"/>
        <function-ref name="set" scoped="" ref="0x404cf728"/>
        <function-ref name="clr" scoped="" ref="0x404cf808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404cec88" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404cec88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cee60"/>
        <function-ref name="isInput" scoped="" ref="0x404cd010"/>
        <function-ref name="toggle" scoped="" ref="0x404cd0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404cd1d0"/>
        <function-ref name="get" scoped="" ref="0x404cd2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cd390"/>
        <function-ref name="set" scoped="" ref="0x404cd470"/>
        <function-ref name="clr" scoped="" ref="0x404cd550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404cc988" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404cc988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ccb60"/>
        <function-ref name="isInput" scoped="" ref="0x404ccc40"/>
        <function-ref name="toggle" scoped="" ref="0x404ccd20"/>
        <function-ref name="isOutput" scoped="" ref="0x404cce00"/>
        <function-ref name="get" scoped="" ref="0x404ccee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cb010"/>
        <function-ref name="set" scoped="" ref="0x404cb0f0"/>
        <function-ref name="clr" scoped="" ref="0x404cb1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404cf968" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404cf968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cfb40"/>
        <function-ref name="isInput" scoped="" ref="0x404cfc20"/>
        <function-ref name="toggle" scoped="" ref="0x404cfd00"/>
        <function-ref name="isOutput" scoped="" ref="0x404cfde0"/>
        <function-ref name="get" scoped="" ref="0x404cfec0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ce010"/>
        <function-ref name="set" scoped="" ref="0x404ce0f0"/>
        <function-ref name="clr" scoped="" ref="0x404ce1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404cd6b0" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404cd6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cd888"/>
        <function-ref name="isInput" scoped="" ref="0x404cd968"/>
        <function-ref name="toggle" scoped="" ref="0x404cda48"/>
        <function-ref name="isOutput" scoped="" ref="0x404cdb28"/>
        <function-ref name="get" scoped="" ref="0x404cdc08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cdce8"/>
        <function-ref name="set" scoped="" ref="0x404cddc8"/>
        <function-ref name="clr" scoped="" ref="0x404cdea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404cb330" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404cb330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cb508"/>
        <function-ref name="isInput" scoped="" ref="0x404cb5e8"/>
        <function-ref name="toggle" scoped="" ref="0x404cb6c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404cb7a8"/>
        <function-ref name="get" scoped="" ref="0x404cb888"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cb968"/>
        <function-ref name="set" scoped="" ref="0x404cba48"/>
        <function-ref name="clr" scoped="" ref="0x404cbb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411d5418" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411d5418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411d55f0"/>
        <function-ref name="isInput" scoped="" ref="0x411d56d0"/>
        <function-ref name="toggle" scoped="" ref="0x411d57b0"/>
        <function-ref name="isOutput" scoped="" ref="0x411d5890"/>
        <function-ref name="get" scoped="" ref="0x411d5970"/>
        <function-ref name="makeOutput" scoped="" ref="0x411d5a50"/>
        <function-ref name="set" scoped="" ref="0x411d5b30"/>
        <function-ref name="clr" scoped="" ref="0x411d5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411d4de0" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411d4de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411d3010"/>
        <function-ref name="isInput" scoped="" ref="0x411d30f0"/>
        <function-ref name="toggle" scoped="" ref="0x411d31d0"/>
        <function-ref name="isOutput" scoped="" ref="0x411d32b0"/>
        <function-ref name="get" scoped="" ref="0x411d3390"/>
        <function-ref name="makeOutput" scoped="" ref="0x411d3470"/>
        <function-ref name="set" scoped="" ref="0x411d3550"/>
        <function-ref name="clr" scoped="" ref="0x411d3630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411d27f8" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411d27f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411d29d0"/>
        <function-ref name="isInput" scoped="" ref="0x411d2ab0"/>
        <function-ref name="toggle" scoped="" ref="0x411d2b90"/>
        <function-ref name="isOutput" scoped="" ref="0x411d2c70"/>
        <function-ref name="get" scoped="" ref="0x411d2d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x411d2e30"/>
        <function-ref name="set" scoped="" ref="0x411d2f10"/>
        <function-ref name="clr" scoped="" ref="0x411d1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411d0228" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411d0228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411d0400"/>
        <function-ref name="isInput" scoped="" ref="0x411d04e0"/>
        <function-ref name="toggle" scoped="" ref="0x411d05c0"/>
        <function-ref name="isOutput" scoped="" ref="0x411d06a0"/>
        <function-ref name="get" scoped="" ref="0x411d0780"/>
        <function-ref name="makeOutput" scoped="" ref="0x411d0860"/>
        <function-ref name="set" scoped="" ref="0x411d0940"/>
        <function-ref name="clr" scoped="" ref="0x411d0a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411cfc08" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411cfc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411cfde0"/>
        <function-ref name="isInput" scoped="" ref="0x411cfec0"/>
        <function-ref name="toggle" scoped="" ref="0x411ce010"/>
        <function-ref name="isOutput" scoped="" ref="0x411ce0f0"/>
        <function-ref name="get" scoped="" ref="0x411ce1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x411ce2b0"/>
        <function-ref name="set" scoped="" ref="0x411ce390"/>
        <function-ref name="clr" scoped="" ref="0x411ce470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411cd6c0" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411cd6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411cd898"/>
        <function-ref name="isInput" scoped="" ref="0x411cd978"/>
        <function-ref name="toggle" scoped="" ref="0x411cda58"/>
        <function-ref name="isOutput" scoped="" ref="0x411cdb38"/>
        <function-ref name="get" scoped="" ref="0x411cdc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x411cdcf8"/>
        <function-ref name="set" scoped="" ref="0x411cddd8"/>
        <function-ref name="clr" scoped="" ref="0x411cdeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411ca0b0" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411ca0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411ca288"/>
        <function-ref name="isInput" scoped="" ref="0x411ca368"/>
        <function-ref name="toggle" scoped="" ref="0x411ca448"/>
        <function-ref name="isOutput" scoped="" ref="0x411ca528"/>
        <function-ref name="get" scoped="" ref="0x411ca608"/>
        <function-ref name="makeOutput" scoped="" ref="0x411ca6e8"/>
        <function-ref name="set" scoped="" ref="0x411ca7c8"/>
        <function-ref name="clr" scoped="" ref="0x411ca8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411c9a88" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411c9a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411c9c60"/>
        <function-ref name="isInput" scoped="" ref="0x411c9d40"/>
        <function-ref name="toggle" scoped="" ref="0x411c9e20"/>
        <function-ref name="isOutput" scoped="" ref="0x411c9f00"/>
        <function-ref name="get" scoped="" ref="0x411c8010"/>
        <function-ref name="makeOutput" scoped="" ref="0x411c80f0"/>
        <function-ref name="set" scoped="" ref="0x411c81d0"/>
        <function-ref name="clr" scoped="" ref="0x411c82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404d52d0" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404d52d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d54a8"/>
        <function-ref name="isInput" scoped="" ref="0x404d5588"/>
        <function-ref name="toggle" scoped="" ref="0x404d5668"/>
        <function-ref name="isOutput" scoped="" ref="0x404d5748"/>
        <function-ref name="get" scoped="" ref="0x404d5828"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d5908"/>
        <function-ref name="set" scoped="" ref="0x404d59e8"/>
        <function-ref name="clr" scoped="" ref="0x404d5ac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404e18a0" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404e18a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e1a78"/>
        <function-ref name="isInput" scoped="" ref="0x404e1b58"/>
        <function-ref name="toggle" scoped="" ref="0x404e1c38"/>
        <function-ref name="isOutput" scoped="" ref="0x404e1d18"/>
        <function-ref name="get" scoped="" ref="0x404e1df8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e1ed8"/>
        <function-ref name="set" scoped="" ref="0x404e0010"/>
        <function-ref name="clr" scoped="" ref="0x404e00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404dfec0" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404dfec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ec0c0"/>
        <function-ref name="isInput" scoped="" ref="0x404ec1a0"/>
        <function-ref name="toggle" scoped="" ref="0x404ec280"/>
        <function-ref name="isOutput" scoped="" ref="0x404ec360"/>
        <function-ref name="get" scoped="" ref="0x404ec440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ec520"/>
        <function-ref name="set" scoped="" ref="0x404ec600"/>
        <function-ref name="clr" scoped="" ref="0x404ec6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404ea538" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404ea538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ea710"/>
        <function-ref name="isInput" scoped="" ref="0x404ea7f0"/>
        <function-ref name="toggle" scoped="" ref="0x404ea8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404ea9b0"/>
        <function-ref name="get" scoped="" ref="0x404eaa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x404eab70"/>
        <function-ref name="set" scoped="" ref="0x404eac50"/>
        <function-ref name="clr" scoped="" ref="0x404ead30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404e7b68" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404e7b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e7d40"/>
        <function-ref name="isInput" scoped="" ref="0x404e7e20"/>
        <function-ref name="toggle" scoped="" ref="0x404e7f00"/>
        <function-ref name="isOutput" scoped="" ref="0x404e6010"/>
        <function-ref name="get" scoped="" ref="0x404e60f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e61d0"/>
        <function-ref name="set" scoped="" ref="0x404e62b0"/>
        <function-ref name="clr" scoped="" ref="0x404e6390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404f2228" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404f2228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f2400"/>
        <function-ref name="isInput" scoped="" ref="0x404f24e0"/>
        <function-ref name="toggle" scoped="" ref="0x404f25c0"/>
        <function-ref name="isOutput" scoped="" ref="0x404f26a0"/>
        <function-ref name="get" scoped="" ref="0x404f2780"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f2860"/>
        <function-ref name="set" scoped="" ref="0x404f2940"/>
        <function-ref name="clr" scoped="" ref="0x404f2a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404ef8f0" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404ef8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404efac8"/>
        <function-ref name="isInput" scoped="" ref="0x404efba8"/>
        <function-ref name="toggle" scoped="" ref="0x404efc88"/>
        <function-ref name="isOutput" scoped="" ref="0x404efd68"/>
        <function-ref name="get" scoped="" ref="0x404efe48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404eff28"/>
        <function-ref name="set" scoped="" ref="0x404ee018"/>
        <function-ref name="clr" scoped="" ref="0x404ee0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404edec0" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404edec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fa0c0"/>
        <function-ref name="isInput" scoped="" ref="0x404fa1a0"/>
        <function-ref name="toggle" scoped="" ref="0x404fa280"/>
        <function-ref name="isOutput" scoped="" ref="0x404fa360"/>
        <function-ref name="get" scoped="" ref="0x404fa440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fa520"/>
        <function-ref name="set" scoped="" ref="0x404fa600"/>
        <function-ref name="clr" scoped="" ref="0x404fa6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404f83e8" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404f83e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f85c0"/>
        <function-ref name="isInput" scoped="" ref="0x404f86a0"/>
        <function-ref name="toggle" scoped="" ref="0x404f8780"/>
        <function-ref name="isOutput" scoped="" ref="0x404f8860"/>
        <function-ref name="get" scoped="" ref="0x404f8940"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f8a20"/>
        <function-ref name="set" scoped="" ref="0x404f8b00"/>
        <function-ref name="clr" scoped="" ref="0x404f8be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404f58f0" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404f58f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f5ac8"/>
        <function-ref name="isInput" scoped="" ref="0x404f5ba8"/>
        <function-ref name="toggle" scoped="" ref="0x404f5c88"/>
        <function-ref name="isOutput" scoped="" ref="0x404f5d68"/>
        <function-ref name="get" scoped="" ref="0x404f5e48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f5f28"/>
        <function-ref name="set" scoped="" ref="0x404f4018"/>
        <function-ref name="clr" scoped="" ref="0x404f40f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40501dd8" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40501dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40500010"/>
        <function-ref name="isInput" scoped="" ref="0x405000f0"/>
        <function-ref name="toggle" scoped="" ref="0x405001d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405002b0"/>
        <function-ref name="get" scoped="" ref="0x40500390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40500470"/>
        <function-ref name="set" scoped="" ref="0x40500550"/>
        <function-ref name="clr" scoped="" ref="0x40500630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404fd3b0" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404fd3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fd588"/>
        <function-ref name="isInput" scoped="" ref="0x404fd668"/>
        <function-ref name="toggle" scoped="" ref="0x404fd748"/>
        <function-ref name="isOutput" scoped="" ref="0x404fd828"/>
        <function-ref name="get" scoped="" ref="0x404fd908"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fd9e8"/>
        <function-ref name="set" scoped="" ref="0x404fdac8"/>
        <function-ref name="clr" scoped="" ref="0x404fdba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404fb8a0" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404fb8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fba78"/>
        <function-ref name="isInput" scoped="" ref="0x404fbb58"/>
        <function-ref name="toggle" scoped="" ref="0x404fbc38"/>
        <function-ref name="isOutput" scoped="" ref="0x404fbd18"/>
        <function-ref name="get" scoped="" ref="0x404fbdf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fbed8"/>
        <function-ref name="set" scoped="" ref="0x40508010"/>
        <function-ref name="clr" scoped="" ref="0x405080f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4051e6d8" loc="27:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4051e6d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402eece0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402eece0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4051e8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x4051ea88" loc="28:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x4051ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x4051ec60"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x4051ed40"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x4051ee20"/>
        <function-ref name="actualMicro" scoped="" ref="0x4051ef00"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x4051c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x40538240" loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40538240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40538418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x40520418" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40520418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x405205f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x40520d78" loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40520d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40538010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x405207b0" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x405207b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40520988"/>
        <function-ref name="taskLoop" scoped="" ref="0x40520a68"/>
        <function-ref name="runNextTask" scoped="" ref="0x40520b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x402f6bc0" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x402f6bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x402f6d98"/>
        <function-ref name="runTask" scoped="" ref="0x402f6e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x402ef430" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x402ef430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x402ef608"/>
        <function-ref name="taskLoop" scoped="" ref="0x402ef6e8"/>
        <function-ref name="runNextTask" scoped="" ref="0x402ef7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40360c28" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40360c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40360e00"/>
        <function-ref name="runTask" scoped="" ref="0x40360ee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x4035f8b8" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x4035f8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x4035fa90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403603f0" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403603f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403605c8"/>
        <function-ref name="taskLoop" scoped="" ref="0x403606a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x40360788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x40379498" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40379498"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40379670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x40365200" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x40365200"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403653d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x40365ec0" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40365ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x403750c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40532010" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40532010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x405321e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405322c8"/>
        <function-ref name="led1On" scoped="" ref="0x405323a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40532488"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40532568"/>
        <function-ref name="get" scoped="" ref="0x40532648"/>
        <function-ref name="led1Off" scoped="" ref="0x40532728"/>
        <function-ref name="led2Off" scoped="" ref="0x40532aa8"/>
        <function-ref name="set" scoped="" ref="0x40532808"/>
        <function-ref name="led0On" scoped="" ref="0x405328e8"/>
        <function-ref name="led2On" scoped="" ref="0x405329c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x4053e400" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x4053e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4053e5d8"/>
        <function-ref name="isInput" scoped="" ref="0x4053e6b8"/>
        <function-ref name="toggle" scoped="" ref="0x4053e798"/>
        <function-ref name="isOutput" scoped="" ref="0x4053e878"/>
        <function-ref name="get" scoped="" ref="0x4053e958"/>
        <function-ref name="makeOutput" scoped="" ref="0x4053ea38"/>
        <function-ref name="set" scoped="" ref="0x4053eb18"/>
        <function-ref name="clr" scoped="" ref="0x4053ebf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4053f350" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4053f350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4053f528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x4053ede8" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x4053ede8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4053d010"/>
        <function-ref name="isInput" scoped="" ref="0x4053d0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4053d1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4053d2b0"/>
        <function-ref name="get" scoped="" ref="0x4053d390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4053d470"/>
        <function-ref name="set" scoped="" ref="0x4053d550"/>
        <function-ref name="clr" scoped="" ref="0x4053d630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x4053f698" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4053f698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4053f870"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4053f950"/>
        <function-ref name="led1On" scoped="" ref="0x4053fa30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4053fb10"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4053fbf0"/>
        <function-ref name="get" scoped="" ref="0x4053fcd0"/>
        <function-ref name="led1Off" scoped="" ref="0x4053fdb0"/>
        <function-ref name="led2Off" scoped="" ref="0x4053e1d0"/>
        <function-ref name="set" scoped="" ref="0x4053fe90"/>
        <function-ref name="led0On" scoped="" ref="0x4053e010"/>
        <function-ref name="led2On" scoped="" ref="0x4053e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x4053d820" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x4053d820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4053d9f8"/>
        <function-ref name="isInput" scoped="" ref="0x4053dad8"/>
        <function-ref name="toggle" scoped="" ref="0x4053dbb8"/>
        <function-ref name="isOutput" scoped="" ref="0x4053dc98"/>
        <function-ref name="get" scoped="" ref="0x4053dd78"/>
        <function-ref name="makeOutput" scoped="" ref="0x4053de58"/>
        <function-ref name="set" scoped="" ref="0x4053c010"/>
        <function-ref name="clr" scoped="" ref="0x4053c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x40541a88" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40541a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40541c60"/>
        <function-ref name="isInput" scoped="" ref="0x40541d40"/>
        <function-ref name="toggle" scoped="" ref="0x40541e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40541f00"/>
        <function-ref name="get" scoped="" ref="0x4054d010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4054d0f0"/>
        <function-ref name="set" scoped="" ref="0x4054d1d0"/>
        <function-ref name="clr" scoped="" ref="0x4054d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x4054d4c0" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x4054d4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4054d698"/>
        <function-ref name="isInput" scoped="" ref="0x4054d778"/>
        <function-ref name="toggle" scoped="" ref="0x4054d858"/>
        <function-ref name="isOutput" scoped="" ref="0x4054d938"/>
        <function-ref name="get" scoped="" ref="0x4054da18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4054daf8"/>
        <function-ref name="set" scoped="" ref="0x4054dbd8"/>
        <function-ref name="clr" scoped="" ref="0x4054dcb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x4054c870" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4054c870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4054ca48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x4054dec8" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x4054dec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4054c0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4054c1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4054c280"/>
        <function-ref name="isOutput" scoped="" ref="0x4054c360"/>
        <function-ref name="get" scoped="" ref="0x4054c440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4054c520"/>
        <function-ref name="set" scoped="" ref="0x4054c600"/>
        <function-ref name="clr" scoped="" ref="0x4054c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4043ba88" loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4043ba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4043bc60"/>
        <function-ref name="stopDone" scoped="" ref="0x4043bd40"/>
        <function-ref name="start" scoped="" ref="0x4043be20"/>
        <function-ref name="stop" scoped="" ref="0x4043bf00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4055f670" loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4055f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403c79f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4055f848"/>
        <function-ref name="getPayload" scoped="" ref="0x4055f928"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4055fa08"/>
        <function-ref name="cancel" scoped="" ref="0x4055fae8"/>
        <function-ref name="sendDone" scoped="" ref="0x4055fbc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40556798" loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40556798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403c79f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40556970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40556af0" loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40556af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40556cc8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40556da8"/>
        <function-ref name="getPayload" scoped="" ref="0x40556e88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40555010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405550f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x40565e98" loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40565e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403420d0"/>
            <typename><typedef-ref name="T32khz" ref="0x40342298"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4055e9b0"/>
        <function-ref name="clear" scoped="" ref="0x4055ed60"/>
        <function-ref name="isValid" scoped="" ref="0x4055e600"/>
        <function-ref name="set" scoped="" ref="0x4055d150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40556100" loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40556100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403c79f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405562d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4055a518" loc="58:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4055a518"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4055a6f0"/>
        <function-ref name="noAck" scoped="" ref="0x4055a7d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x4055a8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40555288" loc="57:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40555288"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40555460"/>
        <function-ref name="source" scoped="" ref="0x40555540"/>
        <function-ref name="address" scoped="" ref="0x40555620"/>
        <function-ref name="destination" scoped="" ref="0x40555700"/>
        <function-ref name="setSource" scoped="" ref="0x405557e0"/>
        <function-ref name="setDestination" scoped="" ref="0x405558c0"/>
        <function-ref name="type" scoped="" ref="0x405559a0"/>
        <function-ref name="setType" scoped="" ref="0x40555a80"/>
        <function-ref name="isForMe" scoped="" ref="0x40555b60"/>
        <function-ref name="setGroup" scoped="" ref="0x40555c40"/>
        <function-ref name="localGroup" scoped="" ref="0x40555d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x4055d888" loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4055d888"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033ac60"/>
            <typename><typedef-ref name="TMilli" ref="0x4033ae28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405643c0"/>
        <function-ref name="clear" scoped="" ref="0x40564770"/>
        <function-ref name="isValid" scoped="" ref="0x40564010"/>
        <function-ref name="set" scoped="" ref="0x40564b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40563780" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40563780"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40563958"/>
        <function-ref name="stopDone" scoped="" ref="0x40563a38"/>
        <function-ref name="start" scoped="" ref="0x40563b18"/>
        <function-ref name="stop" scoped="" ref="0x40563bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x4056b100" loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x4056b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403c79f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x4056b2d8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x4056b3b8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x4056b498"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x4056b578"/>
        <function-ref name="setCca" scoped="" ref="0x4056b658"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x4056b738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40583ec0" loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40583ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403c79f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40572188"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4056e190" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4056e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4056e368"/>
        <function-ref name="payloadLength" scoped="" ref="0x4056e448"/>
        <function-ref name="getPayload" scoped="" ref="0x4056e528"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4056e608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4056e6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40570100" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40570100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403c79f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405702d8"/>
        <function-ref name="getPayload" scoped="" ref="0x405703b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40570498"/>
        <function-ref name="cancel" scoped="" ref="0x40570578"/>
        <function-ref name="sendDone" scoped="" ref="0x40570658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x4056f178" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x4056f178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403c79f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4056f350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x40579868" loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40579868"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40579a40"/>
        <function-ref name="getRssi" scoped="" ref="0x40579b20"/>
        <function-ref name="getPower" scoped="" ref="0x40579c00"/>
        <function-ref name="getLqi" scoped="" ref="0x40579ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40589500" loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40589500"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x405896d8"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x405897b8"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x40589898"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x40589978"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x40589a58"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x40589b38"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x40589c18"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x40589cf8"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x40589dd8"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x40589eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40570ac0" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40570ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403c79f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40570c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40579f00" loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40579f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4056c0f0"/>
        <function-ref name="noAck" scoped="" ref="0x4056c1d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x4056c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x405853e8" loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x405853e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x405855c0"/>
        <function-ref name="setRetries" scoped="" ref="0x405856a0"/>
        <function-ref name="getRetries" scoped="" ref="0x40585780"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40585860"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40585940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4056f4e8" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4056f4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4056f6c0"/>
        <function-ref name="source" scoped="" ref="0x4056f7a0"/>
        <function-ref name="address" scoped="" ref="0x4056f880"/>
        <function-ref name="destination" scoped="" ref="0x4056f960"/>
        <function-ref name="setSource" scoped="" ref="0x4056fa40"/>
        <function-ref name="setDestination" scoped="" ref="0x4056fb20"/>
        <function-ref name="type" scoped="" ref="0x4056fc00"/>
        <function-ref name="setType" scoped="" ref="0x4056fce0"/>
        <function-ref name="isForMe" scoped="" ref="0x4056fdc0"/>
        <function-ref name="setGroup" scoped="" ref="0x4056fea0"/>
        <function-ref name="localGroup" scoped="" ref="0x4056e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40576328" loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40576328"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40576500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4058c0e8" loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4058c0e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4058c2c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4058d950" loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4058d950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4058db28"/>
        <function-ref name="getPayload" scoped="" ref="0x4058dc08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4058dce8"/>
        <function-ref name="cancel" scoped="" ref="0x4058ddc8"/>
        <function-ref name="sendDone" scoped="" ref="0x4058dea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x405a1ce8" loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x405a1ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x405a1ec0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x4058b010"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x4058b0f0"/>
        <function-ref name="syncDone" scoped="" ref="0x4058b1d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x4058b2b0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x4058b390"/>
        <function-ref name="setChannel" scoped="" ref="0x4058b470"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x4058b550"/>
        <function-ref name="setPanAddr" scoped="" ref="0x4058b630"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x4058b710"/>
        <function-ref name="getShortAddr" scoped="" ref="0x4058b7f0"/>
        <function-ref name="sync" scoped="" ref="0x4058b8d0"/>
        <function-ref name="getChannel" scoped="" ref="0x4058b9b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x4058bb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x4058d100" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x4058d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403c79f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x4058d2d8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x4058d3b8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x4058d498"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x4058d578"/>
        <function-ref name="setCca" scoped="" ref="0x4058d658"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x4058d738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x4058ea08" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x4058ea08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403c79f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x4058ebe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x4059ed60" loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x4059ed60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x4058a010"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x4058a0f0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x4058a1d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x4058a2b0"/>
        <function-ref name="setCca" scoped="" ref="0x4058a390"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x4058a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4058e010" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4058e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4058e1e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4058e2c8"/>
        <function-ref name="getPayload" scoped="" ref="0x4058e3a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4058e488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4058e568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40572f20" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40572f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403c79f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40590110"/>
        <function-ref name="getPayload" scoped="" ref="0x405901f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405902d0"/>
        <function-ref name="cancel" scoped="" ref="0x405903b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40590490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x4058f010" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x4058f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403c79f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4058f1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x4058c480" loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x4058c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x4058c658"/>
        <function-ref name="getRssi" scoped="" ref="0x4058c738"/>
        <function-ref name="getPower" scoped="" ref="0x4058c818"/>
        <function-ref name="getLqi" scoped="" ref="0x4058c8f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x4059e620" loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4059e620"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x4059e878"/>
        <function-ref name="changed" scoped="" ref="0x4059e958"/>
        <function-ref name="amGroup" scoped="" ref="0x4059ea38"/>
        <function-ref name="setAddress" scoped="" ref="0x4059eb18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x405973b8" loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x405973b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40597590"/>
        <function-ref name="getMetadata" scoped="" ref="0x40597670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x405908f8" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x405908f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403c79f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40590ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4058f380" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4058f380"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4058f558"/>
        <function-ref name="source" scoped="" ref="0x4058f638"/>
        <function-ref name="address" scoped="" ref="0x4058f718"/>
        <function-ref name="destination" scoped="" ref="0x4058f7f8"/>
        <function-ref name="setSource" scoped="" ref="0x4058f8d8"/>
        <function-ref name="setDestination" scoped="" ref="0x4058f9b8"/>
        <function-ref name="type" scoped="" ref="0x4058fa98"/>
        <function-ref name="setType" scoped="" ref="0x4058fb78"/>
        <function-ref name="isForMe" scoped="" ref="0x4058fc58"/>
        <function-ref name="setGroup" scoped="" ref="0x4058fd38"/>
        <function-ref name="localGroup" scoped="" ref="0x4058fe18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405db708" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405db708"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405db8e0"/>
        <function-ref name="stopDone" scoped="" ref="0x405db9c0"/>
        <function-ref name="start" scoped="" ref="0x405dbaa0"/>
        <function-ref name="stop" scoped="" ref="0x405dbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x405da810" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x405da810"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x405da9e8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x405daac8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x405daba8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x405dac88"/>
        <function-ref name="setCca" scoped="" ref="0x405dad68"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x405dae48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x405dbd10" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x405dbd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405dbee8"/>
        <function-ref name="getPayload" scoped="" ref="0x405da010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405da0f0"/>
        <function-ref name="cancel" scoped="" ref="0x405da1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x405da2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x405da458" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x405da458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405da630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405d9798" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405d9798"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405d9970"/>
        <function-ref name="stopDone" scoped="" ref="0x405d9a50"/>
        <function-ref name="start" scoped="" ref="0x405d9b30"/>
        <function-ref name="stop" scoped="" ref="0x405d9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x405e8570" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x405e8570"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x405e8748"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x405e8828"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x405e8908"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x405e89e8"/>
        <function-ref name="setCca" scoped="" ref="0x405e8ac8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x405e8ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x405f1800" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x405f1800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x405f19d8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x405f1ab8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x405f1b98"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x405f1c78"/>
        <function-ref name="setCca" scoped="" ref="0x405f1d58"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x405f1e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x405ec0f0" loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x405ec0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x405ec2c8"/>
        <function-ref name="getRssi" scoped="" ref="0x405ec3a8"/>
        <function-ref name="getPower" scoped="" ref="0x405ec488"/>
        <function-ref name="getLqi" scoped="" ref="0x405ec568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x405f1040" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x405f1040"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405f1218"/>
        <function-ref name="cancel" scoped="" ref="0x405f12f8"/>
        <function-ref name="modify" scoped="" ref="0x405f13d8"/>
        <function-ref name="sendDone" scoped="" ref="0x405f14b8"/>
        <function-ref name="resend" scoped="" ref="0x405f1598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x405d9da0" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x405d9da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405e8010"/>
        <function-ref name="getPayload" scoped="" ref="0x405e80f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405e81d0"/>
        <function-ref name="cancel" scoped="" ref="0x405e82b0"/>
        <function-ref name="sendDone" scoped="" ref="0x405e8390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x405f0010" loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x405f0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x405f01e8"/>
        <function-ref name="rand32" scoped="" ref="0x405f02c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x405e6a58" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x405e6a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x405e6c30"/>
        <function-ref name="stop" scoped="" ref="0x405e6d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x405ec770" loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x405ec770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x405ec948"/>
        <function-ref name="getMetadata" scoped="" ref="0x405eca28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x405e6010" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x405e6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x405e61e8"/>
        <function-ref name="rfOff" scoped="" ref="0x405e62c8"/>
        <function-ref name="rxOn" scoped="" ref="0x405e63a8"/>
        <function-ref name="startVReg" scoped="" ref="0x405e6488"/>
        <function-ref name="stopVReg" scoped="" ref="0x405e6568"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x405e6648"/>
        <function-ref name="stopOscillator" scoped="" ref="0x405e6728"/>
        <function-ref name="startVRegDone" scoped="" ref="0x405e6808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x405f0458" loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x405f0458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x405f0630"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405f0710"/>
        <function-ref name="led1On" scoped="" ref="0x405f07f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x405f08d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x405f09b0"/>
        <function-ref name="get" scoped="" ref="0x405f0a90"/>
        <function-ref name="led1Off" scoped="" ref="0x405f0b70"/>
        <function-ref name="led2Off" scoped="" ref="0x405f0ef0"/>
        <function-ref name="set" scoped="" ref="0x405f0c50"/>
        <function-ref name="led0On" scoped="" ref="0x405f0d30"/>
        <function-ref name="led2On" scoped="" ref="0x405f0e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x405e4e00" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x405e4e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x405e7010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x405e70f0"/>
        <function-ref name="request" scoped="" ref="0x405e71d0"/>
        <function-ref name="granted" scoped="" ref="0x405e72b0"/>
        <function-ref name="isOwner" scoped="" ref="0x405e7390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x405faf10" loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x405faf10"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x405eb188"/>
        <function-ref name="toIdle" scoped="" ref="0x405eb268"/>
        <function-ref name="isState" scoped="" ref="0x405eb348"/>
        <function-ref name="isIdle" scoped="" ref="0x405eb428"/>
        <function-ref name="requestState" scoped="" ref="0x405eb508"/>
        <function-ref name="forceState" scoped="" ref="0x405eb5e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x405f7080" loc="76:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x405f7080"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405f7258"/>
        <function-ref name="runTask" scoped="" ref="0x405f7338"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x405f8850" loc="75:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x405f8850"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405f8a28"/>
        <function-ref name="runTask" scoped="" ref="0x405f8b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x405f8010" loc="74:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x405f8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405f81e8"/>
        <function-ref name="runTask" scoped="" ref="0x405f82c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x40617e38" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40617e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40626050"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40626130"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x40626210"/>
        <function-ref name="syncDone" scoped="" ref="0x406262f0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x406263d0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x406264b0"/>
        <function-ref name="setChannel" scoped="" ref="0x40626590"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40626670"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40626750"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40626830"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40626910"/>
        <function-ref name="sync" scoped="" ref="0x406269f0"/>
        <function-ref name="getChannel" scoped="" ref="0x40626ad0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40626c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x40622c70" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x40622c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x406242c8"/>
        <function-ref name="readDone" scoped="" ref="0x40624520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x40626e00" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x40626e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x40625010"/>
        <function-ref name="rfOff" scoped="" ref="0x406250f0"/>
        <function-ref name="rxOn" scoped="" ref="0x406251d0"/>
        <function-ref name="startVReg" scoped="" ref="0x406252b0"/>
        <function-ref name="stopVReg" scoped="" ref="0x40625390"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x40625470"/>
        <function-ref name="stopOscillator" scoped="" ref="0x40625550"/>
        <function-ref name="startVRegDone" scoped="" ref="0x40625630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40617700" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40617700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406178d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x406179b8"/>
        <function-ref name="request" scoped="" ref="0x40617a98"/>
        <function-ref name="granted" scoped="" ref="0x40617b78"/>
        <function-ref name="isOwner" scoped="" ref="0x40617c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x40631b08" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40631b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40631ce0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40631dc0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x40631ea0"/>
        <function-ref name="syncDone" scoped="" ref="0x40630010"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x406300f0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x406301d0"/>
        <function-ref name="setChannel" scoped="" ref="0x406302b0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40630390"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40630470"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40630550"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40630630"/>
        <function-ref name="sync" scoped="" ref="0x40630710"/>
        <function-ref name="getChannel" scoped="" ref="0x406307f0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40630950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x40635520" loc="62:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40635520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x406356f8"/>
        <function-ref name="write" scoped="" ref="0x406357d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x40628610" loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x40628610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403420d0"/>
            <typename><typedef-ref name="T32khz" ref="0x40342298"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4062dab8"/>
        <function-ref name="fired" scoped="" ref="0x4062d288"/>
        <function-ref name="startAt" scoped="" ref="0x4062d778"/>
        <function-ref name="isRunning" scoped="" ref="0x4062d500"/>
        <function-ref name="getAlarm" scoped="" ref="0x4062dd30"/>
        <function-ref name="start" scoped="" ref="0x40628d60"/>
        <function-ref name="stop" scoped="" ref="0x4062d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x40638ac8" loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40638ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40638ca0"/>
        <function-ref name="write" scoped="" ref="0x40638d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x4062ca38" loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x4062ca38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4062cc10"/>
        <function-ref name="isInput" scoped="" ref="0x4062ccf0"/>
        <function-ref name="toggle" scoped="" ref="0x4062cdd0"/>
        <function-ref name="isOutput" scoped="" ref="0x4062ceb0"/>
        <function-ref name="get" scoped="" ref="0x4063b010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4063b0f0"/>
        <function-ref name="set" scoped="" ref="0x4063b1d0"/>
        <function-ref name="clr" scoped="" ref="0x4063b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x4062f680" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x4062f680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4062fca8"/>
        <function-ref name="readDone" scoped="" ref="0x4062ff00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x4063dcc8" loc="118:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x4063dcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4063dea0"/>
        <function-ref name="runTask" scoped="" ref="0x4064f010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x40635a18" loc="63:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40635a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40635bf0"/>
        <function-ref name="write" scoped="" ref="0x40635cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x406380a0" loc="58:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x406380a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40638278"/>
        <function-ref name="write" scoped="" ref="0x40638358"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x40636ca8" loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40636ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40636e80"/>
        <function-ref name="changed" scoped="" ref="0x40639010"/>
        <function-ref name="amGroup" scoped="" ref="0x406390f0"/>
        <function-ref name="setAddress" scoped="" ref="0x406391d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x4062c030" loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x4062c030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4062c208"/>
        <function-ref name="isInput" scoped="" ref="0x4062c2e8"/>
        <function-ref name="toggle" scoped="" ref="0x4062c3c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4062c4a8"/>
        <function-ref name="get" scoped="" ref="0x4062c588"/>
        <function-ref name="makeOutput" scoped="" ref="0x4062c668"/>
        <function-ref name="set" scoped="" ref="0x4062c748"/>
        <function-ref name="clr" scoped="" ref="0x4062c828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x40643158" loc="66:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40643158"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40643330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x4063b4c0" loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x4063b4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4063b698"/>
        <function-ref name="isInput" scoped="" ref="0x4063b778"/>
        <function-ref name="toggle" scoped="" ref="0x4063b858"/>
        <function-ref name="isOutput" scoped="" ref="0x4063b938"/>
        <function-ref name="get" scoped="" ref="0x4063ba18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4063baf8"/>
        <function-ref name="set" scoped="" ref="0x4063bbd8"/>
        <function-ref name="clr" scoped="" ref="0x4063bcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40631040" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40631040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40631218"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x40635010" loc="61:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40635010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x406351e8"/>
        <function-ref name="write" scoped="" ref="0x406352c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x40643578" loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40643578"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40643750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40643998" loc="69:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40643998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40643b70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40643c50"/>
        <function-ref name="request" scoped="" ref="0x40643d30"/>
        <function-ref name="granted" scoped="" ref="0x40643e10"/>
        <function-ref name="isOwner" scoped="" ref="0x40643ef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x40642a18" loc="71:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x40642a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40642bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40642cd0"/>
        <function-ref name="request" scoped="" ref="0x40642db0"/>
        <function-ref name="granted" scoped="" ref="0x40642e90"/>
        <function-ref name="isOwner" scoped="" ref="0x40641010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x40630b20" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x40630b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x40630cf8"/>
        <function-ref name="rfOff" scoped="" ref="0x40630dd8"/>
        <function-ref name="rxOn" scoped="" ref="0x40630eb8"/>
        <function-ref name="startVReg" scoped="" ref="0x4062f010"/>
        <function-ref name="stopVReg" scoped="" ref="0x4062f0f0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x4062f1d0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x4062f2b0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x4062f390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x406385a8" loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x406385a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40638780"/>
        <function-ref name="write" scoped="" ref="0x40638860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x40632ae0" loc="57:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40632ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40632d38"/>
        <function-ref name="write" scoped="" ref="0x40632e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x406448b0" loc="64:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x406448b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40644a88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x406411a0" loc="73:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x406411a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40641378"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40641458"/>
        <function-ref name="led1On" scoped="" ref="0x40641538"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40641618"/>
        <function-ref name="led2Toggle" scoped="" ref="0x406416f8"/>
        <function-ref name="get" scoped="" ref="0x406417d8"/>
        <function-ref name="led1Off" scoped="" ref="0x406418b8"/>
        <function-ref name="led2Off" scoped="" ref="0x40641c38"/>
        <function-ref name="set" scoped="" ref="0x40641998"/>
        <function-ref name="led0On" scoped="" ref="0x40641a78"/>
        <function-ref name="led2On" scoped="" ref="0x40641b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x4063d4e8" loc="117:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x4063d4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4063d6c0"/>
        <function-ref name="runTask" scoped="" ref="0x4063d7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x406313d0" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x406313d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406315a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40631688"/>
        <function-ref name="request" scoped="" ref="0x40631768"/>
        <function-ref name="granted" scoped="" ref="0x40631848"/>
        <function-ref name="isOwner" scoped="" ref="0x40631928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x40633388" loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40633388"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40633560"/>
        <function-ref name="write" scoped="" ref="0x40633640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x40636600" loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x40636600"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406367d8"/>
        <function-ref name="disable" scoped="" ref="0x406368b8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40636998"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40636a78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x40642168" loc="70:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x40642168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40642440"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40642520"/>
        <function-ref name="request" scoped="" ref="0x40642600"/>
        <function-ref name="granted" scoped="" ref="0x406426e0"/>
        <function-ref name="isOwner" scoped="" ref="0x406427c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x40644cc8" loc="65:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40644cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40644ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40689010" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40689010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406891e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x406895d8" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x406895d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403420d0"/>
            <typename><typedef-ref name="T32khz" ref="0x40342298"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40688ab8"/>
        <function-ref name="fired" scoped="" ref="0x40688288"/>
        <function-ref name="startAt" scoped="" ref="0x40688778"/>
        <function-ref name="isRunning" scoped="" ref="0x40688500"/>
        <function-ref name="getAlarm" scoped="" ref="0x40688d30"/>
        <function-ref name="start" scoped="" ref="0x40689d28"/>
        <function-ref name="stop" scoped="" ref="0x40688010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x407d3e78" loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x407d3e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403420d0"/>
            <typename><typedef-ref name="T32khz" ref="0x40342298"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407d2350"/>
        <function-ref name="fired" scoped="" ref="0x40686af8"/>
        <function-ref name="startAt" scoped="" ref="0x407d2010"/>
        <function-ref name="isRunning" scoped="" ref="0x40686d70"/>
        <function-ref name="getAlarm" scoped="" ref="0x407d25c8"/>
        <function-ref name="start" scoped="" ref="0x406865e0"/>
        <function-ref name="stop" scoped="" ref="0x40686880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407d27f8" loc="68:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407d27f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407d29d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41222800" loc="28:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41222800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403420d0"/>
            <typename><typedef-ref name="T32khz" ref="0x40342298"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41220d58"/>
        <function-ref name="fired" scoped="" ref="0x41220528"/>
        <function-ref name="startAt" scoped="" ref="0x41220a18"/>
        <function-ref name="isRunning" scoped="" ref="0x412207a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x4121f010"/>
        <function-ref name="start" scoped="" ref="0x41220010"/>
        <function-ref name="stop" scoped="" ref="0x412202b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4121d610" loc="30:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4121d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403420d0"/>
            <typename><typedef-ref name="TOne" ref="0x4035bbe0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41261ab8"/>
        <function-ref name="fired" scoped="" ref="0x41261288"/>
        <function-ref name="startAt" scoped="" ref="0x41261778"/>
        <function-ref name="isRunning" scoped="" ref="0x41261500"/>
        <function-ref name="getAlarm" scoped="" ref="0x41261d30"/>
        <function-ref name="start" scoped="" ref="0x4121dd60"/>
        <function-ref name="stop" scoped="" ref="0x41261010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x406a3208" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x406a3208"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x406a33e0"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x406a34c0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x406a35a0"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x406a3680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x406a3760"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x406a3840"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x406a3920"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x406a3a00"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x406a3ae0"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x406a3bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x406a9078" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x406a9078"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x406b4af0"/>
        <function-ref name="test" scoped="" ref="0x406b4600"/>
        <function-ref name="get" scoped="" ref="0x406a96c0"/>
        <function-ref name="captured" scoped="" ref="0x406a9bd8"/>
        <function-ref name="reset" scoped="" ref="0x406a9e78"/>
        <function-ref name="isOn" scoped="" ref="0x406b4878"/>
        <function-ref name="set" scoped="" ref="0x406a9938"/>
        <function-ref name="start" scoped="" ref="0x406b4110"/>
        <function-ref name="stop" scoped="" ref="0x406b4388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x406aebb0" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x406aebb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406b2130"/>
        <function-ref name="fired" scoped="" ref="0x406b3728"/>
        <function-ref name="get" scoped="" ref="0x406b3210"/>
        <function-ref name="reset" scoped="" ref="0x406b39a0"/>
        <function-ref name="isOn" scoped="" ref="0x406b23a8"/>
        <function-ref name="set" scoped="" ref="0x406b3488"/>
        <function-ref name="start" scoped="" ref="0x406b3c18"/>
        <function-ref name="stop" scoped="" ref="0x406b3e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40697340" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40697340"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4069dd88"/>
        <function-ref name="test" scoped="" ref="0x4069d898"/>
        <function-ref name="get" scoped="" ref="0x40697988"/>
        <function-ref name="setScale" scoped="" ref="0x40696010"/>
        <function-ref name="getScale" scoped="" ref="0x406962b0"/>
        <function-ref name="reset" scoped="" ref="0x4069d130"/>
        <function-ref name="overflow" scoped="" ref="0x40697ea0"/>
        <function-ref name="isOn" scoped="" ref="0x4069db10"/>
        <function-ref name="set" scoped="" ref="0x40697c00"/>
        <function-ref name="start" scoped="" ref="0x4069d3a8"/>
        <function-ref name="stop" scoped="" ref="0x4069d620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x406b8678" loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x406b8678"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x406b8850"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x406b8930"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x406b8a10"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x406b8af0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x406b8bd0"/>
        <function-ref name="setControl" scoped="" ref="0x406b8cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x406c9c90" loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x406c9c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x406c9e68"/>
        <function-ref name="compareBusy" scoped="" ref="0x406b7010"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x406b70f0"/>
        <function-ref name="countBusy" scoped="" ref="0x406b71d0"/>
        <function-ref name="getAssr" scoped="" ref="0x406b72b0"/>
        <function-ref name="setAssr" scoped="" ref="0x406b7390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x406bc010" loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x406bc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406bb578"/>
        <function-ref name="fired" scoped="" ref="0x406bcb70"/>
        <function-ref name="get" scoped="" ref="0x406bc658"/>
        <function-ref name="reset" scoped="" ref="0x406bcde8"/>
        <function-ref name="isOn" scoped="" ref="0x406bb7f0"/>
        <function-ref name="set" scoped="" ref="0x406bc8d0"/>
        <function-ref name="start" scoped="" ref="0x406bb088"/>
        <function-ref name="stop" scoped="" ref="0x406bb300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406b2eb8" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406b2eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x406be918"/>
        <function-ref name="test" scoped="" ref="0x406be428"/>
        <function-ref name="get" scoped="" ref="0x406bf520"/>
        <function-ref name="setScale" scoped="" ref="0x406beb90"/>
        <function-ref name="getScale" scoped="" ref="0x406bee30"/>
        <function-ref name="reset" scoped="" ref="0x406bfcb0"/>
        <function-ref name="overflow" scoped="" ref="0x406bfa38"/>
        <function-ref name="isOn" scoped="" ref="0x406be6a0"/>
        <function-ref name="set" scoped="" ref="0x406bf798"/>
        <function-ref name="start" scoped="" ref="0x406bff28"/>
        <function-ref name="stop" scoped="" ref="0x406be1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x406c5360" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x406c5360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x406c5538"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x406c5618"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x406c56f8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x406c57d8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x406c58b8"/>
        <function-ref name="setControl" scoped="" ref="0x406c5998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x406c27b8" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x406c27b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x406c2990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x406c2c18" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x406c2c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x406c2df0"/>
        <function-ref name="compareBusy" scoped="" ref="0x406c2ed0"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x406c1010"/>
        <function-ref name="countBusy" scoped="" ref="0x406c10f0"/>
        <function-ref name="getAssr" scoped="" ref="0x406c11d0"/>
        <function-ref name="setAssr" scoped="" ref="0x406c12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x406c5cc0" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x406c5cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406c2288"/>
        <function-ref name="fired" scoped="" ref="0x406c3830"/>
        <function-ref name="get" scoped="" ref="0x406c3318"/>
        <function-ref name="reset" scoped="" ref="0x406c3aa8"/>
        <function-ref name="isOn" scoped="" ref="0x406c2500"/>
        <function-ref name="set" scoped="" ref="0x406c3590"/>
        <function-ref name="start" scoped="" ref="0x406c3d20"/>
        <function-ref name="stop" scoped="" ref="0x406c2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406c7068" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406c7068"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x406c6ab8"/>
        <function-ref name="test" scoped="" ref="0x406c65c8"/>
        <function-ref name="get" scoped="" ref="0x406c76b0"/>
        <function-ref name="setScale" scoped="" ref="0x406c6d30"/>
        <function-ref name="getScale" scoped="" ref="0x406c5010"/>
        <function-ref name="reset" scoped="" ref="0x406c7e40"/>
        <function-ref name="overflow" scoped="" ref="0x406c7bc8"/>
        <function-ref name="isOn" scoped="" ref="0x406c6840"/>
        <function-ref name="set" scoped="" ref="0x406c7928"/>
        <function-ref name="start" scoped="" ref="0x406c60d8"/>
        <function-ref name="stop" scoped="" ref="0x406c6350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x406fa770" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x406fa770"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x406fa948"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x406faa28"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x406fab08"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x406fabe8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x406facc8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x406fada8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x406fae88"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x406f8010"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x406f80f0"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x406f81d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x40705888" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x40705888"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x40705a60"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40705b40"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40705c20"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40705d00"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40705de0"/>
        <function-ref name="setControl" scoped="" ref="0x40705ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x4070c450" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x4070c450"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4070b9f0"/>
        <function-ref name="fired" scoped="" ref="0x4070b010"/>
        <function-ref name="get" scoped="" ref="0x4070ca98"/>
        <function-ref name="reset" scoped="" ref="0x4070b288"/>
        <function-ref name="isOn" scoped="" ref="0x4070bc68"/>
        <function-ref name="set" scoped="" ref="0x4070cd10"/>
        <function-ref name="start" scoped="" ref="0x4070b500"/>
        <function-ref name="stop" scoped="" ref="0x4070b778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x406f8508" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x406f8508"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x4070c010"/>
        <function-ref name="test" scoped="" ref="0x406f7a90"/>
        <function-ref name="get" scoped="" ref="0x406f8b50"/>
        <function-ref name="captured" scoped="" ref="0x406f7088"/>
        <function-ref name="reset" scoped="" ref="0x406f7328"/>
        <function-ref name="isOn" scoped="" ref="0x406f7d08"/>
        <function-ref name="set" scoped="" ref="0x406f8dc8"/>
        <function-ref name="start" scoped="" ref="0x406f75a0"/>
        <function-ref name="stop" scoped="" ref="0x406f7818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x407090b8" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x407090b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40708620"/>
        <function-ref name="fired" scoped="" ref="0x40709c18"/>
        <function-ref name="get" scoped="" ref="0x40709700"/>
        <function-ref name="reset" scoped="" ref="0x40709e90"/>
        <function-ref name="isOn" scoped="" ref="0x40708898"/>
        <function-ref name="set" scoped="" ref="0x40709978"/>
        <function-ref name="start" scoped="" ref="0x40708130"/>
        <function-ref name="stop" scoped="" ref="0x407083a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40708cb0" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40708cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40705288"/>
        <function-ref name="fired" scoped="" ref="0x40707820"/>
        <function-ref name="get" scoped="" ref="0x40707308"/>
        <function-ref name="reset" scoped="" ref="0x40707a98"/>
        <function-ref name="isOn" scoped="" ref="0x40705500"/>
        <function-ref name="set" scoped="" ref="0x40707580"/>
        <function-ref name="start" scoped="" ref="0x40707d10"/>
        <function-ref name="stop" scoped="" ref="0x40705010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406fc410" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406fc410"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x406fbee0"/>
        <function-ref name="test" scoped="" ref="0x406fb9f0"/>
        <function-ref name="get" scoped="" ref="0x406fca58"/>
        <function-ref name="setScale" scoped="" ref="0x406fa170"/>
        <function-ref name="getScale" scoped="" ref="0x406fa410"/>
        <function-ref name="reset" scoped="" ref="0x406fb288"/>
        <function-ref name="overflow" scoped="" ref="0x406fb010"/>
        <function-ref name="isOn" scoped="" ref="0x406fbc68"/>
        <function-ref name="set" scoped="" ref="0x406fccd0"/>
        <function-ref name="start" scoped="" ref="0x406fb500"/>
        <function-ref name="stop" scoped="" ref="0x406fb778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40755db8" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40755db8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402eeae0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402eeae0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40754010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40754220" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40754220"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40765c68"/>
        <function-ref name="test" scoped="" ref="0x40765778"/>
        <function-ref name="get" scoped="" ref="0x40754868"/>
        <function-ref name="setScale" scoped="" ref="0x40765ee0"/>
        <function-ref name="getScale" scoped="" ref="0x407631c0"/>
        <function-ref name="reset" scoped="" ref="0x40765010"/>
        <function-ref name="overflow" scoped="" ref="0x40754d80"/>
        <function-ref name="isOn" scoped="" ref="0x407659f0"/>
        <function-ref name="set" scoped="" ref="0x40754ae0"/>
        <function-ref name="start" scoped="" ref="0x40765288"/>
        <function-ref name="stop" scoped="" ref="0x40765500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41257560" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41257560"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x402ee8e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x402ee8e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403420d0"/>
            <typename><typedef-ref name="TOne" ref="0x4035bbe0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41255ab8"/>
        <function-ref name="fired" scoped="" ref="0x41255288"/>
        <function-ref name="startAt" scoped="" ref="0x41255778"/>
        <function-ref name="isRunning" scoped="" ref="0x41255500"/>
        <function-ref name="getAlarm" scoped="" ref="0x41255d30"/>
        <function-ref name="start" scoped="" ref="0x41257cb0"/>
        <function-ref name="stop" scoped="" ref="0x41255010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x412522d0" loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x412522d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x41250840"/>
        <function-ref name="fired" scoped="" ref="0x41252e30"/>
        <function-ref name="get" scoped="" ref="0x41252918"/>
        <function-ref name="reset" scoped="" ref="0x412500d8"/>
        <function-ref name="isOn" scoped="" ref="0x41250ab8"/>
        <function-ref name="set" scoped="" ref="0x41252b90"/>
        <function-ref name="start" scoped="" ref="0x41250350"/>
        <function-ref name="stop" scoped="" ref="0x412505c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x41254010" loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x41254010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x41253a68"/>
        <function-ref name="test" scoped="" ref="0x41253578"/>
        <function-ref name="get" scoped="" ref="0x41254658"/>
        <function-ref name="setScale" scoped="" ref="0x41253ce0"/>
        <function-ref name="getScale" scoped="" ref="0x41252010"/>
        <function-ref name="reset" scoped="" ref="0x41254de8"/>
        <function-ref name="overflow" scoped="" ref="0x41254b70"/>
        <function-ref name="isOn" scoped="" ref="0x412537f0"/>
        <function-ref name="set" scoped="" ref="0x412548d0"/>
        <function-ref name="start" scoped="" ref="0x41253088"/>
        <function-ref name="stop" scoped="" ref="0x41253300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40786740" loc="24:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40786740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403420d0"/>
            <typename><typedef-ref name="T32khz" ref="0x40342298"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40786e90"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407893a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40789130"/>
        <function-ref name="overflow" scoped="" ref="0x40789620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40783170" loc="24:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40783170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403420d0"/>
            <typename><typedef-ref name="TOne" ref="0x4035bbe0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407838c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40783db0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40783b38"/>
        <function-ref name="overflow" scoped="" ref="0x40782048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x407998e8" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407998e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403420d0"/>
            <typename><typedef-ref name="TOne" ref="0x4035bbe0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40798048"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40798538"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407982c0"/>
        <function-ref name="overflow" scoped="" ref="0x407987b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40798a90" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40798a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x407a4500"/>
        <function-ref name="test" scoped="" ref="0x407a4010"/>
        <function-ref name="get" scoped="" ref="0x407a50f8"/>
        <function-ref name="setScale" scoped="" ref="0x407a4778"/>
        <function-ref name="getScale" scoped="" ref="0x407a4a18"/>
        <function-ref name="reset" scoped="" ref="0x407a5888"/>
        <function-ref name="overflow" scoped="" ref="0x407a5610"/>
        <function-ref name="isOn" scoped="" ref="0x407a4288"/>
        <function-ref name="set" scoped="" ref="0x407a5370"/>
        <function-ref name="start" scoped="" ref="0x407a5b00"/>
        <function-ref name="stop" scoped="" ref="0x407a5d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x407a90e0" loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x407a90e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403420d0"/>
            <typename><typedef-ref name="TOne" ref="0x4035bbe0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407a9830"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407a9d20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407a9aa8"/>
        <function-ref name="overflow" scoped="" ref="0x407a8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40784e60" loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40784e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403420d0"/>
            <typename><typedef-ref name="T32khz" ref="0x40342298"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407aa5e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407aaad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407aa858"/>
        <function-ref name="overflow" scoped="" ref="0x407aad48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4125f0a0" loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4125f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403420d0"/>
            <typename><typedef-ref name="T32khz" ref="0x40342298"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4125e5c8"/>
        <function-ref name="fired" scoped="" ref="0x4125fd08"/>
        <function-ref name="startAt" scoped="" ref="0x4125e288"/>
        <function-ref name="isRunning" scoped="" ref="0x4125e010"/>
        <function-ref name="getAlarm" scoped="" ref="0x4125e840"/>
        <function-ref name="start" scoped="" ref="0x4125f7f0"/>
        <function-ref name="stop" scoped="" ref="0x4125fa90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x4125cde0" loc="62:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x4125cde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403420d0"/>
            <typename><typedef-ref name="TOne" ref="0x4035bbe0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4125a350"/>
        <function-ref name="fired" scoped="" ref="0x4125ba88"/>
        <function-ref name="startAt" scoped="" ref="0x4125a010"/>
        <function-ref name="isRunning" scoped="" ref="0x4125bd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x4125a5c8"/>
        <function-ref name="start" scoped="" ref="0x4125b570"/>
        <function-ref name="stop" scoped="" ref="0x4125b810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x4125eb90" loc="57:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4125eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403420d0"/>
            <typename><typedef-ref name="T32khz" ref="0x40342298"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4125c308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4125c7f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4125c580"/>
        <function-ref name="overflow" scoped="" ref="0x4125ca70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407d4bc8" loc="18:/home/xinchaol/local/src/tinyos-2.x/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407d4bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407d4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x407ce860" loc="68:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x407ce860"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407cea38"/>
        <function-ref name="isInput" scoped="" ref="0x407ceb18"/>
        <function-ref name="toggle" scoped="" ref="0x407cebf8"/>
        <function-ref name="isOutput" scoped="" ref="0x407cecd8"/>
        <function-ref name="get" scoped="" ref="0x407cedb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x407cee98"/>
        <function-ref name="set" scoped="" ref="0x407cd010"/>
        <function-ref name="clr" scoped="" ref="0x407cd0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x407cd2e8" loc="69:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x407cd2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407cd4c0"/>
        <function-ref name="isInput" scoped="" ref="0x407cd5a0"/>
        <function-ref name="toggle" scoped="" ref="0x407cd680"/>
        <function-ref name="isOutput" scoped="" ref="0x407cd760"/>
        <function-ref name="get" scoped="" ref="0x407cd840"/>
        <function-ref name="makeOutput" scoped="" ref="0x407cd920"/>
        <function-ref name="set" scoped="" ref="0x407cda00"/>
        <function-ref name="clr" scoped="" ref="0x407cdae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x407cdcd0" loc="70:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x407cdcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407cdea8"/>
        <function-ref name="isInput" scoped="" ref="0x407cc010"/>
        <function-ref name="toggle" scoped="" ref="0x407cc0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x407cc1d0"/>
        <function-ref name="get" scoped="" ref="0x407cc2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407cc390"/>
        <function-ref name="set" scoped="" ref="0x407cc470"/>
        <function-ref name="clr" scoped="" ref="0x407cc550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x4068be50" loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x4068be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407ce050"/>
        <function-ref name="isInput" scoped="" ref="0x407ce130"/>
        <function-ref name="toggle" scoped="" ref="0x407ce210"/>
        <function-ref name="isOutput" scoped="" ref="0x407ce2f0"/>
        <function-ref name="get" scoped="" ref="0x407ce3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407ce4b0"/>
        <function-ref name="set" scoped="" ref="0x407ce590"/>
        <function-ref name="clr" scoped="" ref="0x407ce670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x407e5128" loc="72:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x407e5128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407e5300"/>
        <function-ref name="isInput" scoped="" ref="0x407e53e0"/>
        <function-ref name="toggle" scoped="" ref="0x407e54c0"/>
        <function-ref name="isOutput" scoped="" ref="0x407e55a0"/>
        <function-ref name="get" scoped="" ref="0x407e5680"/>
        <function-ref name="makeOutput" scoped="" ref="0x407e5760"/>
        <function-ref name="set" scoped="" ref="0x407e5840"/>
        <function-ref name="clr" scoped="" ref="0x407e5920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x4068b478" loc="66:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x4068b478"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4068b650"/>
        <function-ref name="isInput" scoped="" ref="0x4068b730"/>
        <function-ref name="toggle" scoped="" ref="0x4068b810"/>
        <function-ref name="isOutput" scoped="" ref="0x4068b8f0"/>
        <function-ref name="get" scoped="" ref="0x4068b9d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4068bab0"/>
        <function-ref name="set" scoped="" ref="0x4068bb90"/>
        <function-ref name="clr" scoped="" ref="0x4068bc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x407cc730" loc="71:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x407cc730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407cc908"/>
        <function-ref name="isInput" scoped="" ref="0x407cc9e8"/>
        <function-ref name="toggle" scoped="" ref="0x407ccac8"/>
        <function-ref name="isOutput" scoped="" ref="0x407ccba8"/>
        <function-ref name="get" scoped="" ref="0x407ccc88"/>
        <function-ref name="makeOutput" scoped="" ref="0x407ccd68"/>
        <function-ref name="set" scoped="" ref="0x407cce48"/>
        <function-ref name="clr" scoped="" ref="0x407ccf28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x407dceb8" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x407dceb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x407de0c0"/>
        <function-ref name="disable" scoped="" ref="0x407de1a0"/>
        <function-ref name="captured" scoped="" ref="0x407de280"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x407de360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x407de5e8" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x407de5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407de7c0"/>
        <function-ref name="disable" scoped="" ref="0x407de8a0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x407de980"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x407dea60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x407decf8" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x407decf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407deed0"/>
        <function-ref name="disable" scoped="" ref="0x407dd010"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x407dd0f0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x407dd1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x407da350" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x407da350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x407da528"/>
        <function-ref name="disable" scoped="" ref="0x407da608"/>
        <function-ref name="captured" scoped="" ref="0x407da6e8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x407da7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x407da9d8" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x407da9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x407e9500"/>
        <function-ref name="test" scoped="" ref="0x407e9010"/>
        <function-ref name="get" scoped="" ref="0x407ea048"/>
        <function-ref name="captured" scoped="" ref="0x407ea560"/>
        <function-ref name="reset" scoped="" ref="0x407ea800"/>
        <function-ref name="isOn" scoped="" ref="0x407e9288"/>
        <function-ref name="set" scoped="" ref="0x407ea2c0"/>
        <function-ref name="start" scoped="" ref="0x407eaa78"/>
        <function-ref name="stop" scoped="" ref="0x407eacf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x407e7cf8" loc="9:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x407e7cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407e7ed0"/>
        <function-ref name="fired" scoped="" ref="0x407e6010"/>
        <function-ref name="disable" scoped="" ref="0x407e60f0"/>
        <function-ref name="edge" scoped="" ref="0x407e61d0"/>
        <function-ref name="enable" scoped="" ref="0x407e62b0"/>
        <function-ref name="getValue" scoped="" ref="0x407e6390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x407e7700" loc="8:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x407e7700"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407e78d8"/>
        <function-ref name="disable" scoped="" ref="0x407e79b8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x407e7a98"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x407e7b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x4080b6b8" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x4080b6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4080b890"/>
        <function-ref name="fired" scoped="" ref="0x4080b970"/>
        <function-ref name="disable" scoped="" ref="0x4080ba50"/>
        <function-ref name="edge" scoped="" ref="0x4080bb30"/>
        <function-ref name="enable" scoped="" ref="0x4080bc10"/>
        <function-ref name="getValue" scoped="" ref="0x4080bcf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x407f49e8" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x407f49e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407f4bc0"/>
        <function-ref name="fired" scoped="" ref="0x407f4ca0"/>
        <function-ref name="disable" scoped="" ref="0x407f4d80"/>
        <function-ref name="edge" scoped="" ref="0x407f4e60"/>
        <function-ref name="enable" scoped="" ref="0x407f3010"/>
        <function-ref name="getValue" scoped="" ref="0x407f30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x4080c4f8" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x4080c4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4080c6d0"/>
        <function-ref name="fired" scoped="" ref="0x4080c7b0"/>
        <function-ref name="disable" scoped="" ref="0x4080c890"/>
        <function-ref name="edge" scoped="" ref="0x4080c970"/>
        <function-ref name="enable" scoped="" ref="0x4080ca50"/>
        <function-ref name="getValue" scoped="" ref="0x4080cb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x4080a010" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x4080a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4080a1e8"/>
        <function-ref name="fired" scoped="" ref="0x4080a2c8"/>
        <function-ref name="disable" scoped="" ref="0x4080a3a8"/>
        <function-ref name="edge" scoped="" ref="0x4080a488"/>
        <function-ref name="enable" scoped="" ref="0x4080a568"/>
        <function-ref name="getValue" scoped="" ref="0x4080a648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x407f3338" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x407f3338"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407f3510"/>
        <function-ref name="fired" scoped="" ref="0x407f35f0"/>
        <function-ref name="disable" scoped="" ref="0x407f36d0"/>
        <function-ref name="edge" scoped="" ref="0x407f37b0"/>
        <function-ref name="enable" scoped="" ref="0x407f3890"/>
        <function-ref name="getValue" scoped="" ref="0x407f3970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x4080cd78" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x4080cd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4080b010"/>
        <function-ref name="fired" scoped="" ref="0x4080b0f0"/>
        <function-ref name="disable" scoped="" ref="0x4080b1d0"/>
        <function-ref name="edge" scoped="" ref="0x4080b2b0"/>
        <function-ref name="enable" scoped="" ref="0x4080b390"/>
        <function-ref name="getValue" scoped="" ref="0x4080b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x407f4168" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x407f4168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407f4340"/>
        <function-ref name="fired" scoped="" ref="0x407f4420"/>
        <function-ref name="disable" scoped="" ref="0x407f4500"/>
        <function-ref name="edge" scoped="" ref="0x407f45e0"/>
        <function-ref name="enable" scoped="" ref="0x407f46c0"/>
        <function-ref name="getValue" scoped="" ref="0x407f47a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x407f3bb8" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x407f3bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407f3d90"/>
        <function-ref name="fired" scoped="" ref="0x407f3e70"/>
        <function-ref name="disable" scoped="" ref="0x4080c010"/>
        <function-ref name="edge" scoped="" ref="0x4080c0f0"/>
        <function-ref name="enable" scoped="" ref="0x4080c1d0"/>
        <function-ref name="getValue" scoped="" ref="0x4080c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x40805728" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x40805728"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40805900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x40806010" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x40806010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x408061e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x40806d78" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x40806d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40805010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x40805ba0" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x40805ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40805d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x40806488" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x40806488"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40806660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x408052b0" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x408052b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40805488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x40807b60" loc="34:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x40807b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40807d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x40806900" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x40806900"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40806ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4080fe60" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4080fe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4080e050"/>
        <function-ref name="fired" scoped="" ref="0x4080e130"/>
        <function-ref name="disable" scoped="" ref="0x4080e210"/>
        <function-ref name="edge" scoped="" ref="0x4080e2f0"/>
        <function-ref name="enable" scoped="" ref="0x4080e3d0"/>
        <function-ref name="getValue" scoped="" ref="0x4080e4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4080e630" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4080e630"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4080e808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4081c010" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4081c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4081c1e8"/>
        <function-ref name="fired" scoped="" ref="0x4081c2c8"/>
        <function-ref name="disable" scoped="" ref="0x4081c3a8"/>
        <function-ref name="edge" scoped="" ref="0x4081c488"/>
        <function-ref name="enable" scoped="" ref="0x4081c568"/>
        <function-ref name="getValue" scoped="" ref="0x4081c648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4081c7c8" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4081c7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4081c9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4081a228" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4081a228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4081a400"/>
        <function-ref name="fired" scoped="" ref="0x4081a4e0"/>
        <function-ref name="disable" scoped="" ref="0x4081a5c0"/>
        <function-ref name="edge" scoped="" ref="0x4081a6a0"/>
        <function-ref name="enable" scoped="" ref="0x4081a780"/>
        <function-ref name="getValue" scoped="" ref="0x4081a860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4081a9e0" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4081a9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4081abb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x408323b0" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x408323b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40832588"/>
        <function-ref name="fired" scoped="" ref="0x40832668"/>
        <function-ref name="disable" scoped="" ref="0x40832748"/>
        <function-ref name="edge" scoped="" ref="0x40832828"/>
        <function-ref name="enable" scoped="" ref="0x40832908"/>
        <function-ref name="getValue" scoped="" ref="0x408329e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40832b68" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40832b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40832d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x408305e0" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x408305e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408307b8"/>
        <function-ref name="fired" scoped="" ref="0x40830898"/>
        <function-ref name="disable" scoped="" ref="0x40830978"/>
        <function-ref name="edge" scoped="" ref="0x40830a58"/>
        <function-ref name="enable" scoped="" ref="0x40830b38"/>
        <function-ref name="getValue" scoped="" ref="0x40830c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40830d98" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40830d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4082f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4082e840" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4082e840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4082ea18"/>
        <function-ref name="fired" scoped="" ref="0x4082eaf8"/>
        <function-ref name="disable" scoped="" ref="0x4082ebd8"/>
        <function-ref name="edge" scoped="" ref="0x4082ecb8"/>
        <function-ref name="enable" scoped="" ref="0x4082ed98"/>
        <function-ref name="getValue" scoped="" ref="0x4082ee78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4082d010" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4082d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4082d1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4082ca08" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4082ca08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4082cbe0"/>
        <function-ref name="fired" scoped="" ref="0x4082ccc0"/>
        <function-ref name="disable" scoped="" ref="0x4082cda0"/>
        <function-ref name="edge" scoped="" ref="0x4082ce80"/>
        <function-ref name="enable" scoped="" ref="0x4082b010"/>
        <function-ref name="getValue" scoped="" ref="0x4082b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4082b270" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4082b270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4082b448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40829c70" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40829c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40829e48"/>
        <function-ref name="fired" scoped="" ref="0x40829f28"/>
        <function-ref name="disable" scoped="" ref="0x40828018"/>
        <function-ref name="edge" scoped="" ref="0x408280f8"/>
        <function-ref name="enable" scoped="" ref="0x408281d8"/>
        <function-ref name="getValue" scoped="" ref="0x408282b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40828438" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40828438"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40828610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x4083d250" loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x4083d250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4083d428"/>
        <function-ref name="isInput" scoped="" ref="0x4083d508"/>
        <function-ref name="toggle" scoped="" ref="0x4083d5e8"/>
        <function-ref name="isOutput" scoped="" ref="0x4083d6c8"/>
        <function-ref name="get" scoped="" ref="0x4083d7a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4083d888"/>
        <function-ref name="set" scoped="" ref="0x4083d968"/>
        <function-ref name="clr" scoped="" ref="0x4083da48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x40840b30" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x40840b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40840d08"/>
        <function-ref name="disable" scoped="" ref="0x40840de8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40840ec8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x4083d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x4083cac0" loc="69:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x4083cac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4083cc98"/>
        <function-ref name="runTask" scoped="" ref="0x4083cd78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40983e38" loc="69:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40983e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40982208"/>
        <function-ref name="write" scoped="" ref="0x409822e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x4097c550" loc="92:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x4097c550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x4097c728"/>
        <function-ref name="writeDone" scoped="" ref="0x4097c808"/>
        <function-ref name="write" scoped="" ref="0x4097c8e8"/>
        <function-ref name="beginRead" scoped="" ref="0x4097c9c8"/>
        <function-ref name="readDone" scoped="" ref="0x4097caa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40988368" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40988368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40988540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x409844b8" loc="63:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x409844b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40984690"/>
        <function-ref name="write" scoped="" ref="0x40984770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40982cd8" loc="72:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40982cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40982eb0"/>
        <function-ref name="write" scoped="" ref="0x40980010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40980190" loc="73:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40980190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40980368"/>
        <function-ref name="write" scoped="" ref="0x40980448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40988d70" loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40988d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40986010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x4097da00" loc="88:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x4097da00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4097dbd8"/>
        <function-ref name="write" scoped="" ref="0x4097dcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40984d28" loc="65:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40984d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40984f00"/>
        <function-ref name="write" scoped="" ref="0x40983010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x409835c8" loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x409835c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409837a0"/>
        <function-ref name="write" scoped="" ref="0x40983880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x409805c8" loc="74:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x409805c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409807a0"/>
        <function-ref name="write" scoped="" ref="0x40980880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x4097fb20" loc="79:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x4097fb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4097fcf8"/>
        <function-ref name="write" scoped="" ref="0x4097fdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40989728" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40989728"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40989900"/>
        <function-ref name="abortRelease" scoped="" ref="0x409899e0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40989ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40986b98" loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40986b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40986d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40986ef0" loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40986ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40985188"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40985308" loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40985308"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409854e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x409864e8" loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x409864e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409866c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40983190" loc="66:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40983190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40983368"/>
        <function-ref name="write" scoped="" ref="0x40983448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x409848f0" loc="64:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x409848f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40984ac8"/>
        <function-ref name="write" scoped="" ref="0x40984ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40988010" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40988010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409881e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x4097e010" loc="80:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x4097e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4097e1e8"/>
        <function-ref name="write" scoped="" ref="0x4097e2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x4097d5c8" loc="87:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x4097d5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4097d7a0"/>
        <function-ref name="write" scoped="" ref="0x4097d880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40980e38" loc="76:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40980e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4097f050"/>
        <function-ref name="write" scoped="" ref="0x4097f130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40989c40" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40989c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40989e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40984080" loc="62:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40984080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40984258"/>
        <function-ref name="write" scoped="" ref="0x40984338"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40983a00" loc="68:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40983a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40983bd8"/>
        <function-ref name="write" scoped="" ref="0x40983cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x4097de38" loc="91:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x4097de38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x4097c050"/>
        <function-ref name="writeDone" scoped="" ref="0x4097c130"/>
        <function-ref name="write" scoped="" ref="0x4097c210"/>
        <function-ref name="beginRead" scoped="" ref="0x4097c2f0"/>
        <function-ref name="readDone" scoped="" ref="0x4097c3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40980a00" loc="75:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40980a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40980bd8"/>
        <function-ref name="write" scoped="" ref="0x40980cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40982468" loc="70:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40982468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40982640"/>
        <function-ref name="write" scoped="" ref="0x40982720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x409886c0" loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x409886c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40988898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x409828a0" loc="71:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x409828a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40982a78"/>
        <function-ref name="write" scoped="" ref="0x40982b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40989070" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40989070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40989248"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40989328"/>
        <function-ref name="request" scoped="" ref="0x40989408"/>
        <function-ref name="granted" scoped="" ref="0x409894e8"/>
        <function-ref name="isOwner" scoped="" ref="0x409895c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40985660" loc="57:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40985660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40985838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40985d10" loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40985d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40985ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x4097d190" loc="86:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x4097d190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4097d368"/>
        <function-ref name="write" scoped="" ref="0x4097d448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x4097ecb8" loc="85:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x4097ecb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4097ee90"/>
        <function-ref name="write" scoped="" ref="0x4097d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40986840" loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40986840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40986a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x4097e880" loc="82:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x4097e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4097ea58"/>
        <function-ref name="write" scoped="" ref="0x4097eb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x4097e448" loc="81:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x4097e448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4097e620"/>
        <function-ref name="write" scoped="" ref="0x4097e700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40988a18" loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40988a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40988bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40986190" loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40986190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40986368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x409859b8" loc="58:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x409859b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40985b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x4097f2b0" loc="77:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x4097f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4097f488"/>
        <function-ref name="write" scoped="" ref="0x4097f568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x4097f6e8" loc="78:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x4097f6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4097f8c0"/>
        <function-ref name="write" scoped="" ref="0x4097f9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x40851428" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x40851428"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40851600"/>
        <function-ref name="writeDone" scoped="" ref="0x408516e0"/>
        <function-ref name="write" scoped="" ref="0x408517c0"/>
        <function-ref name="beginRead" scoped="" ref="0x408518a0"/>
        <function-ref name="readDone" scoped="" ref="0x40851980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40852b68" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40852b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40852d40"/>
        <function-ref name="abortRelease" scoped="" ref="0x40852e20"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40852f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x40851e70" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x40851e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4086b070"/>
        <function-ref name="write" scoped="" ref="0x4086b150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x4086b660" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x4086b660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4086b838"/>
        <function-ref name="write" scoped="" ref="0x4086b918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40852418" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40852418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408525f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408526d0"/>
        <function-ref name="request" scoped="" ref="0x408527b0"/>
        <function-ref name="granted" scoped="" ref="0x40852890"/>
        <function-ref name="isOwner" scoped="" ref="0x40852970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x4086be38" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x4086be38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4086a050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x4085feb8" loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x4085feb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408620c0"/>
        <function-ref name="sendDone" scoped="" ref="0x408621a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x40867c68" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x40867c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40867e40"/>
        <function-ref name="writeDone" scoped="" ref="0x40867f20"/>
        <function-ref name="write" scoped="" ref="0x40866018"/>
        <function-ref name="beginRead" scoped="" ref="0x408660f8"/>
        <function-ref name="readDone" scoped="" ref="0x408661d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x4086a9d8" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x4086a9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x4086abb0"/>
        <function-ref name="abortRelease" scoped="" ref="0x4086ac90"/>
        <function-ref name="attemptRelease" scoped="" ref="0x4086ad70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x40863a90" loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40863a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40863c68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x408623b8" loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x408623b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40862590"/>
        <function-ref name="toIdle" scoped="" ref="0x40862670"/>
        <function-ref name="isState" scoped="" ref="0x40862750"/>
        <function-ref name="isIdle" scoped="" ref="0x40862830"/>
        <function-ref name="requestState" scoped="" ref="0x40862910"/>
        <function-ref name="forceState" scoped="" ref="0x408629f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40865a70" loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40865a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40865c48"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40865d28"/>
        <function-ref name="request" scoped="" ref="0x40865e08"/>
        <function-ref name="granted" scoped="" ref="0x40865ee8"/>
        <function-ref name="isOwner" scoped="" ref="0x40863010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x408666a8" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x408666a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40866880"/>
        <function-ref name="write" scoped="" ref="0x40866960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x40866e50" loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x40866e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40865050"/>
        <function-ref name="write" scoped="" ref="0x40865130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40862b60" loc="57:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40862b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40862d38"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40862e18"/>
        <function-ref name="led1On" scoped="" ref="0x40862ef8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40861010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x408610f0"/>
        <function-ref name="get" scoped="" ref="0x408611d0"/>
        <function-ref name="led1Off" scoped="" ref="0x408612b0"/>
        <function-ref name="led2Off" scoped="" ref="0x40861630"/>
        <function-ref name="set" scoped="" ref="0x40861390"/>
        <function-ref name="led0On" scoped="" ref="0x40861470"/>
        <function-ref name="led2On" scoped="" ref="0x40861550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40867238" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40867238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40867410"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408674f0"/>
        <function-ref name="request" scoped="" ref="0x408675d0"/>
        <function-ref name="granted" scoped="" ref="0x408676b0"/>
        <function-ref name="isOwner" scoped="" ref="0x40867790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x40877980" loc="88:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x40877980"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40877b58"/>
        <function-ref name="runTask" scoped="" ref="0x40877c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x40865630" loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x40865630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40865808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40898040" loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40898040"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40898218"/>
        <function-ref name="toIdle" scoped="" ref="0x408982f8"/>
        <function-ref name="isState" scoped="" ref="0x408983d8"/>
        <function-ref name="isIdle" scoped="" ref="0x408984b8"/>
        <function-ref name="requestState" scoped="" ref="0x40898598"/>
        <function-ref name="forceState" scoped="" ref="0x40898678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x408b03b0" loc="66:/home/xinchaol/local/src/tinyos-2.x/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x408b03b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x408b0588"/>
        <function-ref name="toIdle" scoped="" ref="0x408b0668"/>
        <function-ref name="isState" scoped="" ref="0x408b0748"/>
        <function-ref name="isIdle" scoped="" ref="0x408b0828"/>
        <function-ref name="requestState" scoped="" ref="0x408b0908"/>
        <function-ref name="forceState" scoped="" ref="0x408b09e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408af400" loc="66:/home/xinchaol/local/src/tinyos-2.x/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408af400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408af5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x408afa30" loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x408afa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x408afc08"/>
        <function-ref name="toIdle" scoped="" ref="0x408afce8"/>
        <function-ref name="isState" scoped="" ref="0x408afdc8"/>
        <function-ref name="isIdle" scoped="" ref="0x408afea8"/>
        <function-ref name="requestState" scoped="" ref="0x408ab010"/>
        <function-ref name="forceState" scoped="" ref="0x408ab0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40977668" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40977668"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40977840"/>
        <function-ref name="sendDone" scoped="" ref="0x40977920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40977330" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40977330"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40977508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408ad8b0" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408ad8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408ada88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x408adbe8" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x408adbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408addc0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408adea0"/>
        <function-ref name="request" scoped="" ref="0x40977010"/>
        <function-ref name="granted" scoped="" ref="0x409770f0"/>
        <function-ref name="isOwner" scoped="" ref="0x409771d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x408b82a0" loc="68:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x408b82a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408b8478"/>
        <function-ref name="sendDone" scoped="" ref="0x408b8558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x408bbee0" loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x408bbee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x408b80e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408bbb60" loc="66:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408bbb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408bbd38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x408b89f0" loc="69:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x408b89f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408b8bc8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408b8ca8"/>
        <function-ref name="request" scoped="" ref="0x408b8d88"/>
        <function-ref name="granted" scoped="" ref="0x408b8e68"/>
        <function-ref name="isOwner" scoped="" ref="0x408b7010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x408eb1e0" loc="207:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x408eb1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408eb3b8"/>
        <function-ref name="runTask" scoped="" ref="0x408eb498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x408b3280" loc="79:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x408b3280"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408b3458"/>
        <function-ref name="sendDone" scoped="" ref="0x408b3538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x408ce8c0" loc="84:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x408ce8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408cea98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408ceb78"/>
        <function-ref name="request" scoped="" ref="0x408cec58"/>
        <function-ref name="granted" scoped="" ref="0x408ced38"/>
        <function-ref name="isOwner" scoped="" ref="0x408cee18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x408b7ef8" loc="78:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x408b7ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x408b30e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408b7b98" loc="77:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408b7b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408b7d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x408debc8" loc="83:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x408debc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x408deda0"/>
        <function-ref name="sleep" scoped="" ref="0x408ce2b0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x408cf010"/>
        <function-ref name="dataReady" scoped="" ref="0x408ce390"/>
        <function-ref name="initMaster" scoped="" ref="0x408cf1d0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x408cf2b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x408cf390"/>
        <function-ref name="read" scoped="" ref="0x408cf470"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x408cf550"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x408cf630"/>
        <function-ref name="setClock" scoped="" ref="0x408cf710"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x408cf7f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x408cf8d0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x408cfa30"/>
        <function-ref name="setDataOrder" scoped="" ref="0x408cfb10"/>
        <function-ref name="write" scoped="" ref="0x408cfbf0"/>
        <function-ref name="enableSpi" scoped="" ref="0x408cfcd0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x408cfdb0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x408cfe90"/>
        <function-ref name="getClock" scoped="" ref="0x408ce010"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x408ce0f0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x408dee80"/>
        <function-ref name="setClockPhase" scoped="" ref="0x408cf0f0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x408ce1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x408b39b0" loc="80:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x408b39b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408b3b88"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408b3c68"/>
        <function-ref name="request" scoped="" ref="0x408b3d48"/>
        <function-ref name="granted" scoped="" ref="0x408b3e28"/>
        <function-ref name="isOwner" scoped="" ref="0x408b3f08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x408dc3b0" loc="86:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x408dc3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x408dc588"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x408ddf18" loc="85:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x408ddf18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x408dc108"/>
        <function-ref name="userId" scoped="" ref="0x408dc1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x408b5b18" loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x408b5b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x408b5cf0"/>
        <function-ref name="sleep" scoped="" ref="0x408f01d0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x408b5eb0"/>
        <function-ref name="dataReady" scoped="" ref="0x408f02b0"/>
        <function-ref name="initMaster" scoped="" ref="0x408f10f0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x408f11d0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x408f12b0"/>
        <function-ref name="read" scoped="" ref="0x408f1390"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x408f1470"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x408f1550"/>
        <function-ref name="setClock" scoped="" ref="0x408f1630"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x408f1710"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x408f17f0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x408f1950"/>
        <function-ref name="setDataOrder" scoped="" ref="0x408f1a30"/>
        <function-ref name="write" scoped="" ref="0x408f1b10"/>
        <function-ref name="enableSpi" scoped="" ref="0x408f1bf0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x408f1cd0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x408f1db0"/>
        <function-ref name="getClock" scoped="" ref="0x408f1e90"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x408f0010"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x408b5dd0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x408f1010"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x408f00f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x40907b10" loc="64:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x40907b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40907ce8"/>
        <function-ref name="isInput" scoped="" ref="0x40907dc8"/>
        <function-ref name="toggle" scoped="" ref="0x40907ea8"/>
        <function-ref name="isOutput" scoped="" ref="0x40905010"/>
        <function-ref name="get" scoped="" ref="0x409050f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x409051d0"/>
        <function-ref name="set" scoped="" ref="0x409052b0"/>
        <function-ref name="clr" scoped="" ref="0x40905390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x40908730" loc="62:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x40908730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40908908"/>
        <function-ref name="isInput" scoped="" ref="0x409089e8"/>
        <function-ref name="toggle" scoped="" ref="0x40908ac8"/>
        <function-ref name="isOutput" scoped="" ref="0x40908ba8"/>
        <function-ref name="get" scoped="" ref="0x40908c88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40908d68"/>
        <function-ref name="set" scoped="" ref="0x40908e48"/>
        <function-ref name="clr" scoped="" ref="0x40908f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x40906d00" loc="61:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x40906d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40906ed8"/>
        <function-ref name="isInput" scoped="" ref="0x40908010"/>
        <function-ref name="toggle" scoped="" ref="0x409080f0"/>
        <function-ref name="isOutput" scoped="" ref="0x409081d0"/>
        <function-ref name="get" scoped="" ref="0x409082b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40908390"/>
        <function-ref name="set" scoped="" ref="0x40908470"/>
        <function-ref name="clr" scoped="" ref="0x40908550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40906840" loc="58:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40906840"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40906a18"/>
        <function-ref name="stop" scoped="" ref="0x40906af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x40905598" loc="65:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x40905598"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40905770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x408f0f28" loc="57:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x408f0f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x4090a110"/>
        <function-ref name="sleep" scoped="" ref="0x40909550"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x4090a2d0"/>
        <function-ref name="dataReady" scoped="" ref="0x40909630"/>
        <function-ref name="initMaster" scoped="" ref="0x4090a490"/>
        <function-ref name="setMasterBit" scoped="" ref="0x4090a570"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x4090a650"/>
        <function-ref name="read" scoped="" ref="0x4090a730"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x4090a810"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x4090a8f0"/>
        <function-ref name="setClock" scoped="" ref="0x4090a9d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x4090aab0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x4090ab90"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x4090acf0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x4090add0"/>
        <function-ref name="write" scoped="" ref="0x4090aeb0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40909010"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x409090f0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x409091d0"/>
        <function-ref name="getClock" scoped="" ref="0x409092b0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40909390"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x4090a1f0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x4090a3b0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40909470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x40907128" loc="63:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x40907128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40907300"/>
        <function-ref name="isInput" scoped="" ref="0x409073e0"/>
        <function-ref name="toggle" scoped="" ref="0x409074c0"/>
        <function-ref name="isOutput" scoped="" ref="0x409075a0"/>
        <function-ref name="get" scoped="" ref="0x40907680"/>
        <function-ref name="makeOutput" scoped="" ref="0x40907760"/>
        <function-ref name="set" scoped="" ref="0x40907840"/>
        <function-ref name="clr" scoped="" ref="0x40907920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x409388b0" loc="76:/home/xinchaol/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x409388b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40938a98"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40938b78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40964208" loc="79:/home/xinchaol/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40964208"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x409643f0"/>
        <function-ref name="configure" scoped="" ref="0x409644d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40938170" loc="75:/home/xinchaol/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40938170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40938358"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40938438"/>
        <function-ref name="request" scoped="" ref="0x40938518"/>
        <function-ref name="granted" scoped="" ref="0x409385f8"/>
        <function-ref name="isOwner" scoped="" ref="0x409386d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40938cb8" loc="77:/home/xinchaol/local/src/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40938cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40938e90"/>
        <function-ref name="userId" scoped="" ref="0x40964010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x412b2a98" loc="34:/home/xinchaol/local/src/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x412b2a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x412b2c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x412b2dd0" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x412b2dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x412b0010"/>
        <function-ref name="isEmpty" scoped="" ref="0x412b00f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x412b01d0"/>
        <function-ref name="dequeue" scoped="" ref="0x412b02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x412af5a8" loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x412af5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x412af790"/>
        <function-ref name="immediateRequested" scoped="" ref="0x412af870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x412afe70" loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x412afe70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x412ae070"/>
        <function-ref name="configure" scoped="" ref="0x412ae150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x412ae2b0" loc="57:/home/xinchaol/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x412ae2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x412ae488"/>
        <function-ref name="isEmpty" scoped="" ref="0x412ae568"/>
        <function-ref name="isEnqueued" scoped="" ref="0x412ae648"/>
        <function-ref name="dequeue" scoped="" ref="0x412ae728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x412b0e18" loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x412b0e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412af050"/>
        <function-ref name="immediateRequest" scoped="" ref="0x412af130"/>
        <function-ref name="request" scoped="" ref="0x412af210"/>
        <function-ref name="granted" scoped="" ref="0x412af2f0"/>
        <function-ref name="isOwner" scoped="" ref="0x412af3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x412af9b0" loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x412af9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x412afb88"/>
        <function-ref name="userId" scoped="" ref="0x412afc68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x412ae8a8" loc="69:/home/xinchaol/local/src/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x412ae8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x412aea80"/>
        <function-ref name="runTask" scoped="" ref="0x412aeb60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x4095e3a8" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x4095e3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4095e580"/>
        <function-ref name="isInput" scoped="" ref="0x4095e660"/>
        <function-ref name="toggle" scoped="" ref="0x4095e740"/>
        <function-ref name="isOutput" scoped="" ref="0x4095e820"/>
        <function-ref name="get" scoped="" ref="0x4095e900"/>
        <function-ref name="makeOutput" scoped="" ref="0x4095e9e0"/>
        <function-ref name="set" scoped="" ref="0x4095eac0"/>
        <function-ref name="clr" scoped="" ref="0x4095eba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4095f420" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4095f420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4095f5f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4095f6d8"/>
        <function-ref name="request" scoped="" ref="0x4095f7b8"/>
        <function-ref name="granted" scoped="" ref="0x4095f898"/>
        <function-ref name="isOwner" scoped="" ref="0x4095f978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x4095fbe0" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x4095fbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4095fdb8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4095fe98"/>
        <function-ref name="request" scoped="" ref="0x4095e010"/>
        <function-ref name="granted" scoped="" ref="0x4095e0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x4095e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x4098f5c8" loc="69:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x4098f5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098f8a0"/>
        <function-ref name="write" scoped="" ref="0x4098f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x409a9ca0" loc="92:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x409a9ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409a9e78"/>
        <function-ref name="writeDone" scoped="" ref="0x409a8010"/>
        <function-ref name="write" scoped="" ref="0x409a80f0"/>
        <function-ref name="beginRead" scoped="" ref="0x409a81d0"/>
        <function-ref name="readDone" scoped="" ref="0x409a82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40995920" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40995920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40995af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40992af8" loc="63:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40992af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40992cd0"/>
        <function-ref name="write" scoped="" ref="0x40992db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x4098e448" loc="72:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x4098e448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098e620"/>
        <function-ref name="write" scoped="" ref="0x4098e700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x4098e880" loc="73:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x4098e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098ea58"/>
        <function-ref name="write" scoped="" ref="0x4098eb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40994368" loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40994368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40994540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x409a9190" loc="88:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409a9190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a9368"/>
        <function-ref name="write" scoped="" ref="0x409a9448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40991448" loc="65:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40991448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40991620"/>
        <function-ref name="write" scoped="" ref="0x40991700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40991cb8" loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40991cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40991e90"/>
        <function-ref name="write" scoped="" ref="0x4098f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x4098ecb8" loc="74:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x4098ecb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098ee90"/>
        <function-ref name="write" scoped="" ref="0x4098d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x4098c2b0" loc="79:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x4098c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098c488"/>
        <function-ref name="write" scoped="" ref="0x4098c568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40996d30" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40996d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40996f08"/>
        <function-ref name="abortRelease" scoped="" ref="0x40995010"/>
        <function-ref name="attemptRelease" scoped="" ref="0x409950f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40993190" loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40993190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40993368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x409934e8" loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x409934e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40993740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x409938c0" loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x409938c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40993a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40994a18" loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40994a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40994bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40991880" loc="66:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40991880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40991a58"/>
        <function-ref name="write" scoped="" ref="0x40991b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40991010" loc="64:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40991010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409911e8"/>
        <function-ref name="write" scoped="" ref="0x409912c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x409955c8" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x409955c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409957a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x4098c6e8" loc="80:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x4098c6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098c8c0"/>
        <function-ref name="write" scoped="" ref="0x4098c9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x4098bcb8" loc="87:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x4098bcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098be90"/>
        <function-ref name="write" scoped="" ref="0x409a9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x4098d5c8" loc="76:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x4098d5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098d7a0"/>
        <function-ref name="write" scoped="" ref="0x4098d880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40995270" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40995270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40995448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x409926c0" loc="62:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x409926c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40992898"/>
        <function-ref name="write" scoped="" ref="0x40992978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x4098f190" loc="68:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x4098f190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098f368"/>
        <function-ref name="write" scoped="" ref="0x4098f448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x409a95c8" loc="91:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x409a95c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409a97a0"/>
        <function-ref name="writeDone" scoped="" ref="0x409a9880"/>
        <function-ref name="write" scoped="" ref="0x409a9960"/>
        <function-ref name="beginRead" scoped="" ref="0x409a9a40"/>
        <function-ref name="readDone" scoped="" ref="0x409a9b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x4098d190" loc="75:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x4098d190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098d368"/>
        <function-ref name="write" scoped="" ref="0x4098d448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x4098fb00" loc="70:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x4098fb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098fcd8"/>
        <function-ref name="write" scoped="" ref="0x4098fdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40995c78" loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40995c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40995e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x4098e010" loc="71:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x4098e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098e1e8"/>
        <function-ref name="write" scoped="" ref="0x4098e2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40996678" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40996678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40996850"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40996930"/>
        <function-ref name="request" scoped="" ref="0x40996a10"/>
        <function-ref name="granted" scoped="" ref="0x40996af0"/>
        <function-ref name="isOwner" scoped="" ref="0x40996bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40993c18" loc="57:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40993c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40993df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40992368" loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40992368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40992540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x4098b880" loc="86:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x4098b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098ba58"/>
        <function-ref name="write" scoped="" ref="0x4098bb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x4098b448" loc="85:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x4098b448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098b620"/>
        <function-ref name="write" scoped="" ref="0x4098b700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40994d70" loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40994d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40993010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x4098b010" loc="82:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x4098b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098b1e8"/>
        <function-ref name="write" scoped="" ref="0x4098b2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x4098cb20" loc="81:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x4098cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098ccf8"/>
        <function-ref name="write" scoped="" ref="0x4098cdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40994010" loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40994010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409941e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x409946c0" loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x409946c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40994898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40992010" loc="58:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40992010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409921e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x4098da00" loc="77:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x4098da00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098dbd8"/>
        <function-ref name="write" scoped="" ref="0x4098dcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x4098de38" loc="78:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x4098de38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098c050"/>
        <function-ref name="write" scoped="" ref="0x4098c130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x4099fbd8" loc="69:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x4099fbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4099feb0"/>
        <function-ref name="write" scoped="" ref="0x4099e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x409b9270" loc="92:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x409b9270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409b9448"/>
        <function-ref name="writeDone" scoped="" ref="0x409b9528"/>
        <function-ref name="write" scoped="" ref="0x409b9608"/>
        <function-ref name="beginRead" scoped="" ref="0x409b96e8"/>
        <function-ref name="readDone" scoped="" ref="0x409b97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x409a4010" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x409a4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409a41e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x409a0270" loc="63:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x409a0270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a0448"/>
        <function-ref name="write" scoped="" ref="0x409a0528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x4099ea00" loc="72:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x4099ea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4099ebd8"/>
        <function-ref name="write" scoped="" ref="0x4099ecb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x4099ee38" loc="73:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x4099ee38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4099d050"/>
        <function-ref name="write" scoped="" ref="0x4099d130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x409a4a18" loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x409a4a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409a4bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x409ba6e8" loc="88:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409ba6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ba8c0"/>
        <function-ref name="write" scoped="" ref="0x409ba9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x409a0ae0" loc="65:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x409a0ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a0cb8"/>
        <function-ref name="write" scoped="" ref="0x409a0d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x4099f368" loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x4099f368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4099f540"/>
        <function-ref name="write" scoped="" ref="0x4099f620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x4099d2b0" loc="74:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x4099d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4099d488"/>
        <function-ref name="write" scoped="" ref="0x4099d568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x4099c880" loc="79:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x4099c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4099ca58"/>
        <function-ref name="write" scoped="" ref="0x4099cb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x409a5410" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x409a5410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x409a55e8"/>
        <function-ref name="abortRelease" scoped="" ref="0x409a56c8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x409a57a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x409a3840" loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x409a3840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409a3a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x409a3b98" loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x409a3b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409a3df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x409a2010" loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x409a2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409a21e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x409a3190" loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x409a3190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409a3368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x409a0f18" loc="66:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x409a0f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4099f108"/>
        <function-ref name="write" scoped="" ref="0x4099f1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x409a06a8" loc="64:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x409a06a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a0880"/>
        <function-ref name="write" scoped="" ref="0x409a0960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x409a5c80" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x409a5c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409a5e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x4099ccb8" loc="80:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x4099ccb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4099ce90"/>
        <function-ref name="write" scoped="" ref="0x409bb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x409ba2b0" loc="87:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x409ba2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ba488"/>
        <function-ref name="write" scoped="" ref="0x409ba568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x4099db20" loc="76:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x4099db20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4099dcf8"/>
        <function-ref name="write" scoped="" ref="0x4099ddd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x409a5928" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x409a5928"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409a5b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x409a2d70" loc="62:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x409a2d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a0010"/>
        <function-ref name="write" scoped="" ref="0x409a00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x4099f7a0" loc="68:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x4099f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4099f978"/>
        <function-ref name="write" scoped="" ref="0x4099fa58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x409bab20" loc="91:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x409bab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409bacf8"/>
        <function-ref name="writeDone" scoped="" ref="0x409badd8"/>
        <function-ref name="write" scoped="" ref="0x409baeb8"/>
        <function-ref name="beginRead" scoped="" ref="0x409b9010"/>
        <function-ref name="readDone" scoped="" ref="0x409b90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x4099d6e8" loc="75:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x4099d6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4099d8c0"/>
        <function-ref name="write" scoped="" ref="0x4099d9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x4099e190" loc="70:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x4099e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4099e368"/>
        <function-ref name="write" scoped="" ref="0x4099e448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x409a4368" loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x409a4368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409a4540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x4099e5c8" loc="71:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x4099e5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4099e7a0"/>
        <function-ref name="write" scoped="" ref="0x4099e880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x409a6d38" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409a6d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409a6f10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409a5010"/>
        <function-ref name="request" scoped="" ref="0x409a50f0"/>
        <function-ref name="granted" scoped="" ref="0x409a51d0"/>
        <function-ref name="isOwner" scoped="" ref="0x409a52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x409a2368" loc="57:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x409a2368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409a2540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x409a2a18" loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x409a2a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409a2bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x409bbe38" loc="86:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x409bbe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ba050"/>
        <function-ref name="write" scoped="" ref="0x409ba130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x409bba00" loc="85:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x409bba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409bbbd8"/>
        <function-ref name="write" scoped="" ref="0x409bbcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x409a34e8" loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x409a34e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409a36c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x409bb5c8" loc="82:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x409bb5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409bb7a0"/>
        <function-ref name="write" scoped="" ref="0x409bb880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x409bb190" loc="81:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x409bb190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409bb368"/>
        <function-ref name="write" scoped="" ref="0x409bb448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x409a46c0" loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x409a46c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409a4898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x409a4d70" loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x409a4d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409a3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x409a26c0" loc="58:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x409a26c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409a2898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x4099c010" loc="77:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x4099c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4099c1e8"/>
        <function-ref name="write" scoped="" ref="0x4099c2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x4099c448" loc="78:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x4099c448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4099c620"/>
        <function-ref name="write" scoped="" ref="0x4099c700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x409b4448" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x409b4448"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x409b4620"/>
        <function-ref name="changed" scoped="" ref="0x409b4700"/>
        <function-ref name="amGroup" scoped="" ref="0x409b47e0"/>
        <function-ref name="setAddress" scoped="" ref="0x409b48c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x409c8808" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x409c8808"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x409c89e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x409c8ac0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x409c8ba0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x409c8c80"/>
        <function-ref name="setCca" scoped="" ref="0x409c8d60"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x409c8e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x409c78f0" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x409c78f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x409c7ac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x409c80f0" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x409c80f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409c82c8"/>
        <function-ref name="cancel" scoped="" ref="0x409c83a8"/>
        <function-ref name="modify" scoped="" ref="0x409c8488"/>
        <function-ref name="sendDone" scoped="" ref="0x409c8568"/>
        <function-ref name="resend" scoped="" ref="0x409c8648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x409cbbf0" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x409cbbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409cbdc8"/>
        <function-ref name="stop" scoped="" ref="0x409cbea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x409c7d58" loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x409c7d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x409c6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x409d4c90" loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x409d4c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x409d4e68"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x409d3010"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x409d30f0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x409d31d0"/>
        <function-ref name="setCca" scoped="" ref="0x409d32b0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x409d3390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x409cf880" loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x409cf880"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403420d0"/>
            <typename><typedef-ref name="T32khz" ref="0x40342298"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409ce3c0"/>
        <function-ref name="clear" scoped="" ref="0x409ce770"/>
        <function-ref name="isValid" scoped="" ref="0x409ce010"/>
        <function-ref name="set" scoped="" ref="0x409ceb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x409d3650" loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x409d3650"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x409d3828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x409e6c30" loc="70:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x409e6c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409e6e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x409eae58" loc="58:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x409eae58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x409ee050"/>
        <function-ref name="disable" scoped="" ref="0x409ee130"/>
        <function-ref name="captured" scoped="" ref="0x409ee210"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x409ee2f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x409d20e0" loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x409d20e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403420d0"/>
            <typename><typedef-ref name="T32khz" ref="0x40342298"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409d15c8"/>
        <function-ref name="fired" scoped="" ref="0x409d2d48"/>
        <function-ref name="startAt" scoped="" ref="0x409d1288"/>
        <function-ref name="isRunning" scoped="" ref="0x409d1010"/>
        <function-ref name="getAlarm" scoped="" ref="0x409d1840"/>
        <function-ref name="start" scoped="" ref="0x409d2830"/>
        <function-ref name="stop" scoped="" ref="0x409d2ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x409d1af0" loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x409d1af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x409d1cc8"/>
        <function-ref name="getRssi" scoped="" ref="0x409d1da8"/>
        <function-ref name="getPower" scoped="" ref="0x409d1e88"/>
        <function-ref name="getLqi" scoped="" ref="0x409cf010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x409e89d8" loc="66:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409e89d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e8bb0"/>
        <function-ref name="write" scoped="" ref="0x409e8c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x409e8ee0" loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x409e8ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e60e0"/>
        <function-ref name="write" scoped="" ref="0x409e61c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x409e1390" loc="74:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x409e1390"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409e1568"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x409e1648"/>
        <function-ref name="sfd" scoped="" ref="0x409e1728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x409d4558" loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x409d4558"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409d4730"/>
        <function-ref name="cancel" scoped="" ref="0x409d4810"/>
        <function-ref name="modify" scoped="" ref="0x409d48f0"/>
        <function-ref name="sendDone" scoped="" ref="0x409d49d0"/>
        <function-ref name="resend" scoped="" ref="0x409d4ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x409e9c48" loc="64:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x409e9c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x409e9e20"/>
        <function-ref name="abortRelease" scoped="" ref="0x409e9f00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x409e8010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x409e5088" loc="71:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x409e5088"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409e5260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x409ed010" loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x409ed010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409ed1e8"/>
        <function-ref name="isInput" scoped="" ref="0x409ed2c8"/>
        <function-ref name="toggle" scoped="" ref="0x409ed3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x409ed488"/>
        <function-ref name="get" scoped="" ref="0x409ed568"/>
        <function-ref name="makeOutput" scoped="" ref="0x409ed648"/>
        <function-ref name="set" scoped="" ref="0x409ed728"/>
        <function-ref name="clr" scoped="" ref="0x409ed808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409d5ca8" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409d5ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409d5e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x409cf218" loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x409cf218"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x409cf3f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x409cf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x409ea788" loc="57:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x409ea788"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409ea960"/>
        <function-ref name="isSet" scoped="" ref="0x409eaa40"/>
        <function-ref name="cancel" scoped="" ref="0x409eab20"/>
        <function-ref name="set" scoped="" ref="0x409eac00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x409e54c8" loc="72:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x409e54c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e57a0"/>
        <function-ref name="write" scoped="" ref="0x409e5880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x409e94f8" loc="63:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x409e94f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409e96d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409e97b0"/>
        <function-ref name="request" scoped="" ref="0x409e9890"/>
        <function-ref name="granted" scoped="" ref="0x409e9970"/>
        <function-ref name="isOwner" scoped="" ref="0x409e9a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x409ee4f0" loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x409ee4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409ee748"/>
        <function-ref name="isInput" scoped="" ref="0x409ee828"/>
        <function-ref name="toggle" scoped="" ref="0x409ee908"/>
        <function-ref name="isOutput" scoped="" ref="0x409ee9e8"/>
        <function-ref name="get" scoped="" ref="0x409eeac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x409eeba8"/>
        <function-ref name="set" scoped="" ref="0x409eec88"/>
        <function-ref name="clr" scoped="" ref="0x409eed68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x409e63f0" loc="68:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x409e63f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409e65c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x409eda08" loc="61:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x409eda08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409edbe0"/>
        <function-ref name="isInput" scoped="" ref="0x409edcc0"/>
        <function-ref name="toggle" scoped="" ref="0x409edda0"/>
        <function-ref name="isOutput" scoped="" ref="0x409ede80"/>
        <function-ref name="get" scoped="" ref="0x409e9010"/>
        <function-ref name="makeOutput" scoped="" ref="0x409e90f0"/>
        <function-ref name="set" scoped="" ref="0x409e91d0"/>
        <function-ref name="clr" scoped="" ref="0x409e92b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x409e18b8" loc="75:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x409e18b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x409e1a90"/>
        <function-ref name="led0Toggle" scoped="" ref="0x409e1b70"/>
        <function-ref name="led1On" scoped="" ref="0x409e1c50"/>
        <function-ref name="led1Toggle" scoped="" ref="0x409e1d30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x409e1e10"/>
        <function-ref name="get" scoped="" ref="0x409e1ef0"/>
        <function-ref name="led1Off" scoped="" ref="0x409e4010"/>
        <function-ref name="led2Off" scoped="" ref="0x409e4390"/>
        <function-ref name="set" scoped="" ref="0x409e40f0"/>
        <function-ref name="led0On" scoped="" ref="0x409e41d0"/>
        <function-ref name="led2On" scoped="" ref="0x409e42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x409d4060" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x409d4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409d4238"/>
        <function-ref name="stop" scoped="" ref="0x409d4318"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x409e8238" loc="65:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x409e8238"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409e8410"/>
        <function-ref name="writeDone" scoped="" ref="0x409e84f0"/>
        <function-ref name="write" scoped="" ref="0x409e85d0"/>
        <function-ref name="beginRead" scoped="" ref="0x409e86b0"/>
        <function-ref name="readDone" scoped="" ref="0x409e8790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x409e6800" loc="69:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x409e6800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409e69d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x409d3ad8" loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x409d3ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x409d3cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40a36880" loc="69:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40a36880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a36b58"/>
        <function-ref name="write" scoped="" ref="0x40a36c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40a54dc0" loc="92:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40a54dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40a53010"/>
        <function-ref name="writeDone" scoped="" ref="0x40a530f0"/>
        <function-ref name="write" scoped="" ref="0x40a531d0"/>
        <function-ref name="beginRead" scoped="" ref="0x40a532b0"/>
        <function-ref name="readDone" scoped="" ref="0x40a53390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40a3cd38" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40a3cd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a3cf10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40a38e50" loc="63:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40a38e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a37050"/>
        <function-ref name="write" scoped="" ref="0x40a37130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40a356a8" loc="72:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40a356a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a35880"/>
        <function-ref name="write" scoped="" ref="0x40a35960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40a35ae0" loc="73:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40a35ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a35cb8"/>
        <function-ref name="write" scoped="" ref="0x40a35d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40a3b760" loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40a3b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a3b938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40a542b0" loc="88:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40a542b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a54488"/>
        <function-ref name="write" scoped="" ref="0x40a54568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40a376e8" loc="65:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40a376e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a378c0"/>
        <function-ref name="write" scoped="" ref="0x40a379a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40a36010" loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40a36010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a361e8"/>
        <function-ref name="write" scoped="" ref="0x40a362c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40a35f18" loc="74:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40a35f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a33108"/>
        <function-ref name="write" scoped="" ref="0x40a331e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40a56468" loc="79:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40a56468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a56640"/>
        <function-ref name="write" scoped="" ref="0x40a56720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40a3c170" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40a3c170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40a3c348"/>
        <function-ref name="abortRelease" scoped="" ref="0x40a3c428"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40a3c508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40a394e8" loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40a394e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a396c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40a39840" loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40a39840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a39a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40a39c18" loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40a39c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a39df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40a3be10" loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40a3be10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a39010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40a37b20" loc="66:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40a37b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a37cf8"/>
        <function-ref name="write" scoped="" ref="0x40a37dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40a372b0" loc="64:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40a372b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a37488"/>
        <function-ref name="write" scoped="" ref="0x40a37568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40a3c9e0" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40a3c9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a3cbb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40a568a0" loc="80:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40a568a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a56a78"/>
        <function-ref name="write" scoped="" ref="0x40a56b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40a55e38" loc="87:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40a55e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a54050"/>
        <function-ref name="write" scoped="" ref="0x40a54130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40a337a0" loc="76:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40a337a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a33978"/>
        <function-ref name="write" scoped="" ref="0x40a33a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40a3c688" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40a3c688"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a3c860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40a38a18" loc="62:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40a38a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a38bf0"/>
        <function-ref name="write" scoped="" ref="0x40a38cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40a36448" loc="68:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40a36448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a36620"/>
        <function-ref name="write" scoped="" ref="0x40a36700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40a546e8" loc="91:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40a546e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40a548c0"/>
        <function-ref name="writeDone" scoped="" ref="0x40a549a0"/>
        <function-ref name="write" scoped="" ref="0x40a54a80"/>
        <function-ref name="beginRead" scoped="" ref="0x40a54b60"/>
        <function-ref name="readDone" scoped="" ref="0x40a54c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40a33368" loc="75:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40a33368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a33540"/>
        <function-ref name="write" scoped="" ref="0x40a33620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40a36db8" loc="70:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40a36db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a35010"/>
        <function-ref name="write" scoped="" ref="0x40a350f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40a3b0b0" loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40a3b0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a3b288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40a35270" loc="71:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40a35270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a35448"/>
        <function-ref name="write" scoped="" ref="0x40a35528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a3da40" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a3da40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a3dc18"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a3dcf8"/>
        <function-ref name="request" scoped="" ref="0x40a3ddd8"/>
        <function-ref name="granted" scoped="" ref="0x40a3deb8"/>
        <function-ref name="isOwner" scoped="" ref="0x40a3c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40a38010" loc="57:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40a38010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a381e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40a386c0" loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40a386c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a38898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40a55a00" loc="86:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40a55a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a55bd8"/>
        <function-ref name="write" scoped="" ref="0x40a55cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40a555c8" loc="85:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40a555c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a557a0"/>
        <function-ref name="write" scoped="" ref="0x40a55880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40a39190" loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40a39190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a39368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x40a55190" loc="82:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40a55190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a55368"/>
        <function-ref name="write" scoped="" ref="0x40a55448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40a56cd8" loc="81:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40a56cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a56eb0"/>
        <function-ref name="write" scoped="" ref="0x40a55010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40a3b408" loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40a3b408"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a3b5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40a3bab8" loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40a3bab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a3bc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40a38368" loc="58:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40a38368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a38540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40a33bd8" loc="77:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40a33bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a33db0"/>
        <function-ref name="write" scoped="" ref="0x40a33e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40a56030" loc="78:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40a56030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a56208"/>
        <function-ref name="write" scoped="" ref="0x40a562e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x40a4fa08" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x40a4fa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a4fbe0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x40a4fcc0"/>
        <function-ref name="sfd" scoped="" ref="0x40a4fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40a4c010" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a4c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a4c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x40a4c4a8" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x40a4c4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40a4c680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40a4f568" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40a4f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a4f740"/>
        <function-ref name="stop" scoped="" ref="0x40a4f820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x40a46220" loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x40a46220"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a463f8"/>
        <function-ref name="isInput" scoped="" ref="0x40a464d8"/>
        <function-ref name="toggle" scoped="" ref="0x40a465b8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a46698"/>
        <function-ref name="get" scoped="" ref="0x40a46778"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a46858"/>
        <function-ref name="set" scoped="" ref="0x40a46938"/>
        <function-ref name="clr" scoped="" ref="0x40a46a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x40a660f0" loc="62:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40a660f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40a662c8"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40a663a8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x40a66488"/>
        <function-ref name="syncDone" scoped="" ref="0x40a66568"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x40a66648"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40a66728"/>
        <function-ref name="setChannel" scoped="" ref="0x40a66808"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40a668e8"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40a669c8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40a66aa8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40a66b88"/>
        <function-ref name="sync" scoped="" ref="0x40a66c68"/>
        <function-ref name="getChannel" scoped="" ref="0x40a66d48"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40a66ea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x40a5d8e8" loc="115:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x40a5d8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a5dac0"/>
        <function-ref name="runTask" scoped="" ref="0x40a5dba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x40a46c30" loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x40a46c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a46e08"/>
        <function-ref name="isInput" scoped="" ref="0x40a46ee8"/>
        <function-ref name="toggle" scoped="" ref="0x40a45010"/>
        <function-ref name="isOutput" scoped="" ref="0x40a450f0"/>
        <function-ref name="get" scoped="" ref="0x40a451d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a452b0"/>
        <function-ref name="set" scoped="" ref="0x40a45390"/>
        <function-ref name="clr" scoped="" ref="0x40a45470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40a652b0" loc="63:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a652b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403420d0"/>
            <typename><typedef-ref name="T32khz" ref="0x40342298"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a65db0"/>
        <function-ref name="clear" scoped="" ref="0x40a64170"/>
        <function-ref name="isValid" scoped="" ref="0x40a65a00"/>
        <function-ref name="set" scoped="" ref="0x40a64520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40a675c0" loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40a675c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40a67798"/>
        <function-ref name="getRssi" scoped="" ref="0x40a67878"/>
        <function-ref name="getPower" scoped="" ref="0x40a67958"/>
        <function-ref name="getLqi" scoped="" ref="0x40a67a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x40a49958" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x40a49958"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a49b30"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x40a49c10"/>
        <function-ref name="sfd" scoped="" ref="0x40a49cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x40a68d40" loc="58:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40a68d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a68f18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x40a47758" loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x40a47758"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a47930"/>
        <function-ref name="isInput" scoped="" ref="0x40a47a10"/>
        <function-ref name="toggle" scoped="" ref="0x40a47af0"/>
        <function-ref name="isOutput" scoped="" ref="0x40a47bd0"/>
        <function-ref name="get" scoped="" ref="0x40a47cb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a47d90"/>
        <function-ref name="set" scoped="" ref="0x40a47e70"/>
        <function-ref name="clr" scoped="" ref="0x40a46010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a49118" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a49118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a492f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40a67c40" loc="61:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a67c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40a67e18"/>
        <function-ref name="getMetadata" scoped="" ref="0x40a67ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40a49e98" loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a49e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a470c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40a45dc8" loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40a45dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a68010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a680f0"/>
        <function-ref name="request" scoped="" ref="0x40a681d0"/>
        <function-ref name="granted" scoped="" ref="0x40a682b0"/>
        <function-ref name="isOwner" scoped="" ref="0x40a68390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x40a685b8" loc="57:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40a685b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40a68790"/>
        <function-ref name="writeDone" scoped="" ref="0x40a68870"/>
        <function-ref name="write" scoped="" ref="0x40a68950"/>
        <function-ref name="beginRead" scoped="" ref="0x40a68a30"/>
        <function-ref name="readDone" scoped="" ref="0x40a68b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x40a47380" loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x40a47380"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40a47558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40a64968" loc="65:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40a64968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40a64b40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40a64c20"/>
        <function-ref name="led1On" scoped="" ref="0x40a64d00"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40a64de0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40a64ec0"/>
        <function-ref name="get" scoped="" ref="0x40a63010"/>
        <function-ref name="led1Off" scoped="" ref="0x40a630f0"/>
        <function-ref name="led2Off" scoped="" ref="0x40a63470"/>
        <function-ref name="set" scoped="" ref="0x40a631d0"/>
        <function-ref name="led0On" scoped="" ref="0x40a632b0"/>
        <function-ref name="led2On" scoped="" ref="0x40a63390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x40a45708" loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x40a45708"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40a458e0"/>
        <function-ref name="disable" scoped="" ref="0x40a459c0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40a45aa0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40a45b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x40a67188" loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40a67188"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a673e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40a494b8" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40a494b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a49690"/>
        <function-ref name="stop" scoped="" ref="0x40a49770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40a95010" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a95010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40a951e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x40a4ae00" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40a4ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40a96010"/>
        <function-ref name="getRssi" scoped="" ref="0x40a960f0"/>
        <function-ref name="getPower" scoped="" ref="0x40a961d0"/>
        <function-ref name="getLqi" scoped="" ref="0x40a962b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x40a95668" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40a95668"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403420d0"/>
            <typename><typedef-ref name="T32khz" ref="0x40342298"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a94198"/>
        <function-ref name="clear" scoped="" ref="0x40a94548"/>
        <function-ref name="isValid" scoped="" ref="0x40a95db8"/>
        <function-ref name="set" scoped="" ref="0x40a948f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x40a96aa0" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a96aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40a96c78"/>
        <function-ref name="getMetadata" scoped="" ref="0x40a96d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40a91888" loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a91888"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a91a60"/>
        <function-ref name="isSet" scoped="" ref="0x40a91b40"/>
        <function-ref name="cancel" scoped="" ref="0x40a91c20"/>
        <function-ref name="set" scoped="" ref="0x40a91d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40a93100" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40a93100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033ac60"/>
            <typename><typedef-ref name="TMilli" ref="0x4033ae28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a93c00"/>
        <function-ref name="clear" scoped="" ref="0x40a91010"/>
        <function-ref name="isValid" scoped="" ref="0x40a93850"/>
        <function-ref name="set" scoped="" ref="0x40a913c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40a96520" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40a96520"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40a966f8"/>
        <function-ref name="noAck" scoped="" ref="0x40a967d8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40a968b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40a8d868" loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a8d868"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40a8da40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x40a90678" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40a90678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40a90850"/>
        <function-ref name="getRssi" scoped="" ref="0x40a90930"/>
        <function-ref name="getPower" scoped="" ref="0x40a90a10"/>
        <function-ref name="getLqi" scoped="" ref="0x40a90af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40aac638" loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40aac638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40aac810"/>
        <function-ref name="payloadLength" scoped="" ref="0x40aac8f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40aac9d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40aacab0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40aacb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x40a8dec0" loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40a8dec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403420d0"/>
            <typename><typedef-ref name="T32khz" ref="0x40342298"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40ab09d8"/>
        <function-ref name="clear" scoped="" ref="0x40ab0d88"/>
        <function-ref name="isValid" scoped="" ref="0x40ab0628"/>
        <function-ref name="set" scoped="" ref="0x40aae150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x40a8d3b8" loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a8d3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40a8d590"/>
        <function-ref name="getMetadata" scoped="" ref="0x40a8d670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40aac010" loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40aac010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40aac1e8"/>
        <function-ref name="isSet" scoped="" ref="0x40aac2c8"/>
        <function-ref name="cancel" scoped="" ref="0x40aac3a8"/>
        <function-ref name="set" scoped="" ref="0x40aac488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x40aa9ba0" loc="57:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x40aa9ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403420d0"/>
            <typename><typedef-ref name="T32khz" ref="0x40342298"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40aab200"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x40aab610" loc="58:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x40aab610"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033ac60"/>
            <typename><typedef-ref name="TMilli" ref="0x4033ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40aabc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40aae888" loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40aae888"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033ac60"/>
            <typename><typedef-ref name="TMilli" ref="0x4033ae28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40aad3c0"/>
        <function-ref name="clear" scoped="" ref="0x40aad770"/>
        <function-ref name="isValid" scoped="" ref="0x40aad010"/>
        <function-ref name="set" scoped="" ref="0x40aadb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40a90d60" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40a90d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40a8d010"/>
        <function-ref name="noAck" scoped="" ref="0x40a8d0f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40a8d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40acce70" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40acce70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403420d0"/>
            <typename><typedef-ref name="T32khz" ref="0x40342298"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ad24d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40ad2828" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40ad2828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403420d0"/>
            <typename><typedef-ref name="T32khz" ref="0x40342298"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40acb010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40acb500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40acb288"/>
        <function-ref name="overflow" scoped="" ref="0x40acb778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40ac7100" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40ac7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033ac60"/>
            <typename><typedef-ref name="TMilli" ref="0x4033ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ac6be0"/>
        <function-ref name="fired" scoped="" ref="0x40ac7e80"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ac65a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ac6348"/>
        <function-ref name="getdt" scoped="" ref="0x40ac50b8"/>
        <function-ref name="gett0" scoped="" ref="0x40ac6e38"/>
        <function-ref name="isRunning" scoped="" ref="0x40ac60f0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ac7728"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ac68c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ac79a8"/>
        <function-ref name="stop" scoped="" ref="0x40ac7c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40ac5418" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40ac5418"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033ac60"/>
            <typename><typedef-ref name="TMilli" ref="0x4033ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ac5a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40aca8c0" loc="34:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40aca8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40acaa98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x40ae4d20" loc="29:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x40ae4d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033ac60"/>
            <typename><typedef-ref name="TMilli" ref="0x4033ae28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ae2498"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ae2988"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ae2710"/>
        <function-ref name="overflow" scoped="" ref="0x40ae2c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ae9ae0" loc="27:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ae9ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ae9cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x40ae50e0" loc="28:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x40ae50e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033ac60"/>
            <typename><typedef-ref name="TMilli" ref="0x4033ae28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ae45c8"/>
        <function-ref name="fired" scoped="" ref="0x40ae5d48"/>
        <function-ref name="startAt" scoped="" ref="0x40ae4288"/>
        <function-ref name="isRunning" scoped="" ref="0x40ae4010"/>
        <function-ref name="getAlarm" scoped="" ref="0x40ae4840"/>
        <function-ref name="start" scoped="" ref="0x40ae5830"/>
        <function-ref name="stop" scoped="" ref="0x40ae5ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40b19a78" loc="26:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40b19a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033ac60"/>
            <typename><typedef-ref name="TMilli" ref="0x4033ae28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b16010"/>
        <function-ref name="fired" scoped="" ref="0x40b17718"/>
        <function-ref name="startAt" scoped="" ref="0x40b17c08"/>
        <function-ref name="isRunning" scoped="" ref="0x40b17990"/>
        <function-ref name="getAlarm" scoped="" ref="0x40b16288"/>
        <function-ref name="start" scoped="" ref="0x40b17200"/>
        <function-ref name="stop" scoped="" ref="0x40b174a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b19640" loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b19640"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402eeae0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402eeae0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b19818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40b165b8" loc="27:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b165b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033ac60"/>
            <typename><typedef-ref name="TMilli" ref="0x4033ae28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b16d08"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b15288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b15010"/>
        <function-ref name="overflow" scoped="" ref="0x40b15500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x4132c010" loc="31:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x4132c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x4132c1e8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x4132c2c8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x4132c3a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x4132c488"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x4132c568"/>
        <function-ref name="setControl" scoped="" ref="0x4132c648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x413330a0" loc="26:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x413330a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033ac60"/>
            <typename><typedef-ref name="TMilli" ref="0x4033ae28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x413315c8"/>
        <function-ref name="fired" scoped="" ref="0x41333d08"/>
        <function-ref name="startAt" scoped="" ref="0x41331288"/>
        <function-ref name="isRunning" scoped="" ref="0x41331010"/>
        <function-ref name="getAlarm" scoped="" ref="0x41331840"/>
        <function-ref name="start" scoped="" ref="0x413337f0"/>
        <function-ref name="stop" scoped="" ref="0x41333a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41334c38" loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41334c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41334e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x41331b70" loc="27:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x41331b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033ac60"/>
            <typename><typedef-ref name="TMilli" ref="0x4033ae28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41330308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x413307f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41330580"/>
        <function-ref name="overflow" scoped="" ref="0x41330a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x4132a278" loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x4132a278"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x4132a450"/>
        <function-ref name="compareBusy" scoped="" ref="0x4132a530"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x4132a610"/>
        <function-ref name="countBusy" scoped="" ref="0x4132a6f0"/>
        <function-ref name="getAssr" scoped="" ref="0x4132a7d0"/>
        <function-ref name="setAssr" scoped="" ref="0x4132a8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x4132c838" loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x4132c838"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4132bd90"/>
        <function-ref name="fired" scoped="" ref="0x4132b3b0"/>
        <function-ref name="get" scoped="" ref="0x4132ce80"/>
        <function-ref name="reset" scoped="" ref="0x4132b628"/>
        <function-ref name="isOn" scoped="" ref="0x4132a048"/>
        <function-ref name="set" scoped="" ref="0x4132b110"/>
        <function-ref name="start" scoped="" ref="0x4132b8a0"/>
        <function-ref name="stop" scoped="" ref="0x4132bb18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x41330d60" loc="30:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41330d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4132d7f0"/>
        <function-ref name="test" scoped="" ref="0x4132d300"/>
        <function-ref name="get" scoped="" ref="0x4132f3e0"/>
        <function-ref name="setScale" scoped="" ref="0x4132da68"/>
        <function-ref name="getScale" scoped="" ref="0x4132dd08"/>
        <function-ref name="reset" scoped="" ref="0x4132fb70"/>
        <function-ref name="overflow" scoped="" ref="0x4132f8f8"/>
        <function-ref name="isOn" scoped="" ref="0x4132d578"/>
        <function-ref name="set" scoped="" ref="0x4132f658"/>
        <function-ref name="start" scoped="" ref="0x4132fde8"/>
        <function-ref name="stop" scoped="" ref="0x4132d088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x40b48818" loc="63:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x40b48818"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b489f0"/>
        <function-ref name="runTask" scoped="" ref="0x40b48ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40b23e50" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40b23e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033ac60"/>
            <typename><typedef-ref name="TMilli" ref="0x4033ae28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b48350"/>
        <function-ref name="fired" scoped="" ref="0x40b49af8"/>
        <function-ref name="startAt" scoped="" ref="0x40b48010"/>
        <function-ref name="isRunning" scoped="" ref="0x40b49d70"/>
        <function-ref name="getAlarm" scoped="" ref="0x40b485c8"/>
        <function-ref name="start" scoped="" ref="0x40b495e0"/>
        <function-ref name="stop" scoped="" ref="0x40b49880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40ae6a88" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40ae6a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033ac60"/>
            <typename><typedef-ref name="TMilli" ref="0x4033ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b23650"/>
        <function-ref name="fired" scoped="" ref="0x40b13830"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b23010"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b13ce0"/>
        <function-ref name="getdt" scoped="" ref="0x40b23b00"/>
        <function-ref name="gett0" scoped="" ref="0x40b238a8"/>
        <function-ref name="isRunning" scoped="" ref="0x40b13a88"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b130d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b23330"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b13358"/>
        <function-ref name="stop" scoped="" ref="0x40b135d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x40b6bda8" loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x40b6bda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b6a010"/>
        <function-ref name="runTask" scoped="" ref="0x40b6a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x40b6eb78" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x40b6eb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033ac60"/>
            <typename><typedef-ref name="TMilli" ref="0x4033ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b6b6a8"/>
        <function-ref name="fired" scoped="" ref="0x40b6d938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b6b068"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b6dde8"/>
        <function-ref name="getdt" scoped="" ref="0x40b6bb58"/>
        <function-ref name="gett0" scoped="" ref="0x40b6b900"/>
        <function-ref name="isRunning" scoped="" ref="0x40b6db90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b6d1e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b6b388"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b6d460"/>
        <function-ref name="stop" scoped="" ref="0x40b6d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b44808" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b44808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033ac60"/>
            <typename><typedef-ref name="TMilli" ref="0x4033ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b6e3b8"/>
        <function-ref name="fired" scoped="" ref="0x40b70608"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b70d40"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b70ad8"/>
        <function-ref name="getdt" scoped="" ref="0x40b6e888"/>
        <function-ref name="gett0" scoped="" ref="0x40b6e620"/>
        <function-ref name="isRunning" scoped="" ref="0x40b70870"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b44e40"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b6e088"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b70110"/>
        <function-ref name="stop" scoped="" ref="0x40b703a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40b692f8" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40b692f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033ac60"/>
            <typename><typedef-ref name="TMilli" ref="0x4033ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b69940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40b69c90" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b69c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033ac60"/>
            <typename><typedef-ref name="TMilli" ref="0x4033ae28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b683f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b688e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b68668"/>
        <function-ref name="overflow" scoped="" ref="0x40b68b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b65e10" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b65e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033ac60"/>
            <typename><typedef-ref name="TMilli" ref="0x4033ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b82900"/>
        <function-ref name="fired" scoped="" ref="0x40b64ba0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b822c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b82068"/>
        <function-ref name="getdt" scoped="" ref="0x40b82db0"/>
        <function-ref name="gett0" scoped="" ref="0x40b82b58"/>
        <function-ref name="isRunning" scoped="" ref="0x40b64df8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b64448"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b825e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b646c8"/>
        <function-ref name="stop" scoped="" ref="0x40b64948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40b5e010" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40b5e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033ac60"/>
            <typename><typedef-ref name="TMilli" ref="0x4033ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b85b00"/>
        <function-ref name="fired" scoped="" ref="0x40b5ed90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b854c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b85268"/>
        <function-ref name="getdt" scoped="" ref="0x40b83010"/>
        <function-ref name="gett0" scoped="" ref="0x40b85d58"/>
        <function-ref name="isRunning" scoped="" ref="0x40b85010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b5e638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b857e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b5e8b8"/>
        <function-ref name="stop" scoped="" ref="0x40b5eb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40b7a880" loc="69:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40b7a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b7ab58"/>
        <function-ref name="write" scoped="" ref="0x40b7ac38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40b74dc0" loc="92:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40b74dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40b73010"/>
        <function-ref name="writeDone" scoped="" ref="0x40b730f0"/>
        <function-ref name="write" scoped="" ref="0x40b731d0"/>
        <function-ref name="beginRead" scoped="" ref="0x40b732b0"/>
        <function-ref name="readDone" scoped="" ref="0x40b73390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40b80e18" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40b80e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b7f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40b7cec0" loc="63:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40b7cec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b7b0c0"/>
        <function-ref name="write" scoped="" ref="0x40b7b1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40b786a8" loc="72:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40b786a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b78880"/>
        <function-ref name="write" scoped="" ref="0x40b78960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40b78ae0" loc="73:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40b78ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b78cb8"/>
        <function-ref name="write" scoped="" ref="0x40b78d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40b7f840" loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40b7f840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b7fa18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40b742b0" loc="88:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40b742b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b74488"/>
        <function-ref name="write" scoped="" ref="0x40b74568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40b7b758" loc="65:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40b7b758"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b7b930"/>
        <function-ref name="write" scoped="" ref="0x40b7ba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40b7a010" loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40b7a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b7a1e8"/>
        <function-ref name="write" scoped="" ref="0x40b7a2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40b78f18" loc="74:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40b78f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b77108"/>
        <function-ref name="write" scoped="" ref="0x40b771e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40b76468" loc="79:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40b76468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b76640"/>
        <function-ref name="write" scoped="" ref="0x40b76720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40b80250" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40b80250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40b80428"/>
        <function-ref name="abortRelease" scoped="" ref="0x40b80508"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40b805e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40b7d5b8" loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40b7d5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b7d790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40b7d910" loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40b7d910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b7db68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40b7dce8" loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40b7dce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b7dec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40b7fef0" loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40b7fef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b7d0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40b7bb90" loc="66:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40b7bb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b7bd68"/>
        <function-ref name="write" scoped="" ref="0x40b7be48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40b7b320" loc="64:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40b7b320"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b7b4f8"/>
        <function-ref name="write" scoped="" ref="0x40b7b5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40b80ac0" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40b80ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b80c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40b768a0" loc="80:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40b768a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b76a78"/>
        <function-ref name="write" scoped="" ref="0x40b76b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40b75e38" loc="87:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40b75e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b74050"/>
        <function-ref name="write" scoped="" ref="0x40b74130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40b777a0" loc="76:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40b777a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b77978"/>
        <function-ref name="write" scoped="" ref="0x40b77a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40b80768" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40b80768"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b80940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40b7ca88" loc="62:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40b7ca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b7cc60"/>
        <function-ref name="write" scoped="" ref="0x40b7cd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40b7a448" loc="68:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40b7a448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b7a620"/>
        <function-ref name="write" scoped="" ref="0x40b7a700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40b746e8" loc="91:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40b746e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40b748c0"/>
        <function-ref name="writeDone" scoped="" ref="0x40b749a0"/>
        <function-ref name="write" scoped="" ref="0x40b74a80"/>
        <function-ref name="beginRead" scoped="" ref="0x40b74b60"/>
        <function-ref name="readDone" scoped="" ref="0x40b74c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40b77368" loc="75:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40b77368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b77540"/>
        <function-ref name="write" scoped="" ref="0x40b77620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40b7adb8" loc="70:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40b7adb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b78010"/>
        <function-ref name="write" scoped="" ref="0x40b780f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40b7f190" loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40b7f190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b7f368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40b78270" loc="71:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40b78270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b78448"/>
        <function-ref name="write" scoped="" ref="0x40b78528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a97b28" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a97b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a97d00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a97de0"/>
        <function-ref name="request" scoped="" ref="0x40a97ec0"/>
        <function-ref name="granted" scoped="" ref="0x40b80010"/>
        <function-ref name="isOwner" scoped="" ref="0x40b800f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40b7c080" loc="57:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40b7c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b7c258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40b7c730" loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40b7c730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b7c908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40b75a00" loc="86:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40b75a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b75bd8"/>
        <function-ref name="write" scoped="" ref="0x40b75cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40b755c8" loc="85:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40b755c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b757a0"/>
        <function-ref name="write" scoped="" ref="0x40b75880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40b7d260" loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40b7d260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b7d438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x40b75190" loc="82:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40b75190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b75368"/>
        <function-ref name="write" scoped="" ref="0x40b75448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40b76cd8" loc="81:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40b76cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b76eb0"/>
        <function-ref name="write" scoped="" ref="0x40b75010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40b7f4e8" loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40b7f4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b7f6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40b7fb98" loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40b7fb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b7fd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40b7c3d8" loc="58:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40b7c3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b7c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40b77bd8" loc="77:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40b77bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b77db0"/>
        <function-ref name="write" scoped="" ref="0x40b77e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40b76030" loc="78:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40b76030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b76208"/>
        <function-ref name="write" scoped="" ref="0x40b762e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40b890a0" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40b890a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40b89278"/>
        <function-ref name="rand32" scoped="" ref="0x40b89358"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40b877b8" loc="34:/home/xinchaol/local/src/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40b877b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b87de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b8c598" loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b8c598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b8c770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40badb08" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40badb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40badce0"/>
        <function-ref name="rand32" scoped="" ref="0x40baddc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40bad248" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40bad248"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bad870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b89d08" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b89d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b89ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40b8bbf8" loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40b8bbf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40b8bdd0"/>
        <function-ref name="toIdle" scoped="" ref="0x40b8beb0"/>
        <function-ref name="isState" scoped="" ref="0x40b8a010"/>
        <function-ref name="isIdle" scoped="" ref="0x40b8a0f0"/>
        <function-ref name="requestState" scoped="" ref="0x40b8a1d0"/>
        <function-ref name="forceState" scoped="" ref="0x40b8a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40ba2308" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40ba2308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ba24e0"/>
        <function-ref name="getPayload" scoped="" ref="0x40ba25c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ba26a0"/>
        <function-ref name="cancel" scoped="" ref="0x40ba2780"/>
        <function-ref name="sendDone" scoped="" ref="0x40ba2860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40ba5b18" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40ba5b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ba5cf0"/>
        <function-ref name="getPayload" scoped="" ref="0x40ba5dd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ba5eb0"/>
        <function-ref name="cancel" scoped="" ref="0x40ba2010"/>
        <function-ref name="sendDone" scoped="" ref="0x40ba20f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40b9fc90" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40b9fc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b9fe68"/>
        <function-ref name="getPayload" scoped="" ref="0x40b9e010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b9e0f0"/>
        <function-ref name="cancel" scoped="" ref="0x40b9e1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40b9e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40b9f1d8" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40b9f1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b9f3b0"/>
        <function-ref name="getPayload" scoped="" ref="0x40b9f490"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b9f570"/>
        <function-ref name="cancel" scoped="" ref="0x40b9f650"/>
        <function-ref name="sendDone" scoped="" ref="0x40b9f730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40b9ebe0" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40b9ebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40b9edb8"/>
        <function-ref name="rand32" scoped="" ref="0x40b9ee98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b9f8a0" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b9f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b9fa78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40b9c108" loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40b9c108"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40b9c2e0"/>
        <function-ref name="getMetadata" scoped="" ref="0x40b9c3c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x40b9e428" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40b9e428"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40b9e600"/>
        <function-ref name="toIdle" scoped="" ref="0x40b9e6e0"/>
        <function-ref name="isState" scoped="" ref="0x40b9e7c0"/>
        <function-ref name="isIdle" scoped="" ref="0x40b9e8a0"/>
        <function-ref name="requestState" scoped="" ref="0x40b9e980"/>
        <function-ref name="forceState" scoped="" ref="0x40b9ea60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40ba10e8" loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40ba10e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40ba12c0"/>
        <function-ref name="toIdle" scoped="" ref="0x40ba13a0"/>
        <function-ref name="isState" scoped="" ref="0x40ba1480"/>
        <function-ref name="isIdle" scoped="" ref="0x40ba1560"/>
        <function-ref name="requestState" scoped="" ref="0x40ba1640"/>
        <function-ref name="forceState" scoped="" ref="0x40ba1720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40bb9098" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40bb9098"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bb9270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40ba37f0" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40ba37f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ba39c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x40ba3c18" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x40ba3c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ba3df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40bb68e0" loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40bb68e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bb6ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40bb64b8" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40bb64b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bb6690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40bb9d08" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40bb9d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bb9ee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40bb6ca0" loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40bb6ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40bb6e78"/>
        <function-ref name="getMetadata" scoped="" ref="0x40bb5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x40bb6170" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x40bb6170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bb6348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40bcea38" loc="68:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40bcea38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bcec10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40bcede8" loc="69:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40bcede8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bcd010"/>
        <function-ref name="getPayload" scoped="" ref="0x40bcd0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bcd1d0"/>
        <function-ref name="cancel" scoped="" ref="0x40bcd2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40bcd390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40bbbf18" loc="63:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40bbbf18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bce108"/>
        <function-ref name="getPayload" scoped="" ref="0x40bce1e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bce2c8"/>
        <function-ref name="cancel" scoped="" ref="0x40bce3a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40bce488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40bce610" loc="64:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40bce610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bce7e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40bc80c8" loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40bc80c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bc82a0"/>
        <function-ref name="getPayload" scoped="" ref="0x40bc8380"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bc8460"/>
        <function-ref name="cancel" scoped="" ref="0x40bc8540"/>
        <function-ref name="sendDone" scoped="" ref="0x40bc8620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40bc8830" loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40bc8830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bc8a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40bcde40" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40bcde40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bca050"/>
        <function-ref name="getPayload" scoped="" ref="0x40bca130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bca210"/>
        <function-ref name="cancel" scoped="" ref="0x40bca2f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40bca3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NonTinyosReceive" ref="0x40bcaca8" loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NonTinyosReceive" scoped="" ref="0x40bcaca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bcae80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40bc8bf0" loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40bc8bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40bc8dc8"/>
        <function-ref name="getMetadata" scoped="" ref="0x40bc8ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40bca558" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40bca558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bca730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40be3010" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40be3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40be31e8"/>
        <function-ref name="stopDone" scoped="" ref="0x40be32c8"/>
        <function-ref name="start" scoped="" ref="0x40be33a8"/>
        <function-ref name="stop" scoped="" ref="0x40be3488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40be3ed0" loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40be3ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40be20c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40be21a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40be2280"/>
        <function-ref name="cancel" scoped="" ref="0x40be2360"/>
        <function-ref name="sendDone" scoped="" ref="0x40be2440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40be2650" loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40be2650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40be2828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40bba9b8" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40bba9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bbab90"/>
        <function-ref name="getPayload" scoped="" ref="0x40bbac70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bbad50"/>
        <function-ref name="cancel" scoped="" ref="0x40bbae30"/>
        <function-ref name="sendDone" scoped="" ref="0x40bbaf10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40be4480" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40be4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x40be4658"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x40be4738"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x40be4818"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x40be48f8"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x40be49d8"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x40be4ab8"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x40be4b98"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x40be4c78"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x40be4d58"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x40be4e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x40be3680" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x40be3680"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40be3858"/>
        <function-ref name="toIdle" scoped="" ref="0x40be3938"/>
        <function-ref name="isState" scoped="" ref="0x40be3a18"/>
        <function-ref name="isIdle" scoped="" ref="0x40be3af8"/>
        <function-ref name="requestState" scoped="" ref="0x40be3bd8"/>
        <function-ref name="forceState" scoped="" ref="0x40be3cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40be2a70" loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40be2a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40be2c48"/>
        <function-ref name="stopDone" scoped="" ref="0x40be2d28"/>
        <function-ref name="start" scoped="" ref="0x40be2e08"/>
        <function-ref name="stop" scoped="" ref="0x40be2ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40be40b8" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40be40b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40be4290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40be16c0" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40be16c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x40be1898"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x40be1978"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x40be1a58"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x40be1b38"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x40be1c18"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x40be1cf8"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x40be1dd8"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x40be1eb8"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x40bde010"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x40bde0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40be0338" loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40be0338"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40be0510"/>
        <function-ref name="toIdle" scoped="" ref="0x40be05f0"/>
        <function-ref name="isState" scoped="" ref="0x40be06d0"/>
        <function-ref name="isIdle" scoped="" ref="0x40be07b0"/>
        <function-ref name="requestState" scoped="" ref="0x40be0890"/>
        <function-ref name="forceState" scoped="" ref="0x40be0970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40bfb150" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40bfb150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bfb328"/>
        <function-ref name="getPayload" scoped="" ref="0x40bfb408"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bfb4e8"/>
        <function-ref name="cancel" scoped="" ref="0x40bfb5c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40bfb6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40be52c8" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40be52c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40be54a0"/>
        <function-ref name="getPayload" scoped="" ref="0x40be5580"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40be5660"/>
        <function-ref name="cancel" scoped="" ref="0x40be5740"/>
        <function-ref name="sendDone" scoped="" ref="0x40be5820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40be59c8" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40be59c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40be5ba0"/>
        <function-ref name="setRetries" scoped="" ref="0x40be5c80"/>
        <function-ref name="getRetries" scoped="" ref="0x40be5d60"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40be5e40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40be5f20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40bf85f0" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40bf85f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40bf87c8"/>
        <function-ref name="noAck" scoped="" ref="0x40bf88a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40bf8988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40bfbe00" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40bfbe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40bf8010"/>
        <function-ref name="setRetries" scoped="" ref="0x40bf80f0"/>
        <function-ref name="getRetries" scoped="" ref="0x40bf81d0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40bf82b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40bf8390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x40c03e98" loc="14:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <component-ref qname="BcpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x40c03e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x40c020c0"/>
        <function-ref name="setRoot" scoped="" ref="0x40c021a0"/>
        <function-ref name="unsetRoot" scoped="" ref="0x40c02280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x40c2b7f0" loc="11:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <component-ref qname="BcpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x40c2b7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40c2b9c8"/>
        <function-ref name="setOrigin" scoped="" ref="0x40c2baa8"/>
        <function-ref name="setType" scoped="" ref="0x40c2bb88"/>
        <function-ref name="getOrigin" scoped="" ref="0x40c2bc68"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40c2bd48"/>
        <function-ref name="getType" scoped="" ref="0x40c2be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40c05790" loc="10:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <component-ref qname="BcpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40c05790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c05968"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c05a48"/>
        <function-ref name="getPayload" scoped="" ref="0x40c05b28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c05c08"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c05ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c06d08" loc="7:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <component-ref qname="BcpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c06d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c06ee0"/>
        <function-ref name="getPayload" scoped="" ref="0x40c05010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c050f0"/>
        <function-ref name="cancel" scoped="" ref="0x40c051d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c052b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BcpDebugIF" ref="0x40c2a9b8" loc="20:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <component-ref qname="BcpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BcpDebugIF" scoped="" ref="0x40c2a9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BcpDebugIF"/>
      </instance>
      <interface-functions>
        <function-ref name="reportBackpressure" scoped="" ref="0x40c2ab90"/>
        <function-ref name="reportError" scoped="" ref="0x40c2ac70"/>
        <function-ref name="reportLinkRate" scoped="" ref="0x40c2ad50"/>
        <function-ref name="reportValues" scoped="" ref="0x40c2ae30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c05438" loc="8:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <component-ref qname="BcpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c05438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c05610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BcpPacket" ref="0x40c03010" loc="12:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <component-ref qname="BcpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BcpPacket" scoped="" ref="0x40c03010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BcpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40c031e8"/>
        <function-ref name="getHopCount" scoped="" ref="0x40c032c8"/>
        <function-ref name="getBCPPktType" scoped="" ref="0x40c033a8"/>
        <function-ref name="setOrigin" scoped="" ref="0x40c03488"/>
        <function-ref name="setType" scoped="" ref="0x40c03568"/>
        <function-ref name="getOrigin" scoped="" ref="0x40c03648"/>
        <function-ref name="getDelay" scoped="" ref="0x40c03728"/>
        <function-ref name="getBackpressure" scoped="" ref="0x40c03808"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40c038e8"/>
        <function-ref name="getTxCount" scoped="" ref="0x40c039c8"/>
        <function-ref name="getNodeTxCount" scoped="" ref="0x40c03aa8"/>
        <function-ref name="getType" scoped="" ref="0x40c03b88"/>
        <function-ref name="getNhBackpressure" scoped="" ref="0x40c03c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="getBackpressure" ref="0x40c2a0c8" loc="16:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <component-ref qname="BcpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="getBackpressure" scoped="" ref="0x40c2a0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c2a6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40c068e0" loc="6:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpC.nc">
      <component-ref qname="BcpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40c068e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40c06ab8"/>
        <function-ref name="stop" scoped="" ref="0x40c06b98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c22890" loc="17:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpForwardingEngineP.nc">
      <component-ref qname="BcpForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c22890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c22a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x40c1f010" loc="29:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpForwardingEngineP.nc">
      <component-ref qname="BcpForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x40c1f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x40c1f1e8"/>
        <function-ref name="setRoot" scoped="" ref="0x40c1f2c8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x40c1f3a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c22128" loc="16:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpForwardingEngineP.nc">
      <component-ref qname="BcpForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c22128"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c22300"/>
        <function-ref name="getPayload" scoped="" ref="0x40c223e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c224c0"/>
        <function-ref name="cancel" scoped="" ref="0x40c225a0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c22680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x40c24010" loc="11:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpForwardingEngineP.nc">
      <component-ref qname="BcpForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x40c24010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40c241e8"/>
        <function-ref name="setOrigin" scoped="" ref="0x40c242c8"/>
        <function-ref name="setType" scoped="" ref="0x40c243a8"/>
        <function-ref name="getOrigin" scoped="" ref="0x40c24488"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40c24568"/>
        <function-ref name="getType" scoped="" ref="0x40c24648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40c25870" loc="10:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpForwardingEngineP.nc">
      <component-ref qname="BcpForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40c25870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c25a48"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c25b28"/>
        <function-ref name="getPayload" scoped="" ref="0x40c25c08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c25ce8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c25dc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SnoopPool" ref="0x40c3ba60" loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpForwardingEngineP.nc">
      <component-ref qname="BcpForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopPool" scoped="" ref="0x40c3ba60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
            <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c39b50"/>
        <function-ref name="maxSize" scoped="" ref="0x40c39568"/>
        <function-ref name="empty" scoped="" ref="0x40c390b8"/>
        <function-ref name="put" scoped="" ref="0x40c397c0"/>
        <function-ref name="size" scoped="" ref="0x40c39310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c28da0" loc="8:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpForwardingEngineP.nc">
      <component-ref qname="BcpForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c28da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c25010"/>
        <function-ref name="getPayload" scoped="" ref="0x40c250f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c251d0"/>
        <function-ref name="cancel" scoped="" ref="0x40c252b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c25390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x40c50e88" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpForwardingEngineP.nc">
      <component-ref qname="BcpForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x40c50e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c4e070"/>
        <function-ref name="stopDone" scoped="" ref="0x40c4e150"/>
        <function-ref name="start" scoped="" ref="0x40c4e230"/>
        <function-ref name="stop" scoped="" ref="0x40c4e310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BcpDebugIF" ref="0x40c4c858" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpForwardingEngineP.nc">
      <component-ref qname="BcpForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BcpDebugIF" scoped="" ref="0x40c4c858"/></type-interface>
      <instance>
        <interfacedef-ref qname="BcpDebugIF"/>
      </instance>
      <interface-functions>
        <function-ref name="reportBackpressure" scoped="" ref="0x40c4ca30"/>
        <function-ref name="reportError" scoped="" ref="0x40c4cb10"/>
        <function-ref name="reportLinkRate" scoped="" ref="0x40c4cbf0"/>
        <function-ref name="reportValues" scoped="" ref="0x40c4ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40c21090" loc="19:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpForwardingEngineP.nc">
      <component-ref qname="BcpForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40c21090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c21268"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c21348"/>
        <function-ref name="getPayload" scoped="" ref="0x40c21428"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c21508"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c215e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataPacketAcknowledgements" ref="0x40c21930" loc="20:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpForwardingEngineP.nc">
      <component-ref qname="BcpForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataPacketAcknowledgements" scoped="" ref="0x40c21930"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40c21b88"/>
        <function-ref name="noAck" scoped="" ref="0x40c21c68"/>
        <function-ref name="wasAcked" scoped="" ref="0x40c21d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c285f8" loc="6:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpForwardingEngineP.nc">
      <component-ref qname="BcpForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c285f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c287d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40c20010" loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpForwardingEngineP.nc">
      <component-ref qname="BcpForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c20010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40c201e8"/>
        <function-ref name="getMetadata" scoped="" ref="0x40c202c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="txRetryTimer" ref="0x40c58bb8" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpForwardingEngineP.nc">
      <component-ref qname="BcpForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="txRetryTimer" scoped="" ref="0x40c58bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033ac60"/>
            <typename><typedef-ref name="TMilli" ref="0x4033ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c506a8"/>
        <function-ref name="fired" scoped="" ref="0x40c51948"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40c50068"/>
        <function-ref name="isOneShot" scoped="" ref="0x40c51df8"/>
        <function-ref name="getdt" scoped="" ref="0x40c50b58"/>
        <function-ref name="gett0" scoped="" ref="0x40c50900"/>
        <function-ref name="isRunning" scoped="" ref="0x40c51ba0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40c511f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40c50388"/>
        <function-ref name="startOneShot" scoped="" ref="0x40c51470"/>
        <function-ref name="stop" scoped="" ref="0x40c516f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSend" ref="0x40c204e0" loc="26:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpForwardingEngineP.nc">
      <component-ref qname="BcpForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSend" scoped="" ref="0x40c204e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c206b8"/>
        <function-ref name="getPayload" scoped="" ref="0x40c20798"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c20878"/>
        <function-ref name="cancel" scoped="" ref="0x40c20958"/>
        <function-ref name="sendDone" scoped="" ref="0x40c20a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SnoopQueue" ref="0x40c31340" loc="34:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpForwardingEngineP.nc">
      <component-ref qname="BcpForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopQueue" scoped="" ref="0x40c31340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
              <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x40c36088"/>
        <function-ref name="enqueue" scoped="" ref="0x40c36768"/>
        <function-ref name="element" scoped="" ref="0x40c36ab8"/>
        <function-ref name="maxSize" scoped="" ref="0x40c31e18"/>
        <function-ref name="dequeue" scoped="" ref="0x40c363f8"/>
        <function-ref name="empty" scoped="" ref="0x40c31968"/>
        <function-ref name="size" scoped="" ref="0x40c31bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c25518" loc="9:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpForwardingEngineP.nc">
      <component-ref qname="BcpForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c25518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c256f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendBeaconTask" ref="0x40c60468" loc="238:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpForwardingEngineP.nc">
      <component-ref qname="BcpForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendBeaconTask" scoped="" ref="0x40c60468"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40c60640"/>
        <function-ref name="runTask" scoped="" ref="0x40c60720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDataTask" ref="0x40c85920" loc="315:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpForwardingEngineP.nc">
      <component-ref qname="BcpForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDataTask" scoped="" ref="0x40c85920"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40c85af8"/>
        <function-ref name="runTask" scoped="" ref="0x40c85bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendStack" ref="0x40c3a3a0" loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpForwardingEngineP.nc">
      <component-ref qname="BcpForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendStack" scoped="" ref="0x40c3a3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Stack"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:20" alignment="I:1"><struct-ref ref="0x40c095a8"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x40c099b0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="top" scoped="" ref="0x40c420f0"/>
        <function-ref name="pushTop" scoped="" ref="0x40c42eb0"/>
        <function-ref name="pushBottom" scoped="" ref="0x40c3b220"/>
        <function-ref name="element" scoped="" ref="0x40c3b570"/>
        <function-ref name="popBottom" scoped="" ref="0x40c42b40"/>
        <function-ref name="popTop" scoped="" ref="0x40c42460"/>
        <function-ref name="maxSize" scoped="" ref="0x40c3ae78"/>
        <function-ref name="bottom" scoped="" ref="0x40c427d0"/>
        <function-ref name="empty" scoped="" ref="0x40c3a9c8"/>
        <function-ref name="size" scoped="" ref="0x40c3ac20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconTimer" ref="0x40c35010" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpForwardingEngineP.nc">
      <component-ref qname="BcpForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconTimer" scoped="" ref="0x40c35010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033ac60"/>
            <typename><typedef-ref name="TMilli" ref="0x4033ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c32b00"/>
        <function-ref name="fired" scoped="" ref="0x40c35d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40c324c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40c32268"/>
        <function-ref name="getdt" scoped="" ref="0x40c5a010"/>
        <function-ref name="gett0" scoped="" ref="0x40c32d58"/>
        <function-ref name="isRunning" scoped="" ref="0x40c32010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40c35638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40c327e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40c358b8"/>
        <function-ref name="stop" scoped="" ref="0x40c35b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMDataPacket" ref="0x40c59d10" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpForwardingEngineP.nc">
      <component-ref qname="BcpForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMDataPacket" scoped="" ref="0x40c59d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40c58010"/>
        <function-ref name="source" scoped="" ref="0x40c580f0"/>
        <function-ref name="address" scoped="" ref="0x40c581d0"/>
        <function-ref name="destination" scoped="" ref="0x40c582b0"/>
        <function-ref name="setSource" scoped="" ref="0x40c58390"/>
        <function-ref name="setDestination" scoped="" ref="0x40c58470"/>
        <function-ref name="type" scoped="" ref="0x40c58550"/>
        <function-ref name="setType" scoped="" ref="0x40c58630"/>
        <function-ref name="isForMe" scoped="" ref="0x40c58710"/>
        <function-ref name="setGroup" scoped="" ref="0x40c587f0"/>
        <function-ref name="localGroup" scoped="" ref="0x40c588d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BcpPacket" ref="0x40c247e8" loc="12:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpForwardingEngineP.nc">
      <component-ref qname="BcpForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BcpPacket" scoped="" ref="0x40c247e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BcpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40c249c0"/>
        <function-ref name="getHopCount" scoped="" ref="0x40c24aa0"/>
        <function-ref name="getBCPPktType" scoped="" ref="0x40c24b80"/>
        <function-ref name="setOrigin" scoped="" ref="0x40c24c60"/>
        <function-ref name="setType" scoped="" ref="0x40c24d40"/>
        <function-ref name="getOrigin" scoped="" ref="0x40c24e20"/>
        <function-ref name="getDelay" scoped="" ref="0x40c24f00"/>
        <function-ref name="getBackpressure" scoped="" ref="0x40c23010"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40c230f0"/>
        <function-ref name="getTxCount" scoped="" ref="0x40c231d0"/>
        <function-ref name="getNodeTxCount" scoped="" ref="0x40c232b0"/>
        <function-ref name="getType" scoped="" ref="0x40c23390"/>
        <function-ref name="getNhBackpressure" scoped="" ref="0x40c23470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="getBackpressure" ref="0x40c237f0" loc="13:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpForwardingEngineP.nc">
      <component-ref qname="BcpForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="getBackpressure" scoped="" ref="0x40c237f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c23e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayPacketTimer" ref="0x40c4e620" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpForwardingEngineP.nc">
      <component-ref qname="BcpForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelayPacketTimer" scoped="" ref="0x40c4e620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033ac60"/>
            <typename><typedef-ref name="TMilli" ref="0x4033ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c4c130"/>
        <function-ref name="fired" scoped="" ref="0x40c4d3c8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40c4dad0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40c4d878"/>
        <function-ref name="getdt" scoped="" ref="0x40c4c5e0"/>
        <function-ref name="gett0" scoped="" ref="0x40c4c388"/>
        <function-ref name="isRunning" scoped="" ref="0x40c4d620"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40c4ec48"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40c4ddf0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40c4eec8"/>
        <function-ref name="stop" scoped="" ref="0x40c4d170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="QEntryPool" ref="0x40c1adb8" loc="30:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpForwardingEngineP.nc">
      <component-ref qname="BcpForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QEntryPool" scoped="" ref="0x40c1adb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:20" alignment="I:1"><struct-ref ref="0x40c095a8"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40c099b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c1ee88"/>
        <function-ref name="maxSize" scoped="" ref="0x40c1e8a0"/>
        <function-ref name="empty" scoped="" ref="0x40c1e3f0"/>
        <function-ref name="put" scoped="" ref="0x40c1eaf8"/>
        <function-ref name="size" scoped="" ref="0x40c1e648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconReceive" ref="0x40c20c68" loc="27:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpForwardingEngineP.nc">
      <component-ref qname="BcpForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconReceive" scoped="" ref="0x40c20c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c20e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40c28978" loc="7:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpForwardingEngineP.nc">
      <component-ref qname="BcpForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40c28978"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40c28b50"/>
        <function-ref name="stop" scoped="" ref="0x40c28c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x40c22c68" loc="18:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpForwardingEngineP.nc">
      <component-ref qname="BcpForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSnoop" scoped="" ref="0x40c22c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c22e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MessagePool" ref="0x40c1d3f0" loc="31:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpForwardingEngineP.nc">
      <component-ref qname="BcpForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MessagePool" scoped="" ref="0x40c1d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
            <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c434e0"/>
        <function-ref name="maxSize" scoped="" ref="0x40c1dec8"/>
        <function-ref name="empty" scoped="" ref="0x40c1da18"/>
        <function-ref name="put" scoped="" ref="0x40c43150"/>
        <function-ref name="size" scoped="" ref="0x40c1dc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouterForwarderIF" ref="0x40c59120" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpForwardingEngineP.nc">
      <component-ref qname="BcpForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouterForwarderIF" scoped="" ref="0x40c59120"/></type-interface>
      <instance>
        <interfacedef-ref qname="BcpRouterForwarderIF"/>
      </instance>
      <interface-functions>
        <function-ref name="getLinkRate" scoped="" ref="0x40c592f8"/>
        <function-ref name="setNotifyBurstyLinkNeighbor" scoped="" ref="0x40c593d8"/>
        <function-ref name="txNoAck" scoped="" ref="0x40c594b8"/>
        <function-ref name="txAck" scoped="" ref="0x40c59598"/>
        <function-ref name="updateNeighborBackpressure" scoped="" ref="0x40c59678"/>
        <function-ref name="updateRouting" scoped="" ref="0x40c59758"/>
        <function-ref name="updateNeighborSnoop" scoped="" ref="0x40c59838"/>
        <function-ref name="updateLinkSuccess" scoped="" ref="0x40c59918"/>
        <function-ref name="updateLinkRate" scoped="" ref="0x40c599f8"/>
        <function-ref name="setNextHopAddress" scoped="" ref="0x40c59ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="snoopHandlerTask" ref="0x40c5eea0" loc="268:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpForwardingEngineP.nc">
      <component-ref qname="BcpForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="snoopHandlerTask" scoped="" ref="0x40c5eea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40c5d0c0"/>
        <function-ref name="runTask" scoped="" ref="0x40c5d1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x40d07380" loc="5:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRoutingEngineP.nc">
      <component-ref qname="BcpRoutingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x40d07380"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x40d07558"/>
        <function-ref name="setRoot" scoped="" ref="0x40d07638"/>
        <function-ref name="unsetRoot" scoped="" ref="0x40d07718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlacklistTimer" ref="0x40d06218" loc="10:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRoutingEngineP.nc">
      <component-ref qname="BcpRoutingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlacklistTimer" scoped="" ref="0x40d06218"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033ac60"/>
            <typename><typedef-ref name="TMilli" ref="0x4033ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d05d58"/>
        <function-ref name="fired" scoped="" ref="0x40d05010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40d05718"/>
        <function-ref name="isOneShot" scoped="" ref="0x40d054c0"/>
        <function-ref name="getdt" scoped="" ref="0x40d04268"/>
        <function-ref name="gett0" scoped="" ref="0x40d04010"/>
        <function-ref name="isRunning" scoped="" ref="0x40d05268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40d06840"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40d05a38"/>
        <function-ref name="startOneShot" scoped="" ref="0x40d06ac0"/>
        <function-ref name="stop" scoped="" ref="0x40d06d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BcpDebugIF" ref="0x40d044e0" loc="11:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRoutingEngineP.nc">
      <component-ref qname="BcpRoutingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BcpDebugIF" scoped="" ref="0x40d044e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BcpDebugIF"/>
      </instance>
      <interface-functions>
        <function-ref name="reportBackpressure" scoped="" ref="0x40d046b8"/>
        <function-ref name="reportError" scoped="" ref="0x40d04798"/>
        <function-ref name="reportLinkRate" scoped="" ref="0x40d04878"/>
        <function-ref name="reportValues" scoped="" ref="0x40d04958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40d07ce8" loc="7:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRoutingEngineP.nc">
      <component-ref qname="BcpRoutingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40d07ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d07ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RouterForwarderIF" ref="0x40d0a7c0" loc="4:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRoutingEngineP.nc">
      <component-ref qname="BcpRoutingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouterForwarderIF" scoped="" ref="0x40d0a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BcpRouterForwarderIF"/>
      </instance>
      <interface-functions>
        <function-ref name="getLinkRate" scoped="" ref="0x40d0a998"/>
        <function-ref name="setNotifyBurstyLinkNeighbor" scoped="" ref="0x40d0aa78"/>
        <function-ref name="txNoAck" scoped="" ref="0x40d0ab58"/>
        <function-ref name="txAck" scoped="" ref="0x40d0ac38"/>
        <function-ref name="updateNeighborBackpressure" scoped="" ref="0x40d0ad18"/>
        <function-ref name="updateRouting" scoped="" ref="0x40d0adf8"/>
        <function-ref name="updateNeighborSnoop" scoped="" ref="0x40d0aed8"/>
        <function-ref name="updateLinkSuccess" scoped="" ref="0x40d07010"/>
        <function-ref name="updateLinkRate" scoped="" ref="0x40d070f0"/>
        <function-ref name="setNextHopAddress" scoped="" ref="0x40d071d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40d078c0" loc="6:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRoutingEngineP.nc">
      <component-ref qname="BcpRoutingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40d078c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d07a98"/>
        <function-ref name="stop" scoped="" ref="0x40d07b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x40d083d0" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolC.nc">
      <component-ref qname="BcpC.MessagePoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x40d083d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
            <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d284c0"/>
        <function-ref name="maxSize" scoped="" ref="0x40d08ea8"/>
        <function-ref name="empty" scoped="" ref="0x40d089f8"/>
        <function-ref name="put" scoped="" ref="0x40d28130"/>
        <function-ref name="size" scoped="" ref="0x40d08c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x413663b8" loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="BcpC.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x413663b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
            <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x413654a0"/>
        <function-ref name="maxSize" scoped="" ref="0x41366e90"/>
        <function-ref name="empty" scoped="" ref="0x413669e0"/>
        <function-ref name="put" scoped="" ref="0x41365110"/>
        <function-ref name="size" scoped="" ref="0x41366c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41366010" loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="BcpC.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41366010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x413661e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x40d42828" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolC.nc">
      <component-ref qname="BcpC.QEntryPoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x40d42828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:20" alignment="I:1"><struct-ref ref="0x40c095a8"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40c099b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d408f8"/>
        <function-ref name="maxSize" scoped="" ref="0x40d40310"/>
        <function-ref name="empty" scoped="" ref="0x40d42e50"/>
        <function-ref name="put" scoped="" ref="0x40d40568"/>
        <function-ref name="size" scoped="" ref="0x40d400b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x413a5b00" loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="BcpC.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x413a5b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:20" alignment="I:1"><struct-ref ref="0x40c095a8"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40c099b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x413a4c78"/>
        <function-ref name="maxSize" scoped="" ref="0x413a4690"/>
        <function-ref name="empty" scoped="" ref="0x413a41e0"/>
        <function-ref name="put" scoped="" ref="0x413a48e8"/>
        <function-ref name="size" scoped="" ref="0x413a4438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x413a5758" loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="BcpC.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x413a5758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x413a5930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x40d3fb40" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolC.nc">
      <component-ref qname="BcpC.SnoopPoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x40d3fb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
            <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d3ec78"/>
        <function-ref name="maxSize" scoped="" ref="0x40d3e690"/>
        <function-ref name="empty" scoped="" ref="0x40d3e1e0"/>
        <function-ref name="put" scoped="" ref="0x40d3e8e8"/>
        <function-ref name="size" scoped="" ref="0x40d3e438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x4139a3b8" loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="BcpC.SnoopPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x4139a3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
            <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x413994a0"/>
        <function-ref name="maxSize" scoped="" ref="0x4139ae90"/>
        <function-ref name="empty" scoped="" ref="0x4139a9e0"/>
        <function-ref name="put" scoped="" ref="0x41399110"/>
        <function-ref name="size" scoped="" ref="0x4139ac38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4139a010" loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="BcpC.SnoopPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4139a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4139a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Stack" ref="0x40d6b940" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/StackC.nc">
      <component-ref qname="BcpC.SendStack"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stack" scoped="" ref="0x40d6b940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Stack"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:20" alignment="I:1"><struct-ref ref="0x40c095a8"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x40c099b0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="top" scoped="" ref="0x40d6a718"/>
        <function-ref name="pushTop" scoped="" ref="0x40d564e8"/>
        <function-ref name="pushBottom" scoped="" ref="0x40d56838"/>
        <function-ref name="element" scoped="" ref="0x40d56b88"/>
        <function-ref name="popBottom" scoped="" ref="0x40d56178"/>
        <function-ref name="popTop" scoped="" ref="0x40d6aa88"/>
        <function-ref name="maxSize" scoped="" ref="0x40d6a4c0"/>
        <function-ref name="bottom" scoped="" ref="0x40d6adf8"/>
        <function-ref name="empty" scoped="" ref="0x40d6a010"/>
        <function-ref name="size" scoped="" ref="0x40d6a268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x40d836a8" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/system/QueueC.nc">
      <component-ref qname="BcpC.SnoopQueue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40d836a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
              <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x40d823e8"/>
        <function-ref name="enqueue" scoped="" ref="0x40d82ac8"/>
        <function-ref name="element" scoped="" ref="0x40d82e18"/>
        <function-ref name="maxSize" scoped="" ref="0x40d82190"/>
        <function-ref name="dequeue" scoped="" ref="0x40d82758"/>
        <function-ref name="empty" scoped="" ref="0x40d83cd0"/>
        <function-ref name="size" scoped="" ref="0x40d83f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40d73cc8" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="BcpC.RoutingBeaconTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d73cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033ac60"/>
            <typename><typedef-ref name="TMilli" ref="0x4033ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d717c8"/>
        <function-ref name="fired" scoped="" ref="0x40d72a68"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40d71188"/>
        <function-ref name="isOneShot" scoped="" ref="0x40d72f18"/>
        <function-ref name="getdt" scoped="" ref="0x40d71c78"/>
        <function-ref name="gett0" scoped="" ref="0x40d71a20"/>
        <function-ref name="isRunning" scoped="" ref="0x40d72cc0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40d72310"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40d714a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40d72590"/>
        <function-ref name="stop" scoped="" ref="0x40d72810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40d70ac8" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="BcpC.txRetryTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d70ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033ac60"/>
            <typename><typedef-ref name="TMilli" ref="0x4033ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d6d650"/>
        <function-ref name="fired" scoped="" ref="0x40d6f860"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40d6d010"/>
        <function-ref name="isOneShot" scoped="" ref="0x40d6fd10"/>
        <function-ref name="getdt" scoped="" ref="0x40d6db00"/>
        <function-ref name="gett0" scoped="" ref="0x40d6d8a8"/>
        <function-ref name="isRunning" scoped="" ref="0x40d6fab8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40d6f108"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40d6d330"/>
        <function-ref name="startOneShot" scoped="" ref="0x40d6f388"/>
        <function-ref name="stop" scoped="" ref="0x40d6f608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40d9c930" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="BcpC.DelayPacketTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d9c930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033ac60"/>
            <typename><typedef-ref name="TMilli" ref="0x4033ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d9a4c8"/>
        <function-ref name="fired" scoped="" ref="0x40d9b768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40d9be70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40d9bc18"/>
        <function-ref name="getdt" scoped="" ref="0x40d9a978"/>
        <function-ref name="gett0" scoped="" ref="0x40d9a720"/>
        <function-ref name="isRunning" scoped="" ref="0x40d9b9c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40d9b010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40d9a1a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40d9b290"/>
        <function-ref name="stop" scoped="" ref="0x40d9b510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40d96cc0" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="BcpC.DataSend"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40d96cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d96e98"/>
        <function-ref name="getPayload" scoped="" ref="0x40db5010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40db50f0"/>
        <function-ref name="cancel" scoped="" ref="0x40db51d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40db52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40db53f0" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="BcpC.DataSend"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40db53f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40db55c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40db56a8"/>
        <function-ref name="getPayload" scoped="" ref="0x40db5788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40db5868"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40db5948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40db5a88" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="BcpC.DataSend"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40db5a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40db5c60"/>
        <function-ref name="source" scoped="" ref="0x40db5d40"/>
        <function-ref name="address" scoped="" ref="0x40db5e20"/>
        <function-ref name="destination" scoped="" ref="0x40db5f00"/>
        <function-ref name="setSource" scoped="" ref="0x40de6010"/>
        <function-ref name="setDestination" scoped="" ref="0x40de60f0"/>
        <function-ref name="type" scoped="" ref="0x40de61d0"/>
        <function-ref name="setType" scoped="" ref="0x40de62b0"/>
        <function-ref name="isForMe" scoped="" ref="0x40de6390"/>
        <function-ref name="setGroup" scoped="" ref="0x40de6470"/>
        <function-ref name="localGroup" scoped="" ref="0x40de6550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40de66b0" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="BcpC.DataSend"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40de66b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40de6888"/>
        <function-ref name="noAck" scoped="" ref="0x40de6968"/>
        <function-ref name="wasAcked" scoped="" ref="0x40de6a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x413c5328" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="BcpC.DataSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x413c5328"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413c5500"/>
        <function-ref name="getPayload" scoped="" ref="0x413c55e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413c56c0"/>
        <function-ref name="cancel" scoped="" ref="0x413c57a0"/>
        <function-ref name="sendDone" scoped="" ref="0x413c5880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x413c59f0" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="BcpC.DataSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x413c59f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413c5bc8"/>
        <function-ref name="getPayload" scoped="" ref="0x413c5ca8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413c5d88"/>
        <function-ref name="cancel" scoped="" ref="0x413c5e68"/>
        <function-ref name="sendDone" scoped="" ref="0x413c4010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x413c4150" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="BcpC.DataSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x413c4150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x413c4328"/>
        <function-ref name="source" scoped="" ref="0x413c4408"/>
        <function-ref name="address" scoped="" ref="0x413c44e8"/>
        <function-ref name="destination" scoped="" ref="0x413c45c8"/>
        <function-ref name="setSource" scoped="" ref="0x413c46a8"/>
        <function-ref name="setDestination" scoped="" ref="0x413c4788"/>
        <function-ref name="type" scoped="" ref="0x413c4868"/>
        <function-ref name="setType" scoped="" ref="0x413c4948"/>
        <function-ref name="isForMe" scoped="" ref="0x413c4a28"/>
        <function-ref name="setGroup" scoped="" ref="0x413c4b08"/>
        <function-ref name="localGroup" scoped="" ref="0x413c4be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40db44c0" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40db44c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40db4698"/>
        <function-ref name="getPayload" scoped="" ref="0x40db4778"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40db4858"/>
        <function-ref name="cancel" scoped="" ref="0x40db4938"/>
        <function-ref name="sendDone" scoped="" ref="0x40db4a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40dbbb48" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40dbbb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403c79f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40dbbd30"/>
        <function-ref name="getPayload" scoped="" ref="0x40dbbe10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40dbbef0"/>
        <function-ref name="cancel" scoped="" ref="0x40dba010"/>
        <function-ref name="sendDone" scoped="" ref="0x40dba0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40dbb3d8" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40dbb3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40dbb5c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40dbb6a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40dbb780"/>
        <function-ref name="cancel" scoped="" ref="0x40dbb860"/>
        <function-ref name="sendDone" scoped="" ref="0x40dbb940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40dbae08" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40dbae08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40db9010"/>
        <function-ref name="payloadLength" scoped="" ref="0x40db90f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40db91d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40db92b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40db9390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x40db9510" loc="161:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x40db9510"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40db96e8"/>
        <function-ref name="runTask" scoped="" ref="0x40db97c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x40db9948" loc="118:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x40db9948"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40db9b20"/>
        <function-ref name="runTask" scoped="" ref="0x40db9c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40dba230" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40dba230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40dba408"/>
        <function-ref name="source" scoped="" ref="0x40dba4e8"/>
        <function-ref name="address" scoped="" ref="0x40dba5c8"/>
        <function-ref name="destination" scoped="" ref="0x40dba6a8"/>
        <function-ref name="setSource" scoped="" ref="0x40dba788"/>
        <function-ref name="setDestination" scoped="" ref="0x40dba868"/>
        <function-ref name="type" scoped="" ref="0x40dba948"/>
        <function-ref name="setType" scoped="" ref="0x40dbaa28"/>
        <function-ref name="isForMe" scoped="" ref="0x40dbab08"/>
        <function-ref name="setGroup" scoped="" ref="0x40dbabe8"/>
        <function-ref name="localGroup" scoped="" ref="0x40dbacc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40de3430" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="BcpC.DataReceive"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40de3430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40de3608"/>
        <function-ref name="payloadLength" scoped="" ref="0x40de36e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40de37c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40de38a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40de3988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40de3118" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="BcpC.DataReceive"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40de3118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40de32f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40de3ac8" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="BcpC.DataReceive"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40de3ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40de3ca0"/>
        <function-ref name="source" scoped="" ref="0x40de3d80"/>
        <function-ref name="address" scoped="" ref="0x40de3e60"/>
        <function-ref name="destination" scoped="" ref="0x40ddf010"/>
        <function-ref name="setSource" scoped="" ref="0x40ddf0f0"/>
        <function-ref name="setDestination" scoped="" ref="0x40ddf1d0"/>
        <function-ref name="type" scoped="" ref="0x40ddf2b0"/>
        <function-ref name="setType" scoped="" ref="0x40ddf390"/>
        <function-ref name="isForMe" scoped="" ref="0x40ddf470"/>
        <function-ref name="setGroup" scoped="" ref="0x40ddf550"/>
        <function-ref name="localGroup" scoped="" ref="0x40ddf630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40dddef0" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMSnooperC.nc">
      <component-ref qname="BcpC.DataSnoop"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40dddef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ddc0e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ddc1c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40ddc2a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ddc380"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ddc460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40dddbd8" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMSnooperC.nc">
      <component-ref qname="BcpC.DataSnoop"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40dddbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ddddb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40ddc5a0" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMSnooperC.nc">
      <component-ref qname="BcpC.DataSnoop"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40ddc5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40ddc778"/>
        <function-ref name="source" scoped="" ref="0x40ddc858"/>
        <function-ref name="address" scoped="" ref="0x40ddc938"/>
        <function-ref name="destination" scoped="" ref="0x40ddca18"/>
        <function-ref name="setSource" scoped="" ref="0x40ddcaf8"/>
        <function-ref name="setDestination" scoped="" ref="0x40ddcbd8"/>
        <function-ref name="type" scoped="" ref="0x40ddccb8"/>
        <function-ref name="setType" scoped="" ref="0x40ddcd98"/>
        <function-ref name="isForMe" scoped="" ref="0x40ddce78"/>
        <function-ref name="setGroup" scoped="" ref="0x40dd9010"/>
        <function-ref name="localGroup" scoped="" ref="0x40dd90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40dd81f8" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="BcpC.BeaconSend"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40dd81f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40dd83d0"/>
        <function-ref name="getPayload" scoped="" ref="0x40dd84b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40dd8590"/>
        <function-ref name="cancel" scoped="" ref="0x40dd8670"/>
        <function-ref name="sendDone" scoped="" ref="0x40dd8750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40dd8890" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="BcpC.BeaconSend"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40dd8890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40dd8a68"/>
        <function-ref name="payloadLength" scoped="" ref="0x40dd8b48"/>
        <function-ref name="getPayload" scoped="" ref="0x40dd8c28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40dd8d08"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40dd8de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40dd8f28" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="BcpC.BeaconSend"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40dd8f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40dd7110"/>
        <function-ref name="source" scoped="" ref="0x40dd71f0"/>
        <function-ref name="address" scoped="" ref="0x40dd72d0"/>
        <function-ref name="destination" scoped="" ref="0x40dd73b0"/>
        <function-ref name="setSource" scoped="" ref="0x40dd7490"/>
        <function-ref name="setDestination" scoped="" ref="0x40dd7570"/>
        <function-ref name="type" scoped="" ref="0x40dd7650"/>
        <function-ref name="setType" scoped="" ref="0x40dd7730"/>
        <function-ref name="isForMe" scoped="" ref="0x40dd7810"/>
        <function-ref name="setGroup" scoped="" ref="0x40dd78f0"/>
        <function-ref name="localGroup" scoped="" ref="0x40dd79d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40dd7b30" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="BcpC.BeaconSend"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40dd7b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40dd7d08"/>
        <function-ref name="noAck" scoped="" ref="0x40dd7de8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40dd7ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x413e03b0" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="BcpC.BeaconSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x413e03b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413e0588"/>
        <function-ref name="getPayload" scoped="" ref="0x413e0668"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413e0748"/>
        <function-ref name="cancel" scoped="" ref="0x413e0828"/>
        <function-ref name="sendDone" scoped="" ref="0x413e0908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x413e0a78" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="BcpC.BeaconSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x413e0a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413e0c50"/>
        <function-ref name="getPayload" scoped="" ref="0x413e0d30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413e0e10"/>
        <function-ref name="cancel" scoped="" ref="0x413e0ef0"/>
        <function-ref name="sendDone" scoped="" ref="0x413df010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x413df150" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="BcpC.BeaconSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x413df150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x413df328"/>
        <function-ref name="source" scoped="" ref="0x413df408"/>
        <function-ref name="address" scoped="" ref="0x413df4e8"/>
        <function-ref name="destination" scoped="" ref="0x413df5c8"/>
        <function-ref name="setSource" scoped="" ref="0x413df6a8"/>
        <function-ref name="setDestination" scoped="" ref="0x413df788"/>
        <function-ref name="type" scoped="" ref="0x413df868"/>
        <function-ref name="setType" scoped="" ref="0x413df948"/>
        <function-ref name="isForMe" scoped="" ref="0x413dfa28"/>
        <function-ref name="setGroup" scoped="" ref="0x413dfb08"/>
        <function-ref name="localGroup" scoped="" ref="0x413dfbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40dd5510" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="BcpC.BeaconReceive"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40dd5510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40dd56e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40dd57c8"/>
        <function-ref name="getPayload" scoped="" ref="0x40dd58a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40dd5988"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40dd5a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40dd51f8" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="BcpC.BeaconReceive"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40dd51f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40dd53d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40dd5ba8" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="BcpC.BeaconReceive"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40dd5ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40dd5d80"/>
        <function-ref name="source" scoped="" ref="0x40dd5e60"/>
        <function-ref name="address" scoped="" ref="0x40dd4010"/>
        <function-ref name="destination" scoped="" ref="0x40dd40f0"/>
        <function-ref name="setSource" scoped="" ref="0x40dd41d0"/>
        <function-ref name="setDestination" scoped="" ref="0x40dd42b0"/>
        <function-ref name="type" scoped="" ref="0x40dd4390"/>
        <function-ref name="setType" scoped="" ref="0x40dd4470"/>
        <function-ref name="isForMe" scoped="" ref="0x40dd4550"/>
        <function-ref name="setGroup" scoped="" ref="0x40dd4630"/>
        <function-ref name="localGroup" scoped="" ref="0x40dd4710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40df5760" loc="10:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRateControllerC.nc">
      <component-ref qname="BcpRateControllerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40df5760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40df5938"/>
        <function-ref name="getPayload" scoped="" ref="0x40df5a18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40df5af8"/>
        <function-ref name="cancel" scoped="" ref="0x40df5bd8"/>
        <function-ref name="sendDone" scoped="" ref="0x40df5cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40df9e60" loc="4:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRateControllerC.nc">
      <component-ref qname="BcpRateControllerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40df9e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40df6050"/>
        <function-ref name="getPayload" scoped="" ref="0x40df6130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40df6210"/>
        <function-ref name="cancel" scoped="" ref="0x40df62f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40df63d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BcpDebugIF" ref="0x40df5e60" loc="11:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRateControllerC.nc">
      <component-ref qname="BcpRateControllerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BcpDebugIF" scoped="" ref="0x40df5e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BcpDebugIF"/>
      </instance>
      <interface-functions>
        <function-ref name="reportBackpressure" scoped="" ref="0x40df4050"/>
        <function-ref name="reportError" scoped="" ref="0x40df4130"/>
        <function-ref name="reportLinkRate" scoped="" ref="0x40df4210"/>
        <function-ref name="reportValues" scoped="" ref="0x40df42f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="getBackpressure" ref="0x40df6e78" loc="9:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRateControllerC.nc">
      <component-ref qname="BcpRateControllerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="getBackpressure" scoped="" ref="0x40df6e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40df54b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="subPacket" ref="0x40df6620" loc="8:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRateControllerC.nc">
      <component-ref qname="BcpRateControllerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="subPacket" scoped="" ref="0x40df6620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40df67f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40df68d8"/>
        <function-ref name="getPayload" scoped="" ref="0x40df69b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40df6a98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40df6b78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40de7c20" loc="16:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRateControllerP.nc">
      <component-ref qname="BcpRateControllerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40de7c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40de7df8"/>
        <function-ref name="getPayload" scoped="" ref="0x40de7ed8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e18010"/>
        <function-ref name="cancel" scoped="" ref="0x40e180f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40e181d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="exponentialRandom" ref="0x40def0e0" loc="12:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRateControllerP.nc">
      <component-ref qname="BcpRateControllerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="exponentialRandom" scoped="" ref="0x40def0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40def2b8"/>
        <function-ref name="rand32" scoped="" ref="0x40def398"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40df4a58" loc="4:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRateControllerP.nc">
      <component-ref qname="BcpRateControllerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40df4a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40df4c30"/>
        <function-ref name="getPayload" scoped="" ref="0x40df4d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40df4df0"/>
        <function-ref name="cancel" scoped="" ref="0x40df4ed0"/>
        <function-ref name="sendDone" scoped="" ref="0x40df1010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BcpDebugIF" ref="0x40df1208" loc="8:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRateControllerP.nc">
      <component-ref qname="BcpRateControllerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BcpDebugIF" scoped="" ref="0x40df1208"/></type-interface>
      <instance>
        <interfacedef-ref qname="BcpDebugIF"/>
      </instance>
      <interface-functions>
        <function-ref name="reportBackpressure" scoped="" ref="0x40df13e0"/>
        <function-ref name="reportError" scoped="" ref="0x40df14c0"/>
        <function-ref name="reportLinkRate" scoped="" ref="0x40df15a0"/>
        <function-ref name="reportValues" scoped="" ref="0x40df1680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="modPool" ref="0x40def660" loc="13:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRateControllerP.nc">
      <component-ref qname="BcpRateControllerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="modPool" scoped="" ref="0x40def660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
            <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40dee738"/>
        <function-ref name="maxSize" scoped="" ref="0x40dee150"/>
        <function-ref name="empty" scoped="" ref="0x40defc88"/>
        <function-ref name="put" scoped="" ref="0x40dee3a8"/>
        <function-ref name="size" scoped="" ref="0x40defee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="getBackpressure" ref="0x40df00f8" loc="10:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRateControllerP.nc">
      <component-ref qname="BcpRateControllerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="getBackpressure" scoped="" ref="0x40df00f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40df0720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="admissionTimer" ref="0x40dea940" loc="15:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRateControllerP.nc">
      <component-ref qname="BcpRateControllerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="admissionTimer" scoped="" ref="0x40dea940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033ac60"/>
            <typename><typedef-ref name="TMilli" ref="0x4033ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40de74c8"/>
        <function-ref name="fired" scoped="" ref="0x40de8768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40de8e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40de8c18"/>
        <function-ref name="getdt" scoped="" ref="0x40de7978"/>
        <function-ref name="gett0" scoped="" ref="0x40de7720"/>
        <function-ref name="isRunning" scoped="" ref="0x40de89c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40de8010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40de71a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40de8290"/>
        <function-ref name="stop" scoped="" ref="0x40de8510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="modQueue" ref="0x40deec80" loc="14:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRateControllerP.nc">
      <component-ref qname="BcpRateControllerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="modQueue" scoped="" ref="0x40deec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
              <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x40deb9d0"/>
        <function-ref name="enqueue" scoped="" ref="0x40dea0e8"/>
        <function-ref name="element" scoped="" ref="0x40dea438"/>
        <function-ref name="maxSize" scoped="" ref="0x40deb778"/>
        <function-ref name="dequeue" scoped="" ref="0x40debd40"/>
        <function-ref name="empty" scoped="" ref="0x40deb2c8"/>
        <function-ref name="size" scoped="" ref="0x40deb520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="subPacket" ref="0x40df1880" loc="9:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRateControllerP.nc">
      <component-ref qname="BcpRateControllerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="subPacket" scoped="" ref="0x40df1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40df1a58"/>
        <function-ref name="payloadLength" scoped="" ref="0x40df1b38"/>
        <function-ref name="getPayload" scoped="" ref="0x40df1c18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40df1cf8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40df1dd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="setMean" ref="0x40ded6c0" loc="11:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRateControllerP.nc">
      <component-ref qname="BcpRateControllerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="setMean" scoped="" ref="0x40ded6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Set"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="set" scoped="" ref="0x40dedce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40e01c20" loc="2:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/exponentialRandomC.nc">
      <component-ref qname="BcpRateControllerC.exponentialRandom"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40e01c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40e01df8"/>
        <function-ref name="rand32" scoped="" ref="0x40e01ed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="setMean" ref="0x40e25110" loc="3:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/exponentialRandomC.nc">
      <component-ref qname="BcpRateControllerC.exponentialRandom"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="setMean" scoped="" ref="0x40e25110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Set"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="set" scoped="" ref="0x40e25738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x413d02e8" loc="2:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/exponentialRandomM.nc">
      <component-ref qname="BcpRateControllerC.exponentialRandom.exponentialRandomM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x413d02e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x413d04c0"/>
        <function-ref name="rand32" scoped="" ref="0x413d05a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="subRandom" ref="0x413cf080" loc="4:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/exponentialRandomM.nc">
      <component-ref qname="BcpRateControllerC.exponentialRandom.exponentialRandomM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="subRandom" scoped="" ref="0x413cf080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x413cf258"/>
        <function-ref name="rand32" scoped="" ref="0x413cf338"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="setMean" ref="0x413d07b0" loc="3:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/exponentialRandomM.nc">
      <component-ref qname="BcpRateControllerC.exponentialRandom.exponentialRandomM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="setMean" scoped="" ref="0x413d07b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Set"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="set" scoped="" ref="0x413d0dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x40e24828" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolC.nc">
      <component-ref qname="BcpRateControllerC.modPool"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x40e24828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
            <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e238f8"/>
        <function-ref name="maxSize" scoped="" ref="0x40e23310"/>
        <function-ref name="empty" scoped="" ref="0x40e24e50"/>
        <function-ref name="put" scoped="" ref="0x40e23568"/>
        <function-ref name="size" scoped="" ref="0x40e230b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x41414ea0" loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="BcpRateControllerC.modPool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x41414ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
            <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41411010"/>
        <function-ref name="maxSize" scoped="" ref="0x41413988"/>
        <function-ref name="empty" scoped="" ref="0x414134d8"/>
        <function-ref name="put" scoped="" ref="0x41413be0"/>
        <function-ref name="size" scoped="" ref="0x41413730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41414af8" loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="BcpRateControllerC.modPool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41414af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41414cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x40e22ad8" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/system/QueueC.nc">
      <component-ref qname="BcpRateControllerC.modQueue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40e22ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
              <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x40e208e8"/>
        <function-ref name="enqueue" scoped="" ref="0x40e1f010"/>
        <function-ref name="element" scoped="" ref="0x40e1f360"/>
        <function-ref name="maxSize" scoped="" ref="0x40e20690"/>
        <function-ref name="dequeue" scoped="" ref="0x40e20c58"/>
        <function-ref name="empty" scoped="" ref="0x40e201e0"/>
        <function-ref name="size" scoped="" ref="0x40e20438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40e1e1e8" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="BcpRateControllerC.admissionTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e1e1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033ac60"/>
            <typename><typedef-ref name="TMilli" ref="0x4033ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e1dd58"/>
        <function-ref name="fired" scoped="" ref="0x40e1d010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40e1d718"/>
        <function-ref name="isOneShot" scoped="" ref="0x40e1d4c0"/>
        <function-ref name="getdt" scoped="" ref="0x40e1b268"/>
        <function-ref name="gett0" scoped="" ref="0x40e1b010"/>
        <function-ref name="isRunning" scoped="" ref="0x40e1d268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40e1e810"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40e1da38"/>
        <function-ref name="startOneShot" scoped="" ref="0x40e1ea90"/>
        <function-ref name="stop" scoped="" ref="0x40e1ed10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40df7d50" loc="2:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/exponentialRandomC.nc">
      <component-ref qname="BcpCollectionExampleAppC.RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40df7d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40df7f28"/>
        <function-ref name="rand32" scoped="" ref="0x40e4b018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="setMean" ref="0x40e4b228" loc="3:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/exponentialRandomC.nc">
      <component-ref qname="BcpCollectionExampleAppC.RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="setMean" scoped="" ref="0x40e4b228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Set"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="set" scoped="" ref="0x40e4b850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x41403968" loc="2:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/exponentialRandomM.nc">
      <component-ref qname="BcpCollectionExampleAppC.RandomC.exponentialRandomM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x41403968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x41403b40"/>
        <function-ref name="rand32" scoped="" ref="0x41403c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="subRandom" ref="0x414026e0" loc="4:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/exponentialRandomM.nc">
      <component-ref qname="BcpCollectionExampleAppC.RandomC.exponentialRandomM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="subRandom" scoped="" ref="0x414026e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x414028b8"/>
        <function-ref name="rand32" scoped="" ref="0x41402998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="setMean" ref="0x41403e30" loc="3:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/exponentialRandomM.nc">
      <component-ref qname="BcpCollectionExampleAppC.RandomC.exponentialRandomM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="setMean" scoped="" ref="0x41403e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Set"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="set" scoped="" ref="0x41402468"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40e4a470" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="BcpCollectionExampleAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e4a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033ac60"/>
            <typename><typedef-ref name="TMilli" ref="0x4033ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e48010"/>
        <function-ref name="fired" scoped="" ref="0x40e49268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40e49970"/>
        <function-ref name="isOneShot" scoped="" ref="0x40e49718"/>
        <function-ref name="getdt" scoped="" ref="0x40e484c0"/>
        <function-ref name="gett0" scoped="" ref="0x40e48268"/>
        <function-ref name="isRunning" scoped="" ref="0x40e494c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40e4aa98"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40e49c90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40e4ad18"/>
        <function-ref name="stop" scoped="" ref="0x40e49010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40e462c0" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="BcpCollectionExampleAppC.sinkTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e462c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4033ac60"/>
            <typename><typedef-ref name="TMilli" ref="0x4033ae28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e45db0"/>
        <function-ref name="fired" scoped="" ref="0x40e45068"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40e45770"/>
        <function-ref name="isOneShot" scoped="" ref="0x40e45518"/>
        <function-ref name="getdt" scoped="" ref="0x40e442a0"/>
        <function-ref name="gett0" scoped="" ref="0x40e44048"/>
        <function-ref name="isRunning" scoped="" ref="0x40e452c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40e468e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40e45a90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40e46b68"/>
        <function-ref name="stop" scoped="" ref="0x40e46de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartReceive" ref="0x4105f190" loc="3:SafeSerialSendC.nc">
      <component-ref qname="BcpCollectionExampleAppC.SafeSerialSend"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartReceive" scoped="" ref="0x4105f190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4105f368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SafeSerialSendIF" ref="0x41060ae0" loc="2:SafeSerialSendC.nc">
      <component-ref qname="BcpCollectionExampleAppC.SafeSerialSend"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SafeSerialSendIF" scoped="" ref="0x41060ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SafeSerialSendIF"/>
      </instance>
      <interface-functions>
        <function-ref name="queueMessageBuffer" scoped="" ref="0x41060cb8"/>
        <function-ref name="getPayload" scoped="" ref="0x41060d98"/>
        <function-ref name="getMessageBuffer" scoped="" ref="0x41060e78"/>
        <function-ref name="droppedMessageCount" scoped="" ref="0x4105f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4105f4c8" loc="4:SafeSerialSendC.nc">
      <component-ref qname="BcpCollectionExampleAppC.SafeSerialSend"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4105f4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4105f6a0"/>
        <function-ref name="stop" scoped="" ref="0x4105f780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40e36650" loc="11:SafeSerialSendM.nc">
      <component-ref qname="SafeSerialSendM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40e36650"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e36828"/>
        <function-ref name="stop" scoped="" ref="0x40e36908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x40e3c618" loc="5:SafeSerialSendM.nc">
      <component-ref qname="SafeSerialSendM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x40e3c618"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40e3c7f0"/>
        <function-ref name="stopDone" scoped="" ref="0x40e3c8d0"/>
        <function-ref name="start" scoped="" ref="0x40e3c9b0"/>
        <function-ref name="stop" scoped="" ref="0x40e3ca90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x40e39408" loc="8:SafeSerialSendM.nc">
      <component-ref qname="SafeSerialSendM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueue" scoped="" ref="0x40e39408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
              <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x40e38150"/>
        <function-ref name="enqueue" scoped="" ref="0x40e38830"/>
        <function-ref name="element" scoped="" ref="0x40e38b80"/>
        <function-ref name="maxSize" scoped="" ref="0x40e39ee0"/>
        <function-ref name="dequeue" scoped="" ref="0x40e384c0"/>
        <function-ref name="empty" scoped="" ref="0x40e39a30"/>
        <function-ref name="size" scoped="" ref="0x40e39c88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x40e35768" loc="32:SafeSerialSendM.nc">
      <component-ref qname="SafeSerialSendM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x40e35768"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e35940"/>
        <function-ref name="runTask" scoped="" ref="0x40e35a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SafeSerialSendIF" ref="0x40e36010" loc="10:SafeSerialSendM.nc">
      <component-ref qname="SafeSerialSendM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SafeSerialSendIF" scoped="" ref="0x40e36010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SafeSerialSendIF"/>
      </instance>
      <interface-functions>
        <function-ref name="queueMessageBuffer" scoped="" ref="0x40e361e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40e362c8"/>
        <function-ref name="getMessageBuffer" scoped="" ref="0x40e363a8"/>
        <function-ref name="droppedMessageCount" scoped="" ref="0x40e36488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartPacket" ref="0x40e3d128" loc="3:SafeSerialSendM.nc">
      <component-ref qname="SafeSerialSendM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartPacket" scoped="" ref="0x40e3d128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e3d300"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e3d3e0"/>
        <function-ref name="getPayload" scoped="" ref="0x40e3d4c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e3d5a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e3d680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartSend" ref="0x40e40990" loc="2:SafeSerialSendM.nc">
      <component-ref qname="SafeSerialSendM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartSend" scoped="" ref="0x40e40990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e40b68"/>
        <function-ref name="getPayload" scoped="" ref="0x40e40c48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e40d28"/>
        <function-ref name="cancel" scoped="" ref="0x40e40e08"/>
        <function-ref name="sendDone" scoped="" ref="0x40e40ee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartAMPacket" ref="0x40e3d8d8" loc="4:SafeSerialSendM.nc">
      <component-ref qname="SafeSerialSendM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartAMPacket" scoped="" ref="0x40e3d8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40e3dab0"/>
        <function-ref name="source" scoped="" ref="0x40e3db90"/>
        <function-ref name="address" scoped="" ref="0x40e3dc70"/>
        <function-ref name="destination" scoped="" ref="0x40e3dd50"/>
        <function-ref name="setSource" scoped="" ref="0x40e3de30"/>
        <function-ref name="setDestination" scoped="" ref="0x40e3df10"/>
        <function-ref name="type" scoped="" ref="0x40e3c010"/>
        <function-ref name="setType" scoped="" ref="0x40e3c0f0"/>
        <function-ref name="isForMe" scoped="" ref="0x40e3c1d0"/>
        <function-ref name="setGroup" scoped="" ref="0x40e3c2b0"/>
        <function-ref name="localGroup" scoped="" ref="0x40e3c390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MessagePool" ref="0x40e3cda0" loc="7:SafeSerialSendM.nc">
      <component-ref qname="SafeSerialSendM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MessagePool" scoped="" ref="0x40e3cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
            <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e3ae78"/>
        <function-ref name="maxSize" scoped="" ref="0x40e3a890"/>
        <function-ref name="empty" scoped="" ref="0x40e3a3e0"/>
        <function-ref name="put" scoped="" ref="0x40e3aae8"/>
        <function-ref name="size" scoped="" ref="0x40e3a638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x413f84b8" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/system/QueueC.nc">
      <component-ref qname="BcpCollectionExampleAppC.SafeSerialSend.QueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x413f84b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
              <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x413f6268"/>
        <function-ref name="enqueue" scoped="" ref="0x413f6948"/>
        <function-ref name="element" scoped="" ref="0x413f6c98"/>
        <function-ref name="maxSize" scoped="" ref="0x413f6010"/>
        <function-ref name="dequeue" scoped="" ref="0x413f65d8"/>
        <function-ref name="empty" scoped="" ref="0x413f8ae0"/>
        <function-ref name="size" scoped="" ref="0x413f8d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x413f5cc0" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolC.nc">
      <component-ref qname="BcpCollectionExampleAppC.SafeSerialSend.PoolC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x413f5cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
            <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x413f4d90"/>
        <function-ref name="maxSize" scoped="" ref="0x413f47a8"/>
        <function-ref name="empty" scoped="" ref="0x413f42f8"/>
        <function-ref name="put" scoped="" ref="0x413f4a00"/>
        <function-ref name="size" scoped="" ref="0x413f4550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x41431418" loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="BcpCollectionExampleAppC.SafeSerialSend.PoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x41431418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
            <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41430510"/>
        <function-ref name="maxSize" scoped="" ref="0x41431ef0"/>
        <function-ref name="empty" scoped="" ref="0x41431a40"/>
        <function-ref name="put" scoped="" ref="0x41430180"/>
        <function-ref name="size" scoped="" ref="0x41431c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41431070" loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="BcpCollectionExampleAppC.SafeSerialSend.PoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41431070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41431248"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40e52618" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40e52618"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40e527f0"/>
        <function-ref name="stopDone" scoped="" ref="0x40e528d0"/>
        <function-ref name="start" scoped="" ref="0x40e529b0"/>
        <function-ref name="stop" scoped="" ref="0x40e52a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40e52ef0" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40e52ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403c79f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e4f0e0"/>
        <function-ref name="getPayload" scoped="" ref="0x40e4f1c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e4f2a0"/>
        <function-ref name="cancel" scoped="" ref="0x40e4f380"/>
        <function-ref name="sendDone" scoped="" ref="0x40e4f460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40e4fc20" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40e4fc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e4fdf8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e4fed8"/>
        <function-ref name="getPayload" scoped="" ref="0x40e4d010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e4d0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e4d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40e4f8c8" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40e4f8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403c79f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e4faa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40e4c578" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40e4c578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40e4c750"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40e4c830"/>
        <function-ref name="led1On" scoped="" ref="0x40e4c910"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40e4c9f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40e4cad0"/>
        <function-ref name="get" scoped="" ref="0x40e4cbb0"/>
        <function-ref name="led1Off" scoped="" ref="0x40e4cc90"/>
        <function-ref name="led2Off" scoped="" ref="0x40e7f0f0"/>
        <function-ref name="set" scoped="" ref="0x40e4cd70"/>
        <function-ref name="led0On" scoped="" ref="0x40e4ce50"/>
        <function-ref name="led2On" scoped="" ref="0x40e7f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40e4c040" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40e4c040"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40e4c218"/>
        <function-ref name="noAck" scoped="" ref="0x40e4c2f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40e4c3d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40e4d368" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40e4d368"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40e4d540"/>
        <function-ref name="source" scoped="" ref="0x40e4d620"/>
        <function-ref name="address" scoped="" ref="0x40e4d700"/>
        <function-ref name="destination" scoped="" ref="0x40e4d7e0"/>
        <function-ref name="setSource" scoped="" ref="0x40e4d8c0"/>
        <function-ref name="setDestination" scoped="" ref="0x40e4d9a0"/>
        <function-ref name="type" scoped="" ref="0x40e4da80"/>
        <function-ref name="setType" scoped="" ref="0x40e4db60"/>
        <function-ref name="isForMe" scoped="" ref="0x40e4dc40"/>
        <function-ref name="setGroup" scoped="" ref="0x40e4dd20"/>
        <function-ref name="localGroup" scoped="" ref="0x40e4de00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40e819f8" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40e819f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e81bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x40e81cb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e81d90"/>
        <function-ref name="cancel" scoped="" ref="0x40e81e70"/>
        <function-ref name="sendDone" scoped="" ref="0x40e80010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40e80170" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40e80170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e80348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40e7e700" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40e7e700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403c79f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e7e8e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40e7e9c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e7eaa8"/>
        <function-ref name="cancel" scoped="" ref="0x40e7eb88"/>
        <function-ref name="sendDone" scoped="" ref="0x40e7ec68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40e7dd68" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40e7dd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e81010"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e810f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40e811d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e812b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e81390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40e7ee40" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40e7ee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403c79f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e7d050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40e814d0" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40e814d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40e816a8"/>
        <function-ref name="noAck" scoped="" ref="0x40e81788"/>
        <function-ref name="wasAcked" scoped="" ref="0x40e81868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40e7d190" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40e7d190"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40e7d368"/>
        <function-ref name="source" scoped="" ref="0x40e7d448"/>
        <function-ref name="address" scoped="" ref="0x40e7d528"/>
        <function-ref name="destination" scoped="" ref="0x40e7d608"/>
        <function-ref name="setSource" scoped="" ref="0x40e7d6e8"/>
        <function-ref name="setDestination" scoped="" ref="0x40e7d7c8"/>
        <function-ref name="type" scoped="" ref="0x40e7d8a8"/>
        <function-ref name="setType" scoped="" ref="0x40e7d988"/>
        <function-ref name="isForMe" scoped="" ref="0x40e7da68"/>
        <function-ref name="setGroup" scoped="" ref="0x40e7db48"/>
        <function-ref name="localGroup" scoped="" ref="0x40e7dc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40eb38f8" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40eb38f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40eb3ad0"/>
        <function-ref name="stopDone" scoped="" ref="0x40eb3bb0"/>
        <function-ref name="start" scoped="" ref="0x40eb3c90"/>
        <function-ref name="stop" scoped="" ref="0x40eb3d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40eb07e0" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40eb07e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x403c69f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40eb09b8"/>
        <function-ref name="getPayload" scoped="" ref="0x40eb0a98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40eb0b78"/>
        <function-ref name="cancel" scoped="" ref="0x40eb0c58"/>
        <function-ref name="sendDone" scoped="" ref="0x40eb0d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40eb3560" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40eb3560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40eb3738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40eb01d8" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40eb01d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x403c69f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40eb03b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40eaac50" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40eaac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40eaae28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40eaaf08"/>
        <function-ref name="led1On" scoped="" ref="0x40eae010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40eae0f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40eae1d0"/>
        <function-ref name="get" scoped="" ref="0x40eae2b0"/>
        <function-ref name="led1Off" scoped="" ref="0x40eae390"/>
        <function-ref name="led2Off" scoped="" ref="0x40eae710"/>
        <function-ref name="set" scoped="" ref="0x40eae470"/>
        <function-ref name="led0On" scoped="" ref="0x40eae550"/>
        <function-ref name="led2On" scoped="" ref="0x40eae630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x40eaa748" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x40eaa748"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x403c69f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40eaa920"/>
        <function-ref name="offset" scoped="" ref="0x40eaaa00"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40eaaae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40ea80e0" loc="64:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40ea80e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40ea82b8"/>
        <function-ref name="stopDone" scoped="" ref="0x40ea8398"/>
        <function-ref name="start" scoped="" ref="0x40ea8478"/>
        <function-ref name="stop" scoped="" ref="0x40ea8558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x40ed9d90" loc="326:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x40ed9d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ed8010"/>
        <function-ref name="runTask" scoped="" ref="0x40ed80f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x40e9f340" loc="72:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x40e9f340"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e9f518"/>
        <function-ref name="stop" scoped="" ref="0x40e9f5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x40ec1788" loc="189:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x40ec1788"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ec1960"/>
        <function-ref name="runTask" scoped="" ref="0x40ec1a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40eaed08" loc="63:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40eaed08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40eaeee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x40e9a3a0" loc="73:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x40e9a3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x40e9a578"/>
        <function-ref name="flush" scoped="" ref="0x40e9a658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x40edabd0" loc="320:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x40edabd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40edada8"/>
        <function-ref name="runTask" scoped="" ref="0x40edae88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x40e9dca0" loc="70:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40e9dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x40e9de78"/>
        <function-ref name="resetSend" scoped="" ref="0x40ea3010"/>
        <function-ref name="dataReceived" scoped="" ref="0x40ea30f0"/>
        <function-ref name="resetReceive" scoped="" ref="0x40ea31d0"/>
        <function-ref name="putData" scoped="" ref="0x40ea32b0"/>
        <function-ref name="putDone" scoped="" ref="0x40ea3390"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40ea3470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40ea35e0" loc="71:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40ea35e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40ea37b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40ea3898"/>
        <function-ref name="led1On" scoped="" ref="0x40ea3978"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40ea3a58"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40ea3b38"/>
        <function-ref name="get" scoped="" ref="0x40ea3c18"/>
        <function-ref name="led1Off" scoped="" ref="0x40ea3cf8"/>
        <function-ref name="led2Off" scoped="" ref="0x40e9f0f0"/>
        <function-ref name="set" scoped="" ref="0x40ea3dd8"/>
        <function-ref name="led0On" scoped="" ref="0x40ea3eb8"/>
        <function-ref name="led2On" scoped="" ref="0x40e9f010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x40ed6a70" loc="335:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x40ed6a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ed6c48"/>
        <function-ref name="runTask" scoped="" ref="0x40ed6d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x40ea47f8" loc="65:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x40ea47f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x40ea49d0"/>
        <function-ref name="nextByte" scoped="" ref="0x40ea4ab0"/>
        <function-ref name="startSend" scoped="" ref="0x40ea4b90"/>
        <function-ref name="sendCompleted" scoped="" ref="0x40ea4c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x40ea0948" loc="66:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40ea0948"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x40ea0b20"/>
        <function-ref name="byteReceived" scoped="" ref="0x40ea0c00"/>
        <function-ref name="endPacket" scoped="" ref="0x40ea0ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x40f3f970" loc="264:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x40f3f970"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f3fb48"/>
        <function-ref name="runTask" scoped="" ref="0x40f3fc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40f424f8" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40f424f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x403c69f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f426e0"/>
        <function-ref name="getPayload" scoped="" ref="0x40f427c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f428a0"/>
        <function-ref name="cancel" scoped="" ref="0x40f42980"/>
        <function-ref name="sendDone" scoped="" ref="0x40f42a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x40f3fda8" loc="147:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x40f3fda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f3e010"/>
        <function-ref name="runTask" scoped="" ref="0x40f3e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40f42138" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40f42138"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x403c69f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f42320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x40f42c88" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x40f42c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x403c69f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40f42e70"/>
        <function-ref name="offset" scoped="" ref="0x40f40010"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40f400f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40f40cc0" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40f40cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40f40e98"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40f3f010"/>
        <function-ref name="led1On" scoped="" ref="0x40f3f0f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40f3f1d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40f3f2b0"/>
        <function-ref name="get" scoped="" ref="0x40f3f390"/>
        <function-ref name="led1Off" scoped="" ref="0x40f3f470"/>
        <function-ref name="led2On" scoped="" ref="0x40f3f7f0"/>
        <function-ref name="set" scoped="" ref="0x40f3f630"/>
        <function-ref name="led2Off" scoped="" ref="0x40f3f550"/>
        <function-ref name="led0On" scoped="" ref="0x40f3f710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x40f40708" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x40f40708"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x40f408e0"/>
        <function-ref name="nextByte" scoped="" ref="0x40f409c0"/>
        <function-ref name="startSend" scoped="" ref="0x40f40aa0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x40f40b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x40f40230" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40f40230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x40f40408"/>
        <function-ref name="byteReceived" scoped="" ref="0x40f404e8"/>
        <function-ref name="endPacket" scoped="" ref="0x40f405c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x40f6b630" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40f6b630"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f6b808"/>
        <function-ref name="receivedByte" scoped="" ref="0x40f6b8e8"/>
        <function-ref name="receive" scoped="" ref="0x40f6b9c8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40f6baa8"/>
        <function-ref name="receiveDone" scoped="" ref="0x40f6bb88"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40f6bc68"/>
        <function-ref name="sendDone" scoped="" ref="0x40f6bd48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x40f3b238" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40f3b238"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x40f3b410"/>
        <function-ref name="resetSend" scoped="" ref="0x40f3b4f0"/>
        <function-ref name="dataReceived" scoped="" ref="0x40f3b5d0"/>
        <function-ref name="resetReceive" scoped="" ref="0x40f3b6b0"/>
        <function-ref name="putData" scoped="" ref="0x40f3b790"/>
        <function-ref name="putDone" scoped="" ref="0x40f3b870"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40f3b950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40f6beb8" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40f6beb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40f720c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40f721a0"/>
        <function-ref name="led1On" scoped="" ref="0x40f72280"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40f72360"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40f72440"/>
        <function-ref name="get" scoped="" ref="0x40f72520"/>
        <function-ref name="led1Off" scoped="" ref="0x40f72600"/>
        <function-ref name="led2Off" scoped="" ref="0x40f72980"/>
        <function-ref name="set" scoped="" ref="0x40f726e0"/>
        <function-ref name="led0On" scoped="" ref="0x40f727c0"/>
        <function-ref name="led2On" scoped="" ref="0x40f728a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40f59e20" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40f59e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f5b010"/>
        <function-ref name="receive" scoped="" ref="0x40f5b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40f5c010" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40f5c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f5c1e8"/>
        <function-ref name="receivedByte" scoped="" ref="0x40f5c2c8"/>
        <function-ref name="receive" scoped="" ref="0x40f5c3a8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40f5c488"/>
        <function-ref name="receiveDone" scoped="" ref="0x40f5c568"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40f5c648"/>
        <function-ref name="sendDone" scoped="" ref="0x40f5c728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40f3dae0" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40f3dae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40f3dcb8"/>
        <function-ref name="stop" scoped="" ref="0x40f3dd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40f5bc98" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40f5bc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f5be70"/>
        <function-ref name="receive" scoped="" ref="0x40f57010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40f571d8" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40f571d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f573b0"/>
        <function-ref name="receivedByte" scoped="" ref="0x40f57490"/>
        <function-ref name="receive" scoped="" ref="0x40f57570"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40f57650"/>
        <function-ref name="receiveDone" scoped="" ref="0x40f57730"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40f57810"/>
        <function-ref name="sendDone" scoped="" ref="0x40f578f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40f57c50" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40f57c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40342510"/>
            <typename><typedef-ref name="TMicro" ref="0x403426d8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f8e3f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40f8e8e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40f8e668"/>
        <function-ref name="overflow" scoped="" ref="0x40f8eb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40f5b828" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40f5b828"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40f5ba00"/>
        <function-ref name="stop" scoped="" ref="0x40f5bae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40f8a5c8" loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40f8a5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f8a7a0"/>
        <function-ref name="receive" scoped="" ref="0x40f8a880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x40f9d350" loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x40f9d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40f9d528"/>
        <function-ref name="stop" scoped="" ref="0x40f9d608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40f8be68" loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40f8be68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f8a050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40f8a9e0" loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40f8a9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f8abb8"/>
        <function-ref name="receivedByte" scoped="" ref="0x40f8ac98"/>
        <function-ref name="receive" scoped="" ref="0x40f8ad78"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40f8ae58"/>
        <function-ref name="receiveDone" scoped="" ref="0x40f9d010"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40f9d0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40f9d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40f9c8b0" loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40f9c8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40342510"/>
            <typename><typedef-ref name="TMicro" ref="0x403426d8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f9b010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40f9b500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40f9b288"/>
        <function-ref name="overflow" scoped="" ref="0x40f9b778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x40f9dbc0" loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x40f9dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40f9dd98"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40f9de78"/>
        <function-ref name="rxDone" scoped="" ref="0x40f9c010"/>
        <function-ref name="txDone" scoped="" ref="0x40f9c0f0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40f9c1d0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40f9c2b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40f9c390"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40f9c470"/>
        <function-ref name="tx" scoped="" ref="0x40f9c550"/>
        <function-ref name="rx" scoped="" ref="0x40f9c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40f8a1b0" loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40f8a1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40f8a388"/>
        <function-ref name="stop" scoped="" ref="0x40f8a468"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x40f9d788" loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x40f9d788"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40f9d960"/>
        <function-ref name="stop" scoped="" ref="0x40f9da40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x40fc4cf0" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x40fc4cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40fc4ec8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40fc3010"/>
        <function-ref name="rxDone" scoped="" ref="0x40fc30f0"/>
        <function-ref name="txDone" scoped="" ref="0x40fc31d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40fc32b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40fc3390"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40fc3470"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40fc3550"/>
        <function-ref name="tx" scoped="" ref="0x40fc3630"/>
        <function-ref name="rx" scoped="" ref="0x40fc3710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x40fc2390" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x40fc2390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40fc2568"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40fc2648"/>
        <function-ref name="rxDone" scoped="" ref="0x40fc2728"/>
        <function-ref name="txDone" scoped="" ref="0x40fc2808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40fc28e8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40fc29c8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40fc2aa8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40fc2b88"/>
        <function-ref name="tx" scoped="" ref="0x40fc2c68"/>
        <function-ref name="rx" scoped="" ref="0x40fc2d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x40fc47f8" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x40fc47f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40fc49d0"/>
        <function-ref name="stop" scoped="" ref="0x40fc4ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x40fc3968" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x40fc3968"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40fc3b40"/>
        <function-ref name="stop" scoped="" ref="0x40fc3c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x40fc3e78" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x40fc3e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40fc2070"/>
        <function-ref name="stop" scoped="" ref="0x40fc2150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x40fc42e8" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x40fc42e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40fc44c0"/>
        <function-ref name="stop" scoped="" ref="0x40fc45a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x40fc1580" loc="71:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x40fc1580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40fc1758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x40fbe430" loc="74:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x40fbe430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40fbe608"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40fbe6e8"/>
        <function-ref name="rxDone" scoped="" ref="0x40fbe7c8"/>
        <function-ref name="txDone" scoped="" ref="0x40fbe8a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40fbe988"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40fbea68"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40fbeb48"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40fbec28"/>
        <function-ref name="tx" scoped="" ref="0x40fbed08"/>
        <function-ref name="rx" scoped="" ref="0x40fbede8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x40fbd010" loc="76:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x40fbd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40fbd1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x40fbdea8" loc="79:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x40fbdea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40fbb0c0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40fbb1a0"/>
        <function-ref name="rxDone" scoped="" ref="0x40fbb280"/>
        <function-ref name="txDone" scoped="" ref="0x40fbb360"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40fbb440"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40fbb520"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40fbb600"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40fbb6e0"/>
        <function-ref name="tx" scoped="" ref="0x40fbb7c0"/>
        <function-ref name="rx" scoped="" ref="0x40fbb8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x40fc1f00" loc="73:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x40fc1f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40fbe0f0"/>
        <function-ref name="stop" scoped="" ref="0x40fbe1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x40fbd460" loc="77:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x40fbd460"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40fbd638"/>
        <function-ref name="stop" scoped="" ref="0x40fbd718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x40fbd990" loc="78:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x40fbd990"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40fbdb68"/>
        <function-ref name="stop" scoped="" ref="0x40fbdc48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x40fbba98" loc="81:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40fbba98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40fbbc70"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40fbbd50"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40fbbe30"/>
        <function-ref name="actualMicro" scoped="" ref="0x40fbbf10"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40fba010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40fba1f8" loc="82:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40fba1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40fba3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x40fc19d0" loc="72:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x40fc19d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40fc1ba8"/>
        <function-ref name="stop" scoped="" ref="0x40fc1c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40ff90d0" loc="24:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40ff90d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40342510"/>
            <typename><typedef-ref name="TMicro" ref="0x403426d8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ff9820"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ff9d10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ff9a98"/>
        <function-ref name="overflow" scoped="" ref="0x40ff7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40ff7b70" loc="24:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40ff7b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40342510"/>
            <typename><typedef-ref name="TThree" ref="0x4035be08"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ff4308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ff47f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ff4580"/>
        <function-ref name="overflow" scoped="" ref="0x40ff4a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40fee7a8" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40fee7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40fee980"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x40feea60"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40feeb40"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x40feec20"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40feed00"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40feede0"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x40feeec0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x40fed010"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x40fed0f0"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x40fed1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40fed508" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40fed508"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40feb010"/>
        <function-ref name="test" scoped="" ref="0x40feca90"/>
        <function-ref name="get" scoped="" ref="0x40fedb50"/>
        <function-ref name="captured" scoped="" ref="0x40fec088"/>
        <function-ref name="reset" scoped="" ref="0x40fec328"/>
        <function-ref name="isOn" scoped="" ref="0x40fecd08"/>
        <function-ref name="set" scoped="" ref="0x40feddc8"/>
        <function-ref name="start" scoped="" ref="0x40fec5a0"/>
        <function-ref name="stop" scoped="" ref="0x40fec818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40feb720" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40feb720"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40fe9c90"/>
        <function-ref name="fired" scoped="" ref="0x40fe92b0"/>
        <function-ref name="get" scoped="" ref="0x40febd68"/>
        <function-ref name="reset" scoped="" ref="0x40fe9528"/>
        <function-ref name="isOn" scoped="" ref="0x40fe9f08"/>
        <function-ref name="set" scoped="" ref="0x40fe9010"/>
        <function-ref name="start" scoped="" ref="0x40fe97a0"/>
        <function-ref name="stop" scoped="" ref="0x40fe9a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40ff34d8" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40ff34d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40ff0f18"/>
        <function-ref name="test" scoped="" ref="0x40ff0a28"/>
        <function-ref name="get" scoped="" ref="0x40ff3b20"/>
        <function-ref name="setScale" scoped="" ref="0x40fee1a8"/>
        <function-ref name="getScale" scoped="" ref="0x40fee448"/>
        <function-ref name="reset" scoped="" ref="0x40ff02c0"/>
        <function-ref name="overflow" scoped="" ref="0x40ff0048"/>
        <function-ref name="isOn" scoped="" ref="0x40ff0ca0"/>
        <function-ref name="set" scoped="" ref="0x40ff3d98"/>
        <function-ref name="start" scoped="" ref="0x40ff0538"/>
        <function-ref name="stop" scoped="" ref="0x40ff07b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x4101dc90" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x4101dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x4101de68"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x4101c010"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x4101c0f0"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x4101c1d0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x4101c2b0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x4101c390"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x4101c470"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x4101c550"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x4101c630"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x4101c710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x4101a940" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x4101a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x41018f08"/>
        <function-ref name="fired" scoped="" ref="0x41018528"/>
        <function-ref name="get" scoped="" ref="0x41018010"/>
        <function-ref name="reset" scoped="" ref="0x410187a0"/>
        <function-ref name="isOn" scoped="" ref="0x410171a0"/>
        <function-ref name="set" scoped="" ref="0x41018288"/>
        <function-ref name="start" scoped="" ref="0x41018a18"/>
        <function-ref name="stop" scoped="" ref="0x41018c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x4101ca48" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x4101ca48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x4101a500"/>
        <function-ref name="test" scoped="" ref="0x4101a010"/>
        <function-ref name="get" scoped="" ref="0x4101b0a8"/>
        <function-ref name="captured" scoped="" ref="0x4101b5c0"/>
        <function-ref name="reset" scoped="" ref="0x4101b860"/>
        <function-ref name="isOn" scoped="" ref="0x4101a288"/>
        <function-ref name="set" scoped="" ref="0x4101b320"/>
        <function-ref name="start" scoped="" ref="0x4101bad8"/>
        <function-ref name="stop" scoped="" ref="0x4101bd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x410175b8" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x410175b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x41016b10"/>
        <function-ref name="fired" scoped="" ref="0x41016130"/>
        <function-ref name="get" scoped="" ref="0x41017c00"/>
        <function-ref name="reset" scoped="" ref="0x410163a8"/>
        <function-ref name="isOn" scoped="" ref="0x41016d88"/>
        <function-ref name="set" scoped="" ref="0x41017e78"/>
        <function-ref name="start" scoped="" ref="0x41016620"/>
        <function-ref name="stop" scoped="" ref="0x41016898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x410141c0" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x410141c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x41013778"/>
        <function-ref name="fired" scoped="" ref="0x41014d20"/>
        <function-ref name="get" scoped="" ref="0x41014808"/>
        <function-ref name="reset" scoped="" ref="0x41013010"/>
        <function-ref name="isOn" scoped="" ref="0x410139f0"/>
        <function-ref name="set" scoped="" ref="0x41014a80"/>
        <function-ref name="start" scoped="" ref="0x41013288"/>
        <function-ref name="stop" scoped="" ref="0x41013500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40fe8958" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40fe8958"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4101d418"/>
        <function-ref name="test" scoped="" ref="0x40fe5f08"/>
        <function-ref name="get" scoped="" ref="0x40fe5010"/>
        <function-ref name="setScale" scoped="" ref="0x4101d690"/>
        <function-ref name="getScale" scoped="" ref="0x4101d930"/>
        <function-ref name="reset" scoped="" ref="0x40fe57a0"/>
        <function-ref name="overflow" scoped="" ref="0x40fe5528"/>
        <function-ref name="isOn" scoped="" ref="0x4101d1a0"/>
        <function-ref name="set" scoped="" ref="0x40fe5288"/>
        <function-ref name="start" scoped="" ref="0x40fe5a18"/>
        <function-ref name="stop" scoped="" ref="0x40fe5c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4103c2b0" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4103c2b0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402eeae0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402eeae0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4103c488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4103c698" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4103c698"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x410751a0"/>
        <function-ref name="test" scoped="" ref="0x41076c90"/>
        <function-ref name="get" scoped="" ref="0x4103cce0"/>
        <function-ref name="setScale" scoped="" ref="0x41075418"/>
        <function-ref name="getScale" scoped="" ref="0x410756b8"/>
        <function-ref name="reset" scoped="" ref="0x41076528"/>
        <function-ref name="overflow" scoped="" ref="0x410762b0"/>
        <function-ref name="isOn" scoped="" ref="0x41076f08"/>
        <function-ref name="set" scoped="" ref="0x41076010"/>
        <function-ref name="start" scoped="" ref="0x410767a0"/>
        <function-ref name="stop" scoped="" ref="0x41076a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x41040980" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x41040980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40342510"/>
            <typename><typedef-ref name="TThree" ref="0x4035be08"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x410730f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x410735e8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41073370"/>
        <function-ref name="overflow" scoped="" ref="0x41073860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x41073b40" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41073b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x41071600"/>
        <function-ref name="test" scoped="" ref="0x41071110"/>
        <function-ref name="get" scoped="" ref="0x41072200"/>
        <function-ref name="setScale" scoped="" ref="0x41071878"/>
        <function-ref name="getScale" scoped="" ref="0x41071b18"/>
        <function-ref name="reset" scoped="" ref="0x41072990"/>
        <function-ref name="overflow" scoped="" ref="0x41072718"/>
        <function-ref name="isOn" scoped="" ref="0x41071388"/>
        <function-ref name="set" scoped="" ref="0x41072478"/>
        <function-ref name="start" scoped="" ref="0x41072c08"/>
        <function-ref name="stop" scoped="" ref="0x41072e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x4106ebd0" loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x4106ebd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40342510"/>
            <typename><typedef-ref name="TThree" ref="0x4035be08"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4106d340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4106d830"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4106d5b8"/>
        <function-ref name="overflow" scoped="" ref="0x4106daa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40ff5980" loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40ff5980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40342510"/>
            <typename><typedef-ref name="TMicro" ref="0x403426d8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4106e0f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4106e5e8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4106e370"/>
        <function-ref name="overflow" scoped="" ref="0x4106e860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x4106a568" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x4106a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x4106a740"/>
        <function-ref name="offset" scoped="" ref="0x4106a820"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x4106a900"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="RootControl" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/RootControl.nc">
      <documentation loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006/12/12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0x403a0f28" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0x403a0770" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0x403a0b68" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="31:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x403889e0" loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Receive.nc">
      <function event="" provided="0" name="receive" ref="0x403d0a28" loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
              <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403d04e0" loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x403d06c0" loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x403d08a0" loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x403915b0" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x403915b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x4039ef00" loc="125:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="121:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40398b48" loc="72:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="69:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x40397cc0" loc="103:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="89:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40397978" loc="103:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40397b60" loc="103:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x403974d0" loc="87:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="83:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x4039c888" loc="140:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="135:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x4039c358" loc="133:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="127:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40397010" loc="81:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x40391c08" loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40391ab0" loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x4039e8e0" loc="118:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="105:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4039e598" loc="118:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x4039e780" loc="118:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x403982b0" loc="62:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40398158" loc="62:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40398780" loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="64:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="31:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x4039f9e8" loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4039f890" loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x403da440" loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403da2e8" loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x403e14a8" loc="115:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="98:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403e1148" loc="115:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x403e1328" loc="115:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x403d9b08" loc="95:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="85:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x403d9170" loc="83:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="69:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403dad60" loc="83:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x403d9010" loc="83:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/StdControl.nc">
      <documentation loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x4038e788" loc="74:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4038ec50" loc="84:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="76:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x4038c168" loc="92:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4038c010" loc="92:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x4038ceb0" loc="117:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4038cd58" loc="117:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40387850" loc="83:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4038c678" loc="109:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Send.nc">
      <documentation loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision$&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x403cf580" loc="64:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403cf240" loc="64:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x403cf420" loc="64:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x403dc190" loc="114:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="104:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403d5d78" loc="114:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x403dc010" loc="114:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x403d5818" loc="101:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x403d61e0" loc="78:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="66:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403d6088" loc="78:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x403d6e78" loc="89:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="80:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403d6b20" loc="89:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x403d6d18" loc="89:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Random.nc">
      <documentation loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x403e0b18" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x403e0670" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="31:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BcpDebugIF" loc="1:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpDebugIF.nc">
      <function command="" provided="0" name="reportBackpressure" ref="0x403faf20" loc="6:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpDebugIF.nc">
        <documentation loc="2:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpDebugIF.nc">
          <short>&#10; Notifies upper layer of a change to the local&#10;  backpressure level.</short>
          <long>&#10; Notifies upper layer of a change to the local&#10;  backpressure level.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BcpDebugIF"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dataQueueSize_p" ref="0x403fa208" loc="6:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpDebugIF.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
            </type-int>
          </variable>
          <variable name="virtualQueueSize_p" ref="0x403fa490" loc="6:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpDebugIF.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
            </type-int>
          </variable>
          <variable name="localTXCount_p" ref="0x403fa6f0" loc="6:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpDebugIF.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </variable>
          <variable name="origin_p" ref="0x403fa908" loc="6:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpDebugIF.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
          <variable name="originSeqNo_p" ref="0x403fab50" loc="6:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpDebugIF.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
          <variable name="reportSource_p" ref="0x403fada0" loc="6:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpDebugIF.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportError" ref="0x403f9528" loc="11:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpDebugIF.nc">
        <documentation loc="8:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpDebugIF.nc">
          <short>&#10; Notifies the application layer of an error&#10;</short>
        </documentation>
        <interfacedef-ref qname="BcpDebugIF"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type_p" ref="0x403f93d0" loc="11:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpDebugIF.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportLinkRate" ref="0x403f86d8" loc="16:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpDebugIF.nc">
        <documentation loc="13:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpDebugIF.nc">
          <short>&#10; Notifies upper layer of an update to the estimated link transmission time&#10;</short>
        </documentation>
        <interfacedef-ref qname="BcpDebugIF"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor_p" ref="0x403f99a8" loc="16:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpDebugIF.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
          <variable name="previousLinkPacketTxTime_p" ref="0x403f9c80" loc="16:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpDebugIF.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </variable>
          <variable name="updateLinkPacketTxTime_p" ref="0x403f8010" loc="17:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpDebugIF.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </variable>
          <variable name="newLinkPacketTxTime" ref="0x403f82a0" loc="17:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpDebugIF.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </variable>
          <variable name="latestLinkPacktLossEst" ref="0x403f8560" loc="18:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpDebugIF.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportValues" ref="0x40400c58" loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpDebugIF.nc">
        <documentation loc="20:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpDebugIF.nc">
          <short>&#10; Used to debug&#10;</short>
        </documentation>
        <interfacedef-ref qname="BcpDebugIF"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="field1_p" ref="0x403f8b68" loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpDebugIF.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
            </type-int>
          </variable>
          <variable name="field2_p" ref="0x403f8d90" loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpDebugIF.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
            </type-int>
          </variable>
          <variable name="field3_p" ref="0x40400010" loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpDebugIF.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
            </type-int>
          </variable>
          <variable name="field4_p" ref="0x40400238" loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpDebugIF.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </variable>
          <variable name="field5_p" ref="0x40400470" loc="24:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpDebugIF.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </variable>
          <variable name="field6_p" ref="0x40400698" loc="24:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpDebugIF.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </variable>
          <variable name="field7_p" ref="0x404008b0" loc="24:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpDebugIF.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
          <variable name="field8_p" ref="0x40400ac8" loc="24:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpDebugIF.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="22:/home/xinchaol/local/src/tinyos-2.x/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x403965f0" loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x40396a38" loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x40396eb8" loc="61:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x40395740" loc="72:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="68:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x40394458" loc="89:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="85:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40394900" loc="106:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="92:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x403952f8" loc="66:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4039a058" loc="123:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="109:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x40394ee8" loc="123:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x403961c8" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x40395bc0" loc="78:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="75:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x40394010" loc="83:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="80:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BcpPacket" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpPacket.nc">
      <documentation loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpPacket.nc">
        <short>&#10;  ADT for BCP data frames.</short>
        <long>&#10;  ADT for BCP data frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Scott Moeller&#10;  @date   $Date: 2010/03/05 22:37:37 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSequenceNumber" ref="0x403e7400" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpPacket.nc">
        <interfacedef-ref qname="BcpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403e70a8" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x403e72a0" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHopCount" ref="0x403e5e90" loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpPacket.nc">
        <interfacedef-ref qname="BcpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403e5d38" loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getBCPPktType" ref="0x403e34a8" loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpPacket.nc">
        <interfacedef-ref qname="BcpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403e3350" loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x403df648" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpPacket.nc">
        <interfacedef-ref qname="BcpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403df2e0" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x403df4e8" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x403e6170" loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpPacket.nc">
        <interfacedef-ref qname="BcpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403e7d70" loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x403e6010" loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x403a6ec0" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpPacket.nc">
        <interfacedef-ref qname="BcpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403a6d68" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDelay" ref="0x403e6718" loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpPacket.nc">
        <interfacedef-ref qname="BcpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403e65c0" loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getBackpressure" ref="0x403e52e0" loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpPacket.nc">
        <interfacedef-ref qname="BcpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403e5188" loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x403dfc38" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpPacket.nc">
        <interfacedef-ref qname="BcpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403dfae0" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTxCount" ref="0x403e6cd0" loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpPacket.nc">
        <interfacedef-ref qname="BcpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403e6b78" loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNodeTxCount" ref="0x403e3a78" loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpPacket.nc">
        <interfacedef-ref qname="BcpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403e3920" loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x403e7988" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpPacket.nc">
        <interfacedef-ref qname="BcpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403e7830" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNhBackpressure" ref="0x403e58e0" loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpPacket.nc">
        <interfacedef-ref qname="BcpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403e5788" loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SafeSerialSendIF" loc="1:SafeSerialSendIF.nc">
      <function command="" provided="0" name="queueMessageBuffer" ref="0x403f2610" loc="25:SafeSerialSendIF.nc">
        <interfacedef-ref qname="SafeSerialSendIF"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sendMsg_p" ref="0x403f24b8" loc="25:SafeSerialSendIF.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x403f2010" loc="16:SafeSerialSendIF.nc">
        <interfacedef-ref qname="SafeSerialSendIF"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg_p" ref="0x403ecbe8" loc="16:SafeSerialSendIF.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="size_p" ref="0x403ecde8" loc="16:SafeSerialSendIF.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMessageBuffer" ref="0x403ec7b8" loc="9:SafeSerialSendIF.nc">
        <interfacedef-ref qname="SafeSerialSendIF"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
              <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="droppedMessageCount" ref="0x403f2a78" loc="32:SafeSerialSendIF.nc">
        <interfacedef-ref qname="SafeSerialSendIF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <documentation loc="31:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x403f0c50" loc="166:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="153:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x403c7c48"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x403f0af8" loc="166:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x403ea380" loc="77:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x403ea228" loc="77:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x403eb2d8" loc="57:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x403eb970" loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x403eb818" loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x403e8cf8" loc="110:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x403e8990" loc="110:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x403e8b98" loc="110:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x403e8010" loc="92:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x403eac00" loc="92:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x403eae08" loc="92:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x403ef5f0" loc="136:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403c79f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x403ef498" loc="136:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x403f0170" loc="151:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403c79f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x403efdf8" loc="151:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x403f0010" loc="151:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403c79f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x403f1a90" loc="125:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x403f1938" loc="125:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x403f68e8" loc="176:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="168:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403c7c48"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x403f6588" loc="176:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x403f6788" loc="176:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403c7c48"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x403ed1a8" loc="184:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="178:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x403c7c48"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision$&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x4043e8f8" loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x404422b0" loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x40442158" loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x404468d0" loc="31:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x40446f08" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40446db0" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x404435f8" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x404434a0" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x40443b50" loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x40458158" loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x40458540" loc="34:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x4044e9b0" loc="31:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x40458d10" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4044ed70" loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x40458918" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4044e270" loc="29:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x4044e600" loc="30:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="31:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x402ec8c8" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x402ef1f0" loc="61:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x402ecd08" loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x402f6138" loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x402f6650" loc="64:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x4035f6e0" loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/xinchaol/local/src/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id$&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x40379138" loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x4032c820"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="27:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x40365c48" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
      <documentation loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision$&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40557bd0" loc="69:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40557670" loc="69:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40557888" loc="69:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40557a68" loc="69:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40553a88" loc="124:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="115:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40553728" loc="124:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40553908" loc="124:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x405531c8" loc="112:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="102:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40554b80" loc="85:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="71:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40554a28" loc="85:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40552898" loc="99:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="87:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40552540" loc="99:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40552738" loc="99:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="24:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x4055ad80" loc="24:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4055ad80"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4055aee8" loc="24:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4055aee8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x40568168" loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4055aee8"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40568010" loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x40568c00" loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40568aa8" loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x40569590" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="26:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40569438" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x405656e8" loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="61:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4055aee8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40565378" loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40565588" loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4055aee8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x405607f8" loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405606a0" loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x4055c300" loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4055c1a8" loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x4055cd88" loc="74:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4055cc30" loc="74:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x40573b20" loc="95:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405739c8" loc="95:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x405749f8" loc="81:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405748a0" loc="81:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x40577b70" loc="66:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x40577a18" loc="66:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x40577490" loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x40577338" loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x40574188" loc="73:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x40574030" loc="73:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x405732f8" loc="88:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405731a0" loc="88:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x40583638" loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x405832c0" loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x405834d8" loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x4056a878" loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x4056a520" loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x4056a718" loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x4056af00" loc="64:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x401bc1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x4056ada8" loc="64:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x4056a058" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x4056eed8" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x405795f8" loc="72:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x405794a0" loc="72:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getLocalSleepInterval" ref="0x40580798" loc="58:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRxDutyCycle" ref="0x4057b010" loc="114:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="109:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's duty cycle configured in this message&#10;     in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4057ce50" loc="114:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sleepIntervalToDutyCycle" ref="0x40589268" loc="130:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="124:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10; </short>
          <long>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10; @param sleepInterval The sleep interval in units of [ms]&#10; @return The duty cycle in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepInterval" ref="0x40589110" loc="130:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalDutyCycle" ref="0x4057e540" loc="81:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="78:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return this node's radio duty cycle rate, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRxSleepInterval" ref="0x4057edc8" loc="90:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="84:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param sleepInterval The receiving node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4057ea00" loc="90:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="sleepIntervalMs" ref="0x4057ec68" loc="90:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalDutyCycle" ref="0x40580da8" loc="76:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].</short>
          <long>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].&#10; For example, to get a 0.05% duty cycle,&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(5);&#10; &#60;/code>&#10;&#10; For a 100% duty cycle (always on),&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(10000);&#10; &#60;/code>&#10;&#10; This is the equivalent of setting the local sleep interval explicitly.&#10; &#10; @param dutyCycle The duty cycle percentage, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x40580c50" loc="76:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRxDutyCycle" ref="0x4057c4d8" loc="107:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="98:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.&#10; Duty cycle is in units of [percentage*100], i.e. 0.25% duty cycle = 25.&#10; &#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param dutyCycle The duty cycle of the receiving mote, in units of &#10;     [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4057c148" loc="107:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dutyCycle" ref="0x4057c378" loc="107:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dutyCycleToSleepInterval" ref="0x4057ba10" loc="122:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="116:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10; </short>
          <long>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10; @param dutyCycle The duty cycle in units of [percentage*100]&#10; @return The equivalent sleep interval, in units of [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x4057b8b8" loc="122:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRxSleepInterval" ref="0x4057d948" loc="96:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="92:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's sleep interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4057d7f0" loc="96:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalSleepInterval" ref="0x40580168" loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio sleep interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio sleep interval, in milliseconds.&#10; Once every interval, the node will sleep and perform an Rx check &#10; on the radio.  Setting the sleep interval to 0 will keep the radio&#10; always on.&#10;&#10; This is the equivalent of setting the local duty cycle rate.&#10;&#10; @param sleepIntervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepIntervalMs" ref="0x40580010" loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x405845b0" loc="65:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40584458" loc="65:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x405789d8" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40578640" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x40578878" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x40587c38" loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40587ae0" loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x405875c0" loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40587228" loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x40587460" loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x40584ed0" loc="71:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40584d78" loc="71:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x4056cce0" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4056cb88" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x405a1060" loc="99:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="93:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x40592cd8" loc="99:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x40592ee0" loc="99:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x40592340" loc="86:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="83:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x40594d40" loc="80:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x40594950" loc="80:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x40594be0" loc="80:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x40596618" loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x405964c0" loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x40592858" loc="91:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="88:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x40595a40" loc="65:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x405958e8" loc="65:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x40595010" loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40596e58" loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x405a1b48" loc="110:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="107:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x40594440" loc="71:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x405942e8" loc="71:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x405a1600" loc="105:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="101:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x40595468" loc="64:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="61:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x40596010" loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40596a28" loc="58:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x40595e80" loc="70:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
          <long>&#10; Change the PAN address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x4059fba0" loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x4059e438" loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x4059e038" loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x403c7c48"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x4059f6b0" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403c7c48"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x4059f348" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403c7c48"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x4059f550" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getHeader" ref="0x40599738" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x403a5cb8"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x403a4cb8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405995a0" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x40597200" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x403ab3c8"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x403aa310"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40597068" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x405e3af8" loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x405e37b0" loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x405e3998" loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x405ef640" loc="65:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x405edd40" loc="84:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x405ed550" loc="84:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x405ed9f8" loc="84:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405edbd8" loc="84:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x405ed060" loc="73:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x405efcf0" loc="73:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x405efee8" loc="73:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x405ef168" loc="58:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x405ef010" loc="58:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x405e2ac0" loc="71:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x405e0da8" loc="97:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x405e0940" loc="90:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x405e7c38" loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x405e25e8" loc="63:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x405e0010" loc="76:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x405e04d0" loc="83:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x405e2158" loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
          <long>&#10; Signals that the voltage regulator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision$&#10; @date $Date$&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x405e44a8" loc="110:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="94:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x405e5b60" loc="87:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="80:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x405e5560" loc="78:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="68:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x405e4038" loc="92:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="89:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x405e4ba0" loc="118:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="112:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/State.nc">
      <documentation loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x405faca8" loc="71:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="68:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x405e9e40" loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x405fa840" loc="66:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="63:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x405fa6e8" loc="66:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x405fa270" loc="61:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="58:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x405e9350" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x405e91f8" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x405e99b8" loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x405e9860" loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Read.nc">
      <documentation loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x40625c50" loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40625c50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x40622138" loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x406228e8" loc="63:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="57:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40625c50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x406225b8" loc="63:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x40622788" loc="63:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40625c50"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x406321c0" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x403a5960"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40632068" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40632858" loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x403a5960"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40632700" loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4062e878" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4062e878"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4062e9e0" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4062e9e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x4062ac88" loc="98:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4062e9e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4062b960" loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x4062a640" loc="92:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4062e9e0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4062e9e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4062a2f0" loc="92:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4062e9e0"/></type-var>
          </variable>
          <variable name="dt" ref="0x4062a4e0" loc="92:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4062e9e0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x4062bdd0" loc="77:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x40628138" loc="105:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4062e9e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4062b020" loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4062e9e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4062eeb8" loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4062e9e0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4062b500" loc="62:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x406445d0" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x403a5960"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x40634298" loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x403a5960"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x40639a20" loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40639ef8" loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40634130" loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40633098" loc="63:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x403a5960"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x40634840" loc="63:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40634d18" loc="63:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40634f18" loc="63:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision$&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x40636358" loc="57:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x4063aec0" loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x4063aab0" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x4063a548" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="34:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x406a59d0" loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4035db10"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x4035dd38"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x406a6410" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4034fe80"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x403560c8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x406a62b8" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4034fe80"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x403560c8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x406a6ef0" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4035e5e8"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x4035e810"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x40696d30" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4034be20"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x40352068"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x406a5518" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4035e5e8"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x4035e810"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x406a53c0" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4035e5e8"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x4035e810"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x406a3010" loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4035db10"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x4035dd38"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x406a5e88" loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4035db10"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x4035dd38"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x406a7770" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403544c0"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x403546e8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x406a72a0" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4034fe80"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x403560c8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x406a7db8" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4034be20"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x40352068"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x406a7c60" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4034be20"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x40352068"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x406a6a30" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403544c0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x403546e8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x406a68d8" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403544c0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x403546e8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x406a2228" loc="31:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406a2228"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x406a0d18" loc="79:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x406a0bc0" loc="79:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x406a0330" loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x406a2720" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406a2228"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x406a12b0" loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406a2228"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x406a1158" loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406a2228"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x406a16f0" loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x406a0790" loc="73:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x406a2c98" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406a2228"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x406a2b40" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406a2228"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x406a1af8" loc="58:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406a1ef0" loc="61:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x406b1220" loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406b1220"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x406ae138" loc="65:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x406b00f8" loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x406b1718" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406b1220"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x406b0500" loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x406ae598" loc="71:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x406b1ca0" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406b1220"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x406b1b48" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406b1220"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x406b0908" loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406b0d00" loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x4068cd38" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4068cd38"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x40698520" loc="89:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x4069ac60" loc="78:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4069b250" loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4068cd38"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x40698ab0" loc="95:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x40698958" loc="95:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x40697010" loc="101:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4069a038" loc="66:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x4069bbf8" loc="61:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x406980f8" loc="84:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4069b7c8" loc="58:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4068cd38"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x4069b670" loc="58:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4068cd38"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4069a440" loc="69:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4069a838" loc="72:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x406bd860" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40344010"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x40344238"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x406bae20" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4034e040"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x4034e268"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x406ba368" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40348900"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x40348b28"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x406ba970" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40348900"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x40348b28"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x406ba818" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40348900"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x40348b28"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x406b8480" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4034e040"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x4034e268"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x406b8328" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4034e040"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x4034e268"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x406bde80" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40344010"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x40344238"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x406bdd28" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40344010"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x40344238"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x406c9010" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x406c94e0" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x406b5bc8" loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x406c99a0" loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x406b50f8" loc="21:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403491a8"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x403493d0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x406b56e8" loc="27:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403491a8"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x403493d0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x406b5590" loc="27:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403491a8"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x403493d0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4078cde0" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4078cde0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40787010" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40787010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x407874f8" loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40787010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x40787f20" loc="65:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="62:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x40787a20" loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40786360" loc="71:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/GpioCapture.nc">
      <documentation loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision$&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x407dc2c8" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x407dcc78" loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x407dc830" loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x407dc6d8" loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x407e2d18" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="30:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x407fc210" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x407fa158" loc="64:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="61:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x407ffdf8" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x407fcc70" loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x407fcb18" loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x407ff9f0" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x407fc660" loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="28:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x40807950" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x408589e8" loc="62:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40858688" loc="62:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40858888" loc="62:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x40854178" loc="91:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40855be8" loc="91:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40855de8" loc="91:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40854010" loc="91:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x408553c8" loc="82:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x403a5960"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40855068" loc="82:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40855268" loc="82:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x4085bdc8" loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x403a5960"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4085ba68" loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x4085bc68" loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x408577e0" loc="71:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40857280" loc="71:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40857480" loc="71:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40857678" loc="71:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x4084ed88" loc="24:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x4084b290" loc="31:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x4084b770" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
      <documentation loc="24:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision$&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40860c68" loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x408606f8" loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40860910" loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40860b00" loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4085f388" loc="71:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x4087ab38" loc="71:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x4087ad50" loc="71:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4085f010" loc="71:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x4085f218" loc="72:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/SpiByte.nc">
      <documentation loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x40863858" loc="34:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x40863700" loc="34:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x408c9b60" loc="69:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x408c32b8" loc="109:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x408c6438" loc="100:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x408c38a0" loc="111:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x408c3748" loc="111:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x408c9710" loc="66:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x408c43a0" loc="105:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x408c4248" loc="105:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x408c7658" loc="96:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x408c7500" loc="96:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x408c8478" loc="80:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x408dea10" loc="125:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x408de8b8" loc="125:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x408c7ab0" loc="97:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x408c2280" loc="114:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x408c2128" loc="114:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x408c2b08" loc="120:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x408c4e30" loc="108:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x408c4cd8" loc="108:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x408de480" loc="124:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x408c69c8" loc="102:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x408c6870" loc="102:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x408c8a10" loc="86:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408c88b8" loc="86:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x408c6018" loc="99:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x408c7ea8" loc="99:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x408c4850" loc="106:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x408c3cc8" loc="112:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x408c2690" loc="115:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x408de010" loc="122:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x408c6e00" loc="103:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x408c8010" loc="72:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x408c7010" loc="92:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408c8e80" loc="92:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x408dd7d0" loc="80:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x408ddcd0" loc="88:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40906070" loc="74:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40906558" loc="84:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="76:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision$&#10; @date $Date$&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x40937d20" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40934308" loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="31:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x40931038" loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x40935b50" loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date$&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x4092c940" loc="69:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a cleint id&#10;&#10; </short>
          <long>&#10; Enqueue a cleint id&#10;&#10; @param cleintId - the cleint id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40933320"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4092c7e8" loc="69:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40933320"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x4092f5c0" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x4092fc80" loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40933320"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4092fb28" loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40933320"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x4092c258" loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the cleint id of the next resource in the queue.</short>
          <long>&#10; Retreive the cleint id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The cleint id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x40933320"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x409c7660" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x409e1170" loc="63:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x409e2b28" loc="63:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x409e1010" loc="63:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x409e2690" loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x409e2210" loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x409e20b8" loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x409ec090" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409cdf20" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x409cd770" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="34:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409cd618" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x409ea2a0" loc="61:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409ea148" loc="61:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x409ec968" loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409ec810" loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/LocalTime.nc">
      <documentation loc="25:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40aa9310" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40aa9310"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40aa97f0" loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ParameterInit.nc">
      <documentation loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision$&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x40b8cce8" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40b8cce8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x40b87348" loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40b8cce8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x40b871f0" loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40b8cce8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionPacket" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x40c2b688" loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c2b330" loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x40c2b528" loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x40c2eb20" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c2e7b8" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40c2e9c0" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x40c2c8d8" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x40c04a50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c2c550" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x40c2c778" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x40c04a50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x40c2e3b8" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c2e260" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x40c2cec8" loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c2cd70" loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x40c2c168" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x40c04a50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c2c010" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Get" loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Get.nc">
      <documentation loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Get.nc">
        <short>&#10; The Get interface is intended for synchronous reading of small&#10; values.</short>
        <long>&#10; The Get interface is intended for synchronous reading of small&#10; values. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, the get() call must&#10; be guaranteed to succeed.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x40c02850" loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Get.nc">
          <interfacedef-ref qname="Get"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40c02850"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40c02ce0" loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Get.nc">
        <documentation loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Get.nc">
          <short>&#10; Retrieves a value of type val_t.</short>
          <long>&#10; Retrieves a value of type val_t.&#10;&#10; @return the value itself&#10;</long>
        </documentation>
        <interfacedef-ref qname="Get"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40c02850"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Pool.nc">
      <documentation loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date$&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40c1f9a8" loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40c1f9a8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40c1a770" loc="97:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="91:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40c1f9a8"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x40c1c938" loc="80:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="74:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x40c1fe48" loc="61:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x40c1a010" loc="89:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="82:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40c1f9a8"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x40c1cde8" loc="89:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40c1f9a8"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x40c1c400" loc="72:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="63:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Queue.nc">
      <documentation loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date$&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40c37268" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40c37268"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x40c34468" loc="73:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40c37268"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x40c33330" loc="90:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="83:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40c37268"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x40c331d8" loc="90:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40c37268"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x401b9740"/>
              <value-structured>
                <type-tag size="I:0" alignment="I:1"><attribute-ref name="one" ref="0x401b9740"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x40c33c28" loc="101:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="92:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40c37268"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40c33ad0" loc="101:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x40c34038" loc="65:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x40c34b10" loc="81:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="75:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40c37268"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x40c37708" loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x40c37b50" loc="58:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Stack" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/Stack.nc">
      <documentation loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/Stack.nc">
        <short>&#10;  Interface to a Stack list (top / bottom accessibility) &#10;  that contains items of a specific type.</short>
        <long>&#10;  Interface to a Stack list (top / bottom accessibility) &#10;  that contains items of a specific type. &#10;  The stack has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Scott Moeller&#10;  @date   $Date: 2010/03/24 00:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40c43c38" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/Stack.nc">
          <interfacedef-ref qname="Stack"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40c43c38"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="top" ref="0x40c40e18" loc="75:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/Stack.nc">
        <documentation loc="69:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/Stack.nc">
          <short>&#10; Get the top of the stack without removing it.</short>
          <long>&#10; Get the top of the stack without removing it. If the stack&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The top of the stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Stack"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40c43c38"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="pushTop" ref="0x40c3da20" loc="108:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/Stack.nc">
        <documentation loc="101:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/Stack.nc">
          <short>&#10; Push an element to the top of the stack.</short>
          <long>&#10; Push an element to the top of the stack.&#10;&#10; @param 't ONE newVal' - the element to push&#10; @return SUCCESS if the element was pushed successfully, FAIL&#10;                 if it was not pushed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Stack"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40c43c38"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x40c3d8c8" loc="108:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/Stack.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40c43c38"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x401b9740"/>
              <value-structured>
                <type-tag size="I:0" alignment="I:1"><attribute-ref name="one" ref="0x401b9740"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pushBottom" ref="0x40c3c368" loc="117:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/Stack.nc">
        <documentation loc="110:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/Stack.nc">
          <short>&#10; Push an element to the bottom of the stack.</short>
          <long>&#10; Push an element to the bottom of the stack.&#10;&#10; @param 't ONE newVal' - the element to push&#10; @return SUCCESS if the element was pushed successfully, FAIL&#10;                 if it was not pushed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Stack"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40c43c38"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x40c3c210" loc="117:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/Stack.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40c43c38"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x401b9740"/>
              <value-structured>
                <type-tag size="I:0" alignment="I:1"><attribute-ref name="one" ref="0x401b9740"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x40c3cc58" loc="128:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/Stack.nc">
        <documentation loc="119:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/Stack.nc">
          <short>&#10; Return the nth element of the stack without altering it, &#10; where 0 is the bottom of the stack and (size - 1) is the top.</short>
          <long>&#10; Return the nth element of the stack without altering it, &#10; where 0 is the bottom of the stack and (size - 1) is the top. &#10; If the element requested is larger than the current stack size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Stack"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40c43c38"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40c3cb00" loc="128:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/Stack.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="popBottom" ref="0x40c3d210" loc="99:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/Stack.nc">
        <documentation loc="93:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/Stack.nc">
          <short>&#10; Pop the bottom of the stack.</short>
          <long>&#10; Pop the bottom of the stack. If the stack is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The bottom of the stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Stack"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40c43c38"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="popTop" ref="0x40c3e4c0" loc="83:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/Stack.nc">
        <documentation loc="77:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/Stack.nc">
          <short>&#10; Pop the top of the stack.</short>
          <long>&#10; Pop the top of the stack. If the stack is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The top of the stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Stack"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40c43c38"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x40c409f8" loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/Stack.nc">
        <documentation loc="62:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/Stack.nc">
          <short>&#10; The maximum number of elements the stack can hold.</short>
          <long>&#10; The maximum number of elements the stack can hold.&#10;&#10; @return The maximum stack size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Stack"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="bottom" ref="0x40c3eb30" loc="91:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/Stack.nc">
        <documentation loc="85:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/Stack.nc">
          <short>&#10; Get the bottom of the stack without removing it.</short>
          <long>&#10; Get the bottom of the stack without removing it. If the stack&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The bottom of the stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Stack"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40c43c38"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x40c400f8" loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/Stack.nc">
        <documentation loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/Stack.nc">
          <short>&#10; Returns if the stack is empty.</short>
          <long>&#10; Returns if the stack is empty.&#10;&#10; @return Whether the stack is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Stack"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x40c40540" loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/Stack.nc">
        <documentation loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/Stack.nc">
          <short>&#10; The number of elements currently in the stack.</short>
          <long>&#10; The number of elements currently in the stack.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Stack"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BcpRouterForwarderIF" loc="1:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRouterForwarderIF.nc">
      <function command="" provided="0" name="getLinkRate" ref="0x40c53168" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRouterForwarderIF.nc">
        <interfacedef-ref qname="BcpRouterForwarderIF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor_p" ref="0x40c53010" loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRouterForwarderIF.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="setNotifyBurstyLinkNeighbor" ref="0x40c57c08" loc="24:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRouterForwarderIF.nc">
        <documentation loc="19:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRouterForwarderIF.nc">
          <short>&#10; Notifies the forwarding engine that there exist neighbors that have good temporary links,&#10;  and that the next data packet header should include this information with the hope that&#10;  the neighbor snoops it and re-evaluates the link with the new ETX 1.0&#10;</short>
        </documentation>
        <interfacedef-ref qname="BcpRouterForwarderIF"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor_p" ref="0x40c57ab0" loc="24:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRouterForwarderIF.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="txNoAck" ref="0x40c562c8" loc="30:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRouterForwarderIF.nc">
        <documentation loc="26:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRouterForwarderIF.nc">
          <short>&#10; The following are used to track link transmission&#10;  success statistics.</short>
          <long>&#10; The following are used to track link transmission&#10;  success statistics.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BcpRouterForwarderIF"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor_p" ref="0x40c56170" loc="30:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRouterForwarderIF.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="txAck" ref="0x40c568c0" loc="31:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRouterForwarderIF.nc">
        <interfacedef-ref qname="BcpRouterForwarderIF"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor_p" ref="0x40c56768" loc="31:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRouterForwarderIF.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="updateNeighborBackpressure" ref="0x40c53a28" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRouterForwarderIF.nc">
        <documentation loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRouterForwarderIF.nc">
          <short>&#10; Updates to the backlog information arriving through&#10;  either beacons or received data packet headers.</short>
          <long>&#10; Updates to the backlog information arriving through&#10;  either beacons or received data packet headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BcpRouterForwarderIF"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor_p" ref="0x40c53648" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRouterForwarderIF.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
            </type-int>
          </variable>
          <variable name="rcvBackpressure_p" ref="0x40c538c8" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRouterForwarderIF.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="updateRouting" ref="0x40c5aab8" loc="8:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRouterForwarderIF.nc">
        <documentation loc="2:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRouterForwarderIF.nc">
          <short>&#10; Determines whether a next-hop neighbor exists with&#10;  positive weight.</short>
          <long>&#10; Determines whether a next-hop neighbor exists with&#10;  positive weight.&#10;  If one does, signals SUCCESS and signals setNextHopAddress()&#10;  If not returns FAIL&#10;</long>
        </documentation>
        <interfacedef-ref qname="BcpRouterForwarderIF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="localBackpressure_p" ref="0x40c5a960" loc="8:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRouterForwarderIF.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="updateNeighborSnoop" ref="0x40c52db0" loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRouterForwarderIF.nc">
        <documentation loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRouterForwarderIF.nc">
          <short>&#10; Updates to the backlog information arriving through&#10;  snooped neighbor packet headers.</short>
          <long>&#10; Updates to the backlog information arriving through&#10;  snooped neighbor packet headers.&#10; Also passes information needed to detect burst link availability (STLE)&#10;</long>
        </documentation>
        <interfacedef-ref qname="BcpRouterForwarderIF"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="localBackpressure_p" ref="0x40c52010" loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRouterForwarderIF.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </variable>
          <variable name="snoopBackpressure_p" ref="0x40c522a0" loc="52:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRouterForwarderIF.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </variable>
          <variable name="nhBackpressure_p" ref="0x40c52528" loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRouterForwarderIF.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </variable>
          <variable name="nodeTxCount_p" ref="0x40c52770" loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRouterForwarderIF.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
          <variable name="neighbor_p" ref="0x40c529c0" loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRouterForwarderIF.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
            </type-int>
          </variable>
          <variable name="burstNotifyAddr" ref="0x40c52c30" loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRouterForwarderIF.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="updateLinkSuccess" ref="0x40c55170" loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRouterForwarderIF.nc">
        <interfacedef-ref qname="BcpRouterForwarderIF"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor_p" ref="0x40c56d38" loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRouterForwarderIF.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
            </type-int>
          </variable>
          <variable name="txCount_p" ref="0x40c55010" loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRouterForwarderIF.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="updateLinkRate" ref="0x40c559e0" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRouterForwarderIF.nc">
        <documentation loc="34:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRouterForwarderIF.nc">
          <short>&#10; updateLinkRate submits a new packet transmit time for exponential averaging.</short>
          <long>&#10; updateLinkRate submits a new packet transmit time for exponential averaging.&#10;  statistics are kept per link.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BcpRouterForwarderIF"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor_p" ref="0x40c555d8" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRouterForwarderIF.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
            </type-int>
          </variable>
          <variable name="newLinkPacketTxTime_p" ref="0x40c55880" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRouterForwarderIF.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="setNextHopAddress" ref="0x40c57490" loc="17:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRouterForwarderIF.nc">
        <documentation loc="10:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRouterForwarderIF.nc">
          <short>&#10; Establishes the next-hop neighbor to be used&#10;  by the Forwarding Engine&#10;&#10;  Also passes on the backpresure value of that neighbor&#10; </short>
          <long>&#10; Establishes the next-hop neighbor to be used&#10;  by the Forwarding Engine&#10;&#10;  Also passes on the backpresure value of that neighbor&#10; @return active status of the forwarder.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BcpRouterForwarderIF"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="nextHopAddress_p" ref="0x40c57088" loc="17:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRouterForwarderIF.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403c7ea8"/></typename>
            </type-int>
          </variable>
          <variable name="nextHopBackpressure_p" ref="0x40c57330" loc="17:/home/xinchaol/local/src/tinyos-2.x/tos/lib/net/bcp/BcpRouterForwarderIF.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Set" loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Set.nc">
      <documentation loc="33:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Set.nc">
        <short>&#10; The Set interface is intended for synchronous writing of small&#10; values.</short>
        <long>&#10; The Set interface is intended for synchronous writing of small&#10; values. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, the set() call must&#10; be guaranteed to succeed.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be stored&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x40df0dc0" loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Set.nc">
          <interfacedef-ref qname="Set"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40df0dc0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="set" ref="0x40ded390" loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Set.nc">
        <documentation loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Set.nc">
          <short>&#10; Stores a value of type val_t.</short>
          <long>&#10; Stores a value of type val_t.&#10;&#10; @param val the value to be stored&#10;</long>
        </documentation>
        <interfacedef-ref qname="Set"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40df0dc0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x40ded238" loc="55:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/Set.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40df0dc0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x40eaa170" loc="31:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40eacd30" loc="31:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x40eaa010" loc="31:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x40eafe38" loc="15:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x40eac720" loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40eac3a8" loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403d11f0"/>
                <typename><typedef-ref name="message_t" ref="0x403d0010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x40eac5c0" loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
      <documentation loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x40e9a1a8" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <documentation loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
          <long> &#10; Split phase event to indicate that the serial hardware is now idle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x40e9fd28" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <documentation loc="34:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="36:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x40ea76c8" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x40e9e408" loc="61:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x40e9d520" loc="83:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="76:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40e9d3c8" loc="83:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x40e9e930" loc="68:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="63:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x40ea7df8" loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40ea7ca0" loc="54:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x40e9da28" loc="89:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="85:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
          <long>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x40e9ee90" loc="74:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="70:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x40ea5798" loc="60:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x40ea5d60" loc="70:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="62:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x40ea5188" loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x40ea5030" loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x40ea44c0" loc="80:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="72:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40ea4368" loc="80:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="23:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x40ea2650" loc="51:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x40ea2e38" loc="58:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="53:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40ea2ce0" loc="58:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x40ea0570" loc="69:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40ea0418" loc="69:/home/xinchaol/local/src/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40f70480" loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40f70130" loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40f70320" loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x40f6d908" loc="79:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40f6d7b0" loc="79:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40f6c170" loc="90:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40f6ddc0" loc="90:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40f6c010" loc="90:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x40f6fcc0" loc="65:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x40f6b010" loc="99:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40f6ca98" loc="99:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40f6cc88" loc="99:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40f6ce80" loc="99:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x40f6d2f8" loc="72:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40f6f370" loc="57:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40f70d90" loc="57:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40f6f010" loc="57:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bcd68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40f6f208" loc="57:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/UartByte.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40f59010" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="39:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40f5ce68" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40f598a8" loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40f59540" loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x40f59748" loc="56:/home/xinchaol/local/src/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x40f84010" loc="44:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x40f856f0" loc="42:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x40f835f8" loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40f834a0" loc="49:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x40f84cc8" loc="47:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x40f88e58" loc="40:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x40f852b8" loc="41:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x40f85b30" loc="43:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f2bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x40f84410" loc="45:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402e9b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x40f84918" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40f847c0" loc="46:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x40f830c8" loc="48:/home/xinchaol/local/src/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bc708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
